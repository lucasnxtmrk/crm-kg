{
    "sourceFile": "components/partials/header/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1745864023253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1745864067259,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-'use client'; // üëà agora o Header √© client-side para usar hooks\n \n import React, { useEffect, useState } from 'react';\n import { useParams } from 'next/navigation'; // üõ† Para pegar o slug\n import HeaderContent from './header-content';\n"
                },
                {
                    "date": 1745864102360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,81 +1,37 @@\n+import React from 'react'\n+import HeaderContent from './header-content'\n+import HeaderSearch from './header-search'\n+import ProfileInfo from './profile-info'\n+import Notifications from './notifications'\n+import Messages from \"./messages\"\n+import { Cart } from './cart'\n+import ThemeSwitcher from './theme-switcher'\n+import { SidebarToggle } from '@/components/partials/sidebar/sidebar-toggle'\n+import { SheetMenu } from '@/components/partials/sidebar/menu/sheet-menu'\n+import HorizontalMenu from \"./horizontal-menu\"\n+import LocalSwitcher from './locale-switcher'\n+import HeaderLogo from \"./header-logo\"\n \n-import React, { useEffect, useState } from 'react';\n-import { useParams } from 'next/navigation'; // üõ† Para pegar o slug\n-import HeaderContent from './header-content';\n-import HeaderSearch from './header-search';\n-import ProfileInfo from './profile-info';\n-import Notifications from './notifications';\n-import Messages from \"./messages\";\n-import { Cart } from './cart';\n-import ThemeSwitcher from './theme-switcher';\n-import { SidebarToggle } from '@/components/partials/sidebar/sidebar-toggle';\n-import { SheetMenu } from '@/components/partials/sidebar/menu/sheet-menu';\n-import HorizontalMenu from \"./horizontal-menu\";\n-import LocalSwitcher from './locale-switcher';\n-import HeaderLogo from \"./header-logo\";\n-import Image from \"next/image\";\n \n-// Define a tipagem da plataforma\n-interface Plataforma {\n-  id: string;\n-  nome: string;\n-  imagem?: string;\n-  cor: string;\n-}\n+const DashcodeHeader = async () => {\n \n-const DashcodeHeader = () => {\n-  const params = useParams();\n-  const plataformaSlug = params?.id as string;\n-  const [plataformaAtual, setPlataformaAtual] = useState<Plataforma | null>(null);\n \n-  useEffect(() => {\n-    const fetchPlataforma = async () => {\n-      try {\n-        const res = await fetch('/api/plataformas'); // üõ† Busca todas plataformas\n-        const plataformas: Plataforma[] = await res.json();\n-        const plataforma = plataformas.find(p => p.id === plataformaSlug);\n-        setPlataformaAtual(plataforma || null);\n-      } catch (error) {\n-        console.error('Erro ao buscar plataformas:', error);\n-      }\n-    };\n+    return (\n+        <>\n+            <HeaderContent>\n+                <div className=' flex gap-3 items-center'>\n+                    <HeaderLogo />\n+                    <SidebarToggle />\n+                </div>\n+                <div className=\"nav-tools flex items-center  md:gap-4 gap-3\">\n+                    <ThemeSwitcher />\n+                    <ProfileInfo />\n+                    <SheetMenu />\n+                </div>\n+            </HeaderContent>\n+            <HorizontalMenu />\n+        </>\n+    )\n+}\n \n-    if (plataformaSlug) {\n-      fetchPlataforma();\n-    }\n-  }, [plataformaSlug]);\n-\n-  return (\n-    <>\n-      <HeaderContent>\n-        <div className=\"flex gap-3 items-center\">\n-          <HeaderLogo />\n-          <SidebarToggle />\n-        </div>\n-\n-        {/* üñºÔ∏è Plataforma atual no meio */}\n-        {plataformaAtual && (\n-          <div className=\"flex-1 flex justify-center items-center\">\n-            <Image\n-              src={plataformaAtual.imagem || '/placeholder.png'}\n-              alt={plataformaAtual.nome}\n-              width={120}\n-              height={40}\n-              className=\"object-contain\"\n-            />\n-          </div>\n-        )}\n-\n-        <div className=\"nav-tools flex items-center md:gap-4 gap-3\">\n-          <ThemeSwitcher />\n-          <ProfileInfo />\n-          <SheetMenu />\n-        </div>\n-      </HeaderContent>\n-\n-      <HorizontalMenu />\n-    </>\n-  );\n-};\n-\n-export default DashcodeHeader;\n+export default DashcodeHeader\n\\ No newline at end of file\n"
                }
            ],
            "date": 1745864023253,
            "name": "Commit-0",
            "content": "'use client'; // üëà agora o Header √© client-side para usar hooks\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'next/navigation'; // üõ† Para pegar o slug\nimport HeaderContent from './header-content';\nimport HeaderSearch from './header-search';\nimport ProfileInfo from './profile-info';\nimport Notifications from './notifications';\nimport Messages from \"./messages\";\nimport { Cart } from './cart';\nimport ThemeSwitcher from './theme-switcher';\nimport { SidebarToggle } from '@/components/partials/sidebar/sidebar-toggle';\nimport { SheetMenu } from '@/components/partials/sidebar/menu/sheet-menu';\nimport HorizontalMenu from \"./horizontal-menu\";\nimport LocalSwitcher from './locale-switcher';\nimport HeaderLogo from \"./header-logo\";\nimport Image from \"next/image\";\n\n// Define a tipagem da plataforma\ninterface Plataforma {\n  id: string;\n  nome: string;\n  imagem?: string;\n  cor: string;\n}\n\nconst DashcodeHeader = () => {\n  const params = useParams();\n  const plataformaSlug = params?.id as string;\n  const [plataformaAtual, setPlataformaAtual] = useState<Plataforma | null>(null);\n\n  useEffect(() => {\n    const fetchPlataforma = async () => {\n      try {\n        const res = await fetch('/api/plataformas'); // üõ† Busca todas plataformas\n        const plataformas: Plataforma[] = await res.json();\n        const plataforma = plataformas.find(p => p.id === plataformaSlug);\n        setPlataformaAtual(plataforma || null);\n      } catch (error) {\n        console.error('Erro ao buscar plataformas:', error);\n      }\n    };\n\n    if (plataformaSlug) {\n      fetchPlataforma();\n    }\n  }, [plataformaSlug]);\n\n  return (\n    <>\n      <HeaderContent>\n        <div className=\"flex gap-3 items-center\">\n          <HeaderLogo />\n          <SidebarToggle />\n        </div>\n\n        {/* üñºÔ∏è Plataforma atual no meio */}\n        {plataformaAtual && (\n          <div className=\"flex-1 flex justify-center items-center\">\n            <Image\n              src={plataformaAtual.imagem || '/placeholder.png'}\n              alt={plataformaAtual.nome}\n              width={120}\n              height={40}\n              className=\"object-contain\"\n            />\n          </div>\n        )}\n\n        <div className=\"nav-tools flex items-center md:gap-4 gap-3\">\n          <ThemeSwitcher />\n          <ProfileInfo />\n          <SheetMenu />\n        </div>\n      </HeaderContent>\n\n      <HorizontalMenu />\n    </>\n  );\n};\n\nexport default DashcodeHeader;\n"
        }
    ]
}