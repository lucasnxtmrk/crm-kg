{
    "sourceFile": "components/partials/sidebar/menu/sideabr-nav.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1744233633018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1744233633018,
            "name": "Commit-0",
            "content": "'use client'\nimport React, { useEffect, useState } from 'react'\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Submenu, Group } from '@/lib/menus';\nimport { useParams, usePathname } from 'next/navigation';\nimport { Link } from \"@/components/navigation\"\nimport { useConfig } from '@/hooks/use-config';\nimport { Button } from '@/components/ui/button';\nimport MenuLabel from '../common/menu-label';\nimport MenuItem from '../common/menu-item';\nimport { Icon } from '@/components/ui/icon';\nimport { CollapseMenuButton2 } from '../common/collapse-menu-button2';\nimport TeamSwitcher from '../common/team-switcher';\nimport SearchBar from '../common/search-bar';\nimport { getLangDir } from 'rtl-detect';\nconst SidebarNav = ({ menuList }: { menuList: Group[] }) => {\n  const [config, setConfig] = useConfig()\n  const pathname = usePathname();\n  const params = useParams<{ locale: string; }>();\n  const direction = getLangDir(params?.locale ?? '');\n  const activeKey = pathname?.split('/')?.[2];\n  const data = menuList.find(item => item.id === activeKey);\n\n  // Render null if config.subMenu is true\n  if (config.subMenu || !config.hasSubMenu) {\n    return null;\n  }\n\n\n\n\n  return (\n    <div className=' h-full bg-sidebar  shadow-base  w-[228px] relative z-20'>\n      {config.sidebarBgImage !== undefined && (\n        <div\n          className=\" absolute left-0 top-0  z-10 w-full h-full bg-cover bg-center opacity-[0.07]\"\n          style={{ backgroundImage: `url(${config.sidebarBgImage})` }}\n        ></div>\n      )}\n\n\n      <ScrollArea className=\"[&>div>div[style]]:!block h-full\" dir={direction}>\n        <div className=\"px-4 space-y-3 mt-6\">\n        </div>\n        <div className='px-4 pt-6  sticky top-0  bg-sidebar z-20'>\n          {data?.groupLabel && (\n            <MenuLabel label={data?.groupLabel} className=' text-xl py-0 font-semibold  capitalize text-default ' />\n          )}\n        </div>\n        <nav className=\"mt-6 h-full w-full \">\n          <ul className=\" h-full  space-y-1.5 flex flex-col  items-start  px-4 pb-8 \">\n\n            {data?.menus.map(\n              ({ submenus }, index) =>\n                submenus?.map(({ href, label, active, icon, children: subChildren }, i) => (\n                  <li key={`double-menu-index-${i}`} className=' w-full '>\n                    {subChildren?.length === 0 ? (\n                      <Button asChild color={active ? 'default' : 'secondary'} variant={active ? 'default' : 'ghost'} fullWidth className='  h-10 capitalize justify-start md:px-3 px-3 '>\n                        <Link href={href}>\n                          {icon && (\n                            <Icon icon={icon} className=\"h-5 w-5 me-2\" />\n                          )}\n\n                          <p>\n                            {label}\n                          </p>\n                        </Link>\n                      </Button>\n                    ) : (\n                      subChildren &&\n                      <CollapseMenuButton2\n                        icon={icon}\n                        label={label}\n                        active={active}\n                        submenus={subChildren}\n                      />\n                    )}\n\n                  </li>\n                ))\n            )}\n\n          </ul>\n        </nav>\n\n      </ScrollArea>\n    </div>\n  )\n}\n\nexport default SidebarNav"
        }
    ]
}