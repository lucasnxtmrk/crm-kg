{
    "sourceFile": "components/partials/sidebar/menu/menu-classic.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1744131285571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744131308258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,10 +143,8 @@\n                                 )}\n \n                             </li>\n                         ))}\n-                        {!collapsed && (\n-                        )}\n                     </ul>\n                 </nav>\n \n             </ScrollArea>\n"
                }
            ],
            "date": 1744131285571,
            "name": "Commit-0",
            "content": "\"use client\";\n\nimport React from 'react'\nimport { Ellipsis, LogOut } from \"lucide-react\";\nimport { usePathname } from \"@/components/navigation\";\nimport { cn } from \"@/lib/utils\";\nimport { getMenuList } from \"@/lib/menus\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport {\n    Tooltip,\n    TooltipTrigger,\n    TooltipContent,\n    TooltipProvider\n} from \"@/components/ui/tooltip\";\nimport { useConfig } from \"@/hooks/use-config\";\nimport MenuLabel from \"../common/menu-label\";\nimport MenuItem from \"../common/menu-item\";\nimport { CollapseMenuButton } from \"../common/collapse-menu-button\";\nimport MenuWidget from \"../common/menu-widget\";\nimport SearchBar from '@/components/partials/sidebar/common/search-bar'\nimport TeamSwitcher from '../common/team-switcher'\nimport { useTranslations } from 'next-intl';\nimport { useParams } from 'next/navigation'\nimport { getLangDir } from 'rtl-detect';\nimport Logo from '@/components/logo';\nimport SidebarHoverToggle from '@/components/partials/sidebar/sidebar-hover-toggle';\nimport { useMenuHoverConfig } from '@/hooks/use-menu-hover';\nimport { useMediaQuery } from '@/hooks/use-media-query';\n\n\nexport function MenuClassic({ }) {\n    // translate\n    const t = useTranslations(\"Menu\")\n    const pathname = usePathname();\n    const params = useParams<{ locale: string; }>();\n    const direction = getLangDir(params?.locale ?? '');\n\n    const isDesktop = useMediaQuery('(min-width: 1280px)')\n\n\n    const menuList = getMenuList(pathname, t);\n    const [config, setConfig] = useConfig()\n    const collapsed = config.collapsed\n    const [hoverConfig] = useMenuHoverConfig();\n    const { hovered } = hoverConfig;\n\n    const scrollableNodeRef = React.useRef<HTMLDivElement>(null);\n    const [scroll, setScroll] = React.useState(false);\n\n    React.useEffect(() => {\n        const handleScroll = () => {\n            if (scrollableNodeRef.current && scrollableNodeRef.current.scrollTop > 0) {\n                setScroll(true);\n            } else {\n                setScroll(false);\n            }\n        };\n        scrollableNodeRef.current?.addEventListener(\"scroll\", handleScroll);\n    }, [scrollableNodeRef]);\n\n    return (\n        <>\n            {isDesktop && (\n                <div className=\"flex items-center justify-between  px-4 py-4\">\n                    <Logo />\n                    <SidebarHoverToggle />\n                </div>\n            )}\n\n\n\n\n            <ScrollArea className=\"[&>div>div[style]]:!block\" dir={direction}>\n                {isDesktop && (\n                    <div className={cn(' space-y-3 mt-6 ', {\n                        'px-4': !collapsed || hovered,\n                        'text-center': collapsed || !hovered\n                    })}>\n\n                        <TeamSwitcher />\n                        <SearchBar />\n                    </div>\n\n                )}\n\n                <nav className=\"mt-8 h-full w-full\">\n                    <ul className=\" h-full flex flex-col min-h-[calc(100vh-48px-36px-16px-32px)] lg:min-h-[calc(100vh-32px-40px-32px)] items-start space-y-1 px-4\">\n                        {menuList?.map(({ groupLabel, menus }, index) => (\n                            <li className={cn(\"w-full\", groupLabel ? \"\" : \"\")} key={index}>\n                                {(!collapsed || hovered) && groupLabel || !collapsed === undefined ? (\n                                    <MenuLabel label={groupLabel} />\n                                ) : collapsed && !hovered && !collapsed !== undefined && groupLabel ? (\n                                    <TooltipProvider>\n                                        <Tooltip delayDuration={100}>\n                                            <TooltipTrigger className=\"w-full\">\n                                                <div className=\"w-full flex justify-center items-center\">\n                                                    <Ellipsis className=\"h-5 w-5 text-default-700\" />\n                                                </div>\n                                            </TooltipTrigger>\n                                            <TooltipContent side=\"right\">\n                                                <p>{groupLabel}</p>\n                                            </TooltipContent>\n                                        </Tooltip>\n                                    </TooltipProvider>\n                                ) : (\n                                    null\n                                )}\n\n                                {menus.map(\n                                    ({ href, label, icon, active, id, submenus }, index) =>\n                                        submenus.length === 0 ? (\n                                            <div className=\"w-full mb-2 last:mb-0\" key={index}>\n                                                <TooltipProvider disableHoverableContent>\n                                                    <Tooltip delayDuration={100}>\n                                                        <TooltipTrigger asChild>\n\n                                                            <div>\n\n                                                                <MenuItem label={label} icon={icon} href={href} active={active} id={id} collapsed={collapsed} />\n                                                            </div>\n                                                        </TooltipTrigger>\n                                                        {collapsed && (\n                                                            <TooltipContent side=\"right\">\n                                                                {label}\n                                                            </TooltipContent>\n                                                        )}\n                                                    </Tooltip>\n                                                </TooltipProvider>\n                                            </div>\n                                        ) : (\n                                            <div className=\"w-full mb-2\" key={index}>\n                                                <CollapseMenuButton\n                                                    icon={icon}\n                                                    label={label}\n                                                    active={active}\n                                                    submenus={submenus}\n                                                    collapsed={collapsed}\n                                                    id={id}\n\n                                                />\n                                            </div>\n                                        )\n                                )}\n\n                            </li>\n                        ))}\n                        {!collapsed && (\n                        )}\n                    </ul>\n                </nav>\n\n            </ScrollArea>\n        </>\n    );\n}\n"
        }
    ]
}