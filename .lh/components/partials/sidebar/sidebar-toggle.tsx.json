{
    "sourceFile": "components/partials/sidebar/sidebar-toggle.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1746910801753,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746911547630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,14 +19,14 @@\n     }\n     if (config.sidebar === 'two-column') {\n         return (\n \n-            // <Button\n-            //     onClick={() => setConfig((prevConfig) => ({ ...prevConfig, subMenu: !prevConfig.subMenu }))}\n-            //     className=\"rounded-md h-auto p-0 hover:bg-transparent hover:text-default-800 text-default-500 \"\n-            //     variant=\"ghost\"\n-            //     size=\"icon\"\n-            // >\n+            <Button\n+                onClick={() => setConfig((prevConfig) => ({ ...prevConfig, subMenu: !prevConfig.subMenu }))}\n+                className=\"rounded-md h-auto p-0 hover:bg-transparent hover:text-default-800 text-default-500 \"\n+                variant=\"ghost\"\n+                size=\"icon\"\n+            >\n                 {config.subMenu ? (\n                     <motion.div\n                         key={config.subMenu ? 'collapsed' : 'expanded'}\n                         initial={{ x: -20, opacity: 0 }}\n"
                },
                {
                    "date": 1746911632338,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,86 +1,93 @@\n 'use client'\n import { ChevronLeft } from \"lucide-react\";\n-\n import { cn } from \"@/lib/utils\";\n import { Button } from \"@/components/ui/button\";\n import { useConfig } from \"@/hooks/use-config\";\n import { useMediaQuery } from \"@/hooks/use-media-query\";\n import { Icon } from \"@/components/ui/icon\";\n import { motion } from 'framer-motion';\n \n-\n export function SidebarToggle() {\n-    const [config, setConfig] = useConfig()\n-    const collapsed = config.collapsed\n-    const isDesktop = useMediaQuery('(min-width: 1280px)')\n-    if (!isDesktop) return null\n-    if (config.sidebar === 'two-column' && !config.hasSubMenu || config.menuHidden || config.layout === \"horizontal\" || config.sidebar === 'classic') {\n-        return null\n-    }\n-    if (config.sidebar === 'two-column') {\n-        return (\n+  const [config, setConfig] = useConfig();\n+  const collapsed = config.collapsed;\n+  const isDesktop = useMediaQuery('(min-width: 1280px)');\n \n-            <Button\n-                onClick={() => setConfig((prevConfig) => ({ ...prevConfig, subMenu: !prevConfig.subMenu }))}\n-                className=\"rounded-md h-auto p-0 hover:bg-transparent hover:text-default-800 text-default-500 \"\n-                variant=\"ghost\"\n-                size=\"icon\"\n-            >\n-                {config.subMenu ? (\n-                    <motion.div\n-                        key={config.subMenu ? 'collapsed' : 'expanded'}\n-                        initial={{ x: -20, opacity: 0 }}\n-                        animate={{ x: 0, opacity: 1 }}\n-                        exit={{ x: -20, opacity: 0 }}\n-                        transition={{ type: \"spring\", stiffness: 300, damping: 20 }}\n-                    >\n-                        <Icon icon=\"heroicons:arrow-small-right-solid\" className=\"h-6 w-6\" />\n-                    </motion.div>\n-                ) : (\n-                    <motion.div\n-                        key={config.subMenu ? 'collapsed' : 'expanded'}\n-                        initial={{ scale: 0.5, opacity: 0 }}\n-                        animate={{ scale: 1, opacity: 1 }}\n-                        exit={{ scale: 0.5, opacity: 0 }}\n-                        transition={{ type: \"spring\", stiffness: 300, damping: 20 }}\n-                    >\n-                        <Icon icon=\"heroicons:bars-3-bottom-left-solid\" className=\"h-6 w-6\" />\n-                    </motion.div>\n-                )}\n-            </Button>\n+  if (!isDesktop) return null;\n \n-        )\n-    }\n+  const shouldHide =\n+    (config.sidebar === 'two-column' && !config.hasSubMenu) ||\n+    config.menuHidden ||\n+    config.layout === \"horizontal\" ||\n+    config.sidebar === 'classic';\n+\n+  if (shouldHide) return null;\n+\n+  if (config.sidebar === 'two-column') {\n     return (\n+      <Button\n+        onClick={() =>\n+          setConfig((prevConfig) => ({\n+            ...prevConfig,\n+            subMenu: !prevConfig.subMenu,\n+          }))\n+        }\n+        className=\"rounded-md h-auto p-0 hover:bg-transparent hover:text-default-800 text-default-500\"\n+        variant=\"ghost\"\n+        size=\"icon\"\n+      >\n+        {config.subMenu ? (\n+          <motion.div\n+            key=\"collapsed\"\n+            initial={{ x: -20, opacity: 0 }}\n+            animate={{ x: 0, opacity: 1 }}\n+            exit={{ x: -20, opacity: 0 }}\n+            transition={{ type: \"spring\", stiffness: 300, damping: 20 }}\n+          >\n\\ No newline at end of file\n+            <Icon icon=\"heroicons:arrow-small-right-solid\" className=\"h-6 w-6\" />\n+          </motion.div>\n+        ) : (\n+          <motion.div\n+            key=\"expanded\"\n+            initial={{ scale: 0.5, opacity: 0 }}\n+            animate={{ scale: 1, opacity: 1 }}\n+            exit={{ scale: 0.5, opacity: 0 }}\n+            transition={{ type: \"spring\", stiffness: 300, damping: 20 }}\n+          >\n+            <Icon icon=\"heroicons:bars-3-bottom-left-solid\" className=\"h-6 w-6\" />\n+          </motion.div>\n+        )}\n+      </Button>\n+    );\n+  }\n \n-        <Button\n-            onClick={() => setConfig({ ...config, collapsed: !collapsed })}\n-            className=\"rounded-md h-auto p-0 hover:bg-transparent hover:text-default-800 text-default-500 \"\n-            variant=\"ghost\"\n-            size=\"icon\"\n+  return (\n+    <Button\n+      onClick={() => setConfig({ ...config, collapsed: !collapsed })}\n+      className=\"rounded-md h-auto p-0 hover:bg-transparent hover:text-default-800 text-default-500\"\n+      variant=\"ghost\"\n+      size=\"icon\"\n+    >\n+      {collapsed ? (\n+        <motion.div\n+          key=\"collapsed\"\n+          initial={{ x: -20, opacity: 0 }}\n+          animate={{ x: 0, opacity: 1 }}\n+          exit={{ x: -20, opacity: 0 }}\n+          transition={{ type: \"spring\", stiffness: 300, damping: 20 }}\n         >\n-            {collapsed ? (\n-                <motion.div\n-                    key={collapsed ? 'collapsed' : 'expanded'}\n-                    initial={{ x: -20, opacity: 0 }}\n-                    animate={{ x: 0, opacity: 1 }}\n-                    exit={{ x: -20, opacity: 0 }}\n-                    transition={{ type: \"spring\", stiffness: 300, damping: 20 }}\n-                >\n-                    <Icon icon=\"heroicons:arrow-small-right-solid\" className=\"h-6 w-6\" />\n-                </motion.div>\n-            ) : (\n-                <motion.div\n-                    key={collapsed ? 'collapsed' : 'expanded'}\n-                    initial={{ scale: 0.5, opacity: 0 }}\n-                    animate={{ scale: 1, opacity: 1 }}\n-                    exit={{ scale: 0.5, opacity: 0 }}\n-                    transition={{ type: \"spring\", stiffness: 300, damping: 20 }}\n-                >\n-                    <Icon icon=\"heroicons:bars-3-bottom-left-solid\" className=\"h-6 w-6\" />\n-                </motion.div>\n-            )}\n-        </Button>\n-\n-    );\n-}\n+          <Icon icon=\"heroicons:arrow-small-right-solid\" className=\"h-6 w-6\" />\n+        </motion.div>\n+      ) : (\n+        <motion.div\n+          key=\"expanded\"\n+          initial={{ scale: 0.5, opacity: 0 }}\n+          animate={{ scale: 1, opacity: 1 }}\n+          exit={{ scale: 0.5, opacity: 0 }}\n+          transition={{ type: \"spring\", stiffness: 300, damping: 20 }}\n+        >\n+          <Icon icon=\"heroicons:bars-3-bottom-left-solid\" className=\"h-6 w-6\" />\n+        </motion.div>\n+      )}\n+    </Button>\n+  );\n+}\n"
                }
            ],
            "date": 1746910801753,
            "name": "Commit-0",
            "content": "'use client'\nimport { ChevronLeft } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\nimport { useConfig } from \"@/hooks/use-config\";\nimport { useMediaQuery } from \"@/hooks/use-media-query\";\nimport { Icon } from \"@/components/ui/icon\";\nimport { motion } from 'framer-motion';\n\n\nexport function SidebarToggle() {\n    const [config, setConfig] = useConfig()\n    const collapsed = config.collapsed\n    const isDesktop = useMediaQuery('(min-width: 1280px)')\n    if (!isDesktop) return null\n    if (config.sidebar === 'two-column' && !config.hasSubMenu || config.menuHidden || config.layout === \"horizontal\" || config.sidebar === 'classic') {\n        return null\n    }\n    if (config.sidebar === 'two-column') {\n        return (\n\n            // <Button\n            //     onClick={() => setConfig((prevConfig) => ({ ...prevConfig, subMenu: !prevConfig.subMenu }))}\n            //     className=\"rounded-md h-auto p-0 hover:bg-transparent hover:text-default-800 text-default-500 \"\n            //     variant=\"ghost\"\n            //     size=\"icon\"\n            // >\n                {config.subMenu ? (\n                    <motion.div\n                        key={config.subMenu ? 'collapsed' : 'expanded'}\n                        initial={{ x: -20, opacity: 0 }}\n                        animate={{ x: 0, opacity: 1 }}\n                        exit={{ x: -20, opacity: 0 }}\n                        transition={{ type: \"spring\", stiffness: 300, damping: 20 }}\n                    >\n                        <Icon icon=\"heroicons:arrow-small-right-solid\" className=\"h-6 w-6\" />\n                    </motion.div>\n                ) : (\n                    <motion.div\n                        key={config.subMenu ? 'collapsed' : 'expanded'}\n                        initial={{ scale: 0.5, opacity: 0 }}\n                        animate={{ scale: 1, opacity: 1 }}\n                        exit={{ scale: 0.5, opacity: 0 }}\n                        transition={{ type: \"spring\", stiffness: 300, damping: 20 }}\n                    >\n                        <Icon icon=\"heroicons:bars-3-bottom-left-solid\" className=\"h-6 w-6\" />\n                    </motion.div>\n                )}\n            </Button>\n\n        )\n    }\n    return (\n\n        <Button\n            onClick={() => setConfig({ ...config, collapsed: !collapsed })}\n            className=\"rounded-md h-auto p-0 hover:bg-transparent hover:text-default-800 text-default-500 \"\n            variant=\"ghost\"\n            size=\"icon\"\n        >\n            {collapsed ? (\n                <motion.div\n                    key={collapsed ? 'collapsed' : 'expanded'}\n                    initial={{ x: -20, opacity: 0 }}\n                    animate={{ x: 0, opacity: 1 }}\n                    exit={{ x: -20, opacity: 0 }}\n                    transition={{ type: \"spring\", stiffness: 300, damping: 20 }}\n                >\n                    <Icon icon=\"heroicons:arrow-small-right-solid\" className=\"h-6 w-6\" />\n                </motion.div>\n            ) : (\n                <motion.div\n                    key={collapsed ? 'collapsed' : 'expanded'}\n                    initial={{ scale: 0.5, opacity: 0 }}\n                    animate={{ scale: 1, opacity: 1 }}\n                    exit={{ scale: 0.5, opacity: 0 }}\n                    transition={{ type: \"spring\", stiffness: 300, damping: 20 }}\n                >\n                    <Icon icon=\"heroicons:bars-3-bottom-left-solid\" className=\"h-6 w-6\" />\n                </motion.div>\n            )}\n        </Button>\n\n    );\n}"
        }
    ]
}