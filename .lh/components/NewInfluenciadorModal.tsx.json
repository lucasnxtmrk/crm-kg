{
    "sourceFile": "components/NewInfluenciadorModal.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1745867526939,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1745867526939,
            "name": "Commit-0",
            "content": "'use client';\r\n\r\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n} from \"@/components/ui/dialog\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { InputGroup, InputGroupText } from \"@/components/ui/input-group\";\r\nimport { AtSign, ArrowRight, Pencil } from 'lucide-react';\r\nimport Image from \"next/image\";\r\nimport {\r\n  Select as ShadSelect,\r\n  SelectTrigger,\r\n  SelectValue,\r\n  SelectContent,\r\n  SelectItem,\r\n} from \"@/components/ui/select\";\r\n\r\n\r\ninterface NewInfluenciadorModalProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  plataformaId: string;  // vindo da página mãe\r\n}\r\n\r\nexport default function NewInfluenciadorModal({\r\n  open,\r\n  onClose,\r\n  plataformaId,\r\n}: NewInfluenciadorModalProps) {\r\n  // estados para cada campo do form\r\n  const [nome, setNome] = useState(\"\");\r\n  const [instagram, setInstagram] = useState(\"\");\r\n  const [hoverInstagram, setHoverInstagram] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [telefone, setTelefone] = useState(\"\");\r\n  const [cpf, setCpf] = useState(\"\");\r\n  const [chavepix, setChavepix] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [influenciadorPlatId, setInfluenciadorPlatId] = useState(\"\");\r\n  const [fotoPreview, setFotoPreview] = useState<string>();\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  // limpa tudo quando abrir\r\n  useEffect(() => {\r\n    if (open) {\r\n      setNome(\"\");\r\n      setInstagram(\"\");\r\n      setEmail(\"\");\r\n      setTelefone(\"\");\r\n      setCpf(\"\");\r\n      setChavepix(\"\");\r\n      setStatus(\"\");\r\n      setInfluenciadorPlatId(\"\");\r\n      setFotoPreview(undefined);\r\n    }\r\n  }, [open]);\r\n\r\n  // preview da foto\r\n  const handleFotoChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (!file) return;\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => setFotoPreview(reader.result as string);\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  // fecha ao clicar fora\r\n  const handleOpenChange = useCallback((isOpen: boolean) => {\r\n    if (!isOpen) onClose();\r\n  }, [onClose]);\r\n  \r\n  // o POST único para criar influenciador + cadastro na plataforma\r\n  const handleSubmit = async () => {\r\n    if (!nome.trim() || !status || !influenciadorPlatId.trim()) {\r\n      alert(\"Preencha nome, status e ID na plataforma\");\r\n      return;\r\n    }\r\n  \r\n    const novoInfluId = uuidv4();\r\n  \r\n    const resp = await fetch(\"/api/influenciadores\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        id: novoInfluId,\r\n        nome,\r\n        imagem: fotoPreview,\r\n        instagram,\r\n        email,\r\n        telefone,\r\n        data_cadastro: new Date().toISOString().split(\"T\")[0],\r\n        cpf,\r\n        chavepix,\r\n        status,\r\n        motivo_banimento: null,\r\n  \r\n        // campos para o nested create\r\n        plataforma_id: plataformaId,\r\n        influenciador_plataforma_id: influenciadorPlatId,\r\n      }),\r\n    });\r\n  \r\n    if (!resp.ok) {\r\n      console.error(\"Falha ao criar influenciador:\", await resp.text());\r\n      alert(\"Erro ao criar influenciador. Veja console.\");\r\n      return;\r\n    }\r\n  \r\n    onClose();\r\n  };\r\n  \r\n  if (!open) return null;\r\n  \r\n  return (\r\n    <Dialog open={open} onOpenChange={handleOpenChange}>\r\n      <DialogContent className=\"max-w-md w-full\">\r\n        <DialogHeader>\r\n          <DialogTitle>Novo Influenciador</DialogTitle>\r\n        </DialogHeader>\r\n\r\n        <div className=\"space-y-4\">\r\n          {/* FOTO + NOME */}\r\n          <div className=\"flex items-center gap-4\">\r\n            <div className=\"relative w-16 h-16 rounded-full overflow-hidden border\">\r\n              {fotoPreview\r\n                ? <Image src={fotoPreview} alt=\"Foto\" fill className=\"object-cover\"/>\r\n                : <div className=\"w-full h-full bg-muted flex items-center justify-center text-white\">+</div>\r\n              }\r\n              <div\r\n                className=\"absolute inset-0 bg-black/40 opacity-0 hover:opacity-100 flex items-center justify-center cursor-pointer\"\r\n                onClick={() => fileInputRef.current?.click()}\r\n              >\r\n                <Pencil className=\"w-5 h-5 text-white\"/>\r\n              </div>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                className=\"hidden\"\r\n                ref={fileInputRef}\r\n                onChange={handleFotoChange}\r\n              />\r\n            </div>\r\n            <div className=\"flex-1 space-y-1\">\r\n              <Label>Nome</Label>\r\n              <Input value={nome} onChange={e => setNome(e.target.value)} />\r\n            </div>\r\n          </div>\r\n\r\n          {/* INSTAGRAM */}\r\n          <div className=\"space-y-1\">\r\n            <Label>Instagram</Label>\r\n            <InputGroup>\r\n              <InputGroupText\r\n                className=\"cursor-pointer select-none\"\r\n                onClick={() => window.open(`https://instagram.com/${instagram}`, \"_blank\")}\r\n                onMouseEnter={() => setHoverInstagram(true)}\r\n                onMouseLeave={() => setHoverInstagram(false)}\r\n              >\r\n                {hoverInstagram\r\n                  ? <ArrowRight className=\"w-4 h-4\"/>\r\n                  : <AtSign className=\"w-4 h-4\"/>\r\n                }\r\n              </InputGroupText>\r\n              <Input\r\n                value={instagram}\r\n                onChange={e => setInstagram(e.target.value.replace(/^@/, \"\"))}\r\n                placeholder=\"username\"\r\n              />\r\n            </InputGroup>\r\n          </div>\r\n\r\n          {/* E-MAIL e TELEFONE */}\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            <div className=\"space-y-1\">\r\n              <Label>E-mail</Label>\r\n              <Input type=\"email\" value={email} onChange={e => setEmail(e.target.value)} />\r\n            </div>\r\n            <div className=\"space-y-1\">\r\n              <Label>Telefone</Label>\r\n              <Input type=\"tel\" value={telefone} onChange={e => setTelefone(e.target.value)} />\r\n            </div>\r\n          </div>\r\n\r\n          {/* CPF e PIX */}\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            <div className=\"space-y-1\">\r\n              <Label>CPF</Label>\r\n              <Input value={cpf} onChange={e => setCpf(e.target.value)} />\r\n            </div>\r\n            <div className=\"space-y-1\">\r\n              <Label>Chave Pix</Label>\r\n              <Input value={chavepix} onChange={e => setChavepix(e.target.value)} />\r\n            </div>\r\n          </div>\r\n\r\n          {/* ID NA PLATAFORMA */}\r\n          <div className=\"space-y-1\">\r\n            <Label>ID na Plataforma</Label>\r\n            <Input\r\n              value={influenciadorPlatId}\r\n              onChange={e => setInfluenciadorPlatId(e.target.value)}\r\n              placeholder=\"Ex: SEUNAME123\"\r\n            />\r\n          </div>\r\n\r\n          {/* STATUS */}\r\n          <div className=\"space-y-1\">\r\n  <Label>Status</Label>\r\n  <ShadSelect value={status} onValueChange={setStatus}>\r\n    <SelectTrigger className=\"w-full\">\r\n      <SelectValue placeholder=\"Selecione o status\" />\r\n    </SelectTrigger>\r\n    <SelectContent>\r\n      <SelectItem value=\"bronze\">Bronze</SelectItem>\r\n      <SelectItem value=\"prata\">Prata</SelectItem>\r\n      <SelectItem value=\"ouro\">Ouro</SelectItem>\r\n      <SelectItem value=\"diamante\">Diamante</SelectItem>\r\n      <SelectItem value=\"banido\">Banido</SelectItem>\r\n    </SelectContent>\r\n  </ShadSelect>\r\n</div>\r\n\r\n          {/* BOTÕES */}\r\n          <div className=\"flex justify-end gap-2 pt-2\">\r\n            <Button variant=\"ghost\" onClick={onClose}>Cancelar</Button>\r\n            <Button onClick={handleSubmit}>Salvar</Button>\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n"
        }
    ]
}