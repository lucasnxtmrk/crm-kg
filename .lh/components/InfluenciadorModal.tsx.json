{
    "sourceFile": "components/InfluenciadorModal.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 133,
            "patches": [
                {
                    "date": 1745343733644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1745347788505,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -221,82 +221,84 @@\n \r\n           {/* 🔸 Coluna Direita - Plataformas */}\r\n           <ScrollArea className=\"max-h-[450px] pr-2\">\r\n             <div className=\"flex flex-col gap-4\">\r\n-              {influenciador.relacoes\r\n-                .filter((rel) => plataformasSelecionadas.includes(rel.plataformaId))\r\n-                .map((rel) => {\r\n-                  const plataforma = plataformas.find((p) => p.id === rel.plataformaId);\r\n+            {influenciador.recargas\r\n+  .filter((rec) => plataformasSelecionadas.includes(rec.plataformaId))\r\n+  .map((rec, index) => {\r\n+    const plataforma = plataformas.find((p) => p.id === rec.plataformaId);\r\n \r\n-                  const statusLabel =\r\n-                    rel.meta === 0 && rel.atingido === 0\r\n-                      ? \"Meta indefinida\"\r\n-                      : rel.atingido >= rel.meta\r\n-                      ? \"Meta Batida\"\r\n-                      : \"Meta Pendente\";\r\n+    const statusLabel =\r\n+      rec.meta === 0 && rec.atingido === 0\r\n+        ? \"Meta indefinida\"\r\n+        : rec.atingido >= rec.meta\r\n+        ? \"Meta Batida\"\r\n+        : \"Meta Pendente\";\r\n \r\n-                  const statusClass =\r\n-                    rel.meta === 0 && rel.atingido === 0\r\n-                      ? \"bg-muted text-muted-foreground\"\r\n-                      : rel.atingido >= rel.meta\r\n-                      ? \"bg-green-500 text-white\"\r\n-                      : \"bg-yellow-400 text-yellow-900\";\r\n+    const statusClass =\r\n+      rec.meta === 0 && rec.atingido === 0\r\n+        ? \"bg-muted text-muted-foreground\"\r\n+        : rec.atingido >= rec.meta\r\n+        ? \"bg-green-500 text-white\"\r\n+        : \"bg-yellow-400 text-yellow-900\";\r\n \r\n-                  return (\r\n-                    <div\r\n-                      key={rel.plataformaId}\r\n-                      className=\"border border-muted rounded-md p-4 space-y-3\"\r\n-                    >\r\n-                      {/* 🔹 Logo e status */}\r\n-                      <div className=\"flex items-center justify-between\">\r\n-                        <div className=\"flex items-center gap-2\">\r\n-                          {plataforma?.imagem && (\r\n-                            <Image\r\n-                              src={plataforma.imagem}\r\n-                              alt={plataforma.nome}\r\n-                              width={40}\r\n-                              height={40}\r\n-                              className=\"rounded\"\r\n-                            />\r\n-                          )}\r\n-                        </div>\r\n-                        <div\r\n-                          className={`px-3 py-1 rounded-full text-xs font-medium whitespace-nowrap ${statusClass}`}\r\n-                        >\r\n-                          {statusLabel}\r\n-                        </div>\r\n-                      </div>\r\n+    return (\r\n+      <div\r\n+        key={index}\r\n+        className=\"border border-muted rounded-md p-4 space-y-3\"\r\n+      >\r\n+        {/* 🔹 Logo e status */}\r\n+        <div className=\"flex items-center justify-between\">\r\n+          <div className=\"flex items-center gap-2\">\r\n+            {plataforma?.imagem && (\r\n+              <Image\r\n+                src={plataforma.imagem}\r\n+                alt={plataforma.nome}\r\n+                width={40}\r\n+                height={40}\r\n+                className=\"rounded\"\r\n+              />\r\n+            )}\r\n+            <span className=\"font-medium text-sm\">{plataforma?.nome}</span>\r\n+          </div>\r\n+          <div\r\n+            className={`px-3 py-1 rounded-full text-xs font-medium whitespace-nowrap ${statusClass}`}\r\n+          >\r\n+            {statusLabel}\r\n+          </div>\r\n+        </div>\r\n \r\n-                      {/* 🔸 Campos */}\r\n-                      <div className=\"grid grid-cols-3 gap-4 text-sm\">\r\n-                        <div className=\"space-y-1.5\">\r\n-                          <Label>Meta</Label>\r\n-                          <Input type=\"number\" defaultValue={rel.meta} />\r\n-                        </div>\r\n-                        <div className=\"space-y-1.5\">\r\n-                          <Label>Atingido</Label>\r\n-                          <Input type=\"number\" defaultValue={rel.atingido} />\r\n-                        </div>\r\n-                        <div className=\"space-y-1.5\">\r\n-                          <Label>Reembolso</Label>\r\n-                          <Input type=\"number\" defaultValue={rel.reembolso} />\r\n-                        </div>\r\n-                        <div className=\"space-y-1.5\">\r\n-                          <Label>Salário (R$)</Label>\r\n-                          <Input type=\"number\" defaultValue={rel.salario} />\r\n-                        </div>\r\n-                        <div className=\"space-y-1.5\">\r\n-                          <Label>Início</Label>\r\n-                          <Input type=\"date\" defaultValue={rel.inicio} />\r\n-                        </div>\r\n-                        <div className=\"space-y-1.5\">\r\n-                          <Label>Término</Label>\r\n-                          <Input type=\"date\" defaultValue={rel.fim} />\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                  );\r\n-                })}\r\n+        {/* 🔸 Campos da recarga */}\r\n+        <div className=\"grid grid-cols-3 gap-4 text-sm\">\r\n+          <div className=\"space-y-1.5\">\r\n+            <Label>Meta</Label>\r\n+            <Input type=\"number\" defaultValue={rec.meta} />\r\n+          </div>\r\n+          <div className=\"space-y-1.5\">\r\n+            <Label>Atingido</Label>\r\n+            <Input type=\"number\" defaultValue={rec.atingido} />\r\n+          </div>\r\n+          <div className=\"space-y-1.5\">\r\n+            <Label>Reembolso</Label>\r\n+            <Input type=\"number\" defaultValue={rec.reembolso} />\r\n+          </div>\r\n+          <div className=\"space-y-1.5\">\r\n+            <Label>Salário (R$)</Label>\r\n+            <Input type=\"number\" defaultValue={rec.salario} />\r\n+          </div>\r\n+          <div className=\"space-y-1.5\">\r\n+            <Label>Início</Label>\r\n+            <Input type=\"date\" defaultValue={rec.inicio} />\r\n+          </div>\r\n+          <div className=\"space-y-1.5\">\r\n+            <Label>Término</Label>\r\n+            <Input type=\"date\" defaultValue={rec.termino} />\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  })}\r\n+\r\n             </div>\r\n           </ScrollArea>\r\n         </div>\r\n       </DialogContent>\r\n"
                },
                {
                    "date": 1745347895885,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n   const InfluenciadorModal = ({ open, onClose, influenciador, onUpdate }: Props) => {\r\n     if (!influenciador) return null;\r\n \r\n   const [plataformasSelecionadas, setPlataformasSelecionadas] = useState<string[]>(\r\n-    influenciador.relacoes.map((rel) => rel.plataformaId)\r\n+    influenciador.recargas.map((rel) => rel.plataformaId)\r\n   );\r\n \r\n   const platformOptions: OptionType[] = plataformas.map((p) => ({\r\n     value: p.id,\r\n@@ -86,9 +86,9 @@\n         ...influenciador,\r\n         status,\r\n         motivoBanimento,\r\n         imagem: previewImage,\r\n-        relacoes: influenciador.relacoes,\r\n+        recargas: influenciador.recargas,\r\n       };\r\n   \r\n       onUpdate?.(updated);\r\n       onClose(); // fecha modal\r\n"
                },
                {
                    "date": 1745348916672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,12 @@\n \"use client\";\r\n \r\n-import { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\r\n+import {\r\n+  Dialog,\r\n+  DialogContent,\r\n+  DialogHeader,\r\n+  DialogTitle,\r\n+} from \"@/components/ui/dialog\";\r\n import { Input } from \"@/components/ui/input\";\r\n import { Label } from \"@/components/ui/label\";\r\n import {\r\n   Select as ShadSelect,\r\n@@ -9,42 +14,51 @@\n   SelectItem,\r\n   SelectTrigger,\r\n   SelectValue,\r\n } from \"@/components/ui/select\";\r\n-import { plataformas } from \"@/lib/data\";\r\n+import { ScrollArea } from \"@/components/ui/scroll-area\";\r\n+import {\r\n+  Tabs,\r\n+  TabsContent,\r\n+  TabsList,\r\n+  TabsTrigger,\r\n+} from \"@/components/ui/tabs\";\r\n+import { Textarea } from \"@/components/ui/textarea\";\r\n+import { Button } from \"@/components/ui/button\";\r\n+\r\n import Image from \"next/image\";\r\n-import { Influenciador } from \"@/lib/influenciadores\";\r\n-import { ScrollArea } from \"@/components/ui/scroll-area\";\r\n+import { Pencil, AlertCircle } from \"lucide-react\";\r\n import { useEffect, useRef, useState } from \"react\";\r\n-import { Pencil } from \"lucide-react\";\r\n import Select from \"react-select\";\r\n import makeAnimated from \"react-select/animated\";\r\n-import { components, OptionProps, GroupBase } from \"react-select\";\r\n-import { AlertCircle } from \"lucide-react\";\r\n import { Dialog as InnerDialog, DialogContent as InnerContent } from \"@/components/ui/dialog\";\r\n-import { Button } from \"@/components/ui/button\";\r\n-import { Textarea } from \"@/components/ui/textarea\";\r\n+import { plataformas } from \"@/lib/data\";\r\n+import { Influenciador } from \"@/lib/influenciadores\";\r\n \r\n-\r\n interface OptionType {\r\n   value: string;\r\n   label: string;\r\n-  icon?: string; // futuro uso\r\n+  icon?: string;\r\n }\r\n \r\n-type Props = {\r\n-    open: boolean;\r\n-    onClose: () => void;\r\n-    influenciador: Influenciador | null;\r\n-    onUpdate?: (updated: Influenciador) => void;\r\n-  };\r\n+interface Props {\r\n+  open: boolean;\r\n+  onClose: () => void;\r\n+  influenciador: Influenciador | null;\r\n+  onUpdate?: (updated: Influenciador) => void;\r\n+}\r\n \r\n-  const InfluenciadorModal = ({ open, onClose, influenciador, onUpdate }: Props) => {\r\n-    if (!influenciador) return null;\r\n+const InfluenciadorModal = ({ open, onClose, influenciador, onUpdate }: Props) => {\r\n+  if (!influenciador) return null;\r\n \r\n   const [plataformasSelecionadas, setPlataformasSelecionadas] = useState<string[]>(\r\n-    influenciador.recargas.map((rel) => rel.plataformaId)\r\n+    influenciador.recargas.map((r) => r.plataformaId)\r\n   );\r\n+  const [previewImage, setPreviewImage] = useState(influenciador.imagem);\r\n+  const [status, setStatus] = useState(influenciador.status);\r\n+  const [motivoBanimento, setMotivoBanimento] = useState(influenciador.motivoBanimento || \"\");\r\n+  const [openMotivo, setOpenMotivo] = useState(false);\r\n+  const inputFileRef = useRef<HTMLInputElement>(null);\r\n \r\n   const platformOptions: OptionType[] = plataformas.map((p) => ({\r\n     value: p.id,\r\n     label: p.nome,\r\n@@ -53,10 +67,13 @@\n   const selectedOptions = platformOptions.filter((opt) =>\r\n     plataformasSelecionadas.includes(opt.value)\r\n   );\r\n \r\n-  const [previewImage, setPreviewImage] = useState(influenciador.imagem);\r\n-  const inputFileRef = useRef<HTMLInputElement>(null);\r\n+  useEffect(() => {\r\n+    if (status === \"banido\") {\r\n+      setOpenMotivo(true);\r\n+    }\r\n+  }, [status]);\r\n \r\n   const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n     const file = e.target.files?.[0];\r\n     if (file) {\r\n@@ -66,46 +83,37 @@\n       };\r\n       reader.readAsDataURL(file);\r\n     }\r\n   };\r\n-  // Estado novo\r\n-const [status, setStatus] = useState(influenciador.status);\r\n-const [motivoBanimento, setMotivoBanimento] = useState(influenciador.motivoBanimento || \"\");\r\n-const [openMotivo, setOpenMotivo] = useState(false);\r\n \r\n-// Abre automaticamente se o status for alterado para \"banido\"\r\n-useEffect(() => {\r\n-  if (status === \"banido\") {\r\n-    setOpenMotivo(true);\r\n-  }\r\n-}, [status]);\r\n-const handleCloseAndUpdate = (openState: boolean) => {\r\n+  const handleCloseAndUpdate = (openState: boolean) => {\r\n     if (!openState) {\r\n-      if (!influenciador) return;\r\n-  \r\n       const updated: Influenciador = {\r\n         ...influenciador,\r\n+        imagem: previewImage,\r\n         status,\r\n         motivoBanimento,\r\n-        imagem: previewImage,\r\n         recargas: influenciador.recargas,\r\n       };\r\n-  \r\n       onUpdate?.(updated);\r\n-      onClose(); // fecha modal\r\n+      onClose();\r\n     }\r\n   };\r\n+\r\n+  const hoje = new Date().toISOString().split(\"T\")[0];\r\n+  const recargasAtivas = influenciador.recargas.filter((r) => r.termino >= hoje);\r\n+  const recargasHistorico = influenciador.recargas.filter((r) => r.termino < hoje);\r\n+\r\n   return (\r\n-<Dialog open={open} onOpenChange={handleCloseAndUpdate}>\r\n-<DialogContent size=\"full\">\r\n+    <Dialog open={open} onOpenChange={handleCloseAndUpdate}>\r\n+      <DialogContent size=\"full\">\r\n         <DialogHeader>\r\n           <DialogTitle>Editar Influenciador</DialogTitle>\r\n         </DialogHeader>\r\n \r\n         <div className=\"grid grid-cols-[35%_1fr] gap-8\">\r\n-          {/* 🔹 Coluna Esquerda */}\r\n+          {/* Esquerda */}\r\n           <div className=\"space-y-4\">\r\n-            {/* Imagem + Nome/Instagram */}\r\n             <div className=\"grid grid-cols-[auto_1fr] gap-4 items-start\">\r\n               <div className=\"relative w-24 h-24 group\">\r\n                 <Image\r\n                   src={previewImage || \"/images/avatar/avatar-default.png\"}\r\n@@ -118,17 +126,10 @@\n                   onClick={() => inputFileRef.current?.click()}\r\n                 >\r\n                   <Pencil className=\"text-white w-5 h-5\" />\r\n                 </div>\r\n-                <input\r\n-                  ref={inputFileRef}\r\n-                  type=\"file\"\r\n-                  accept=\"image/*\"\r\n-                  onChange={handleImageChange}\r\n-                  className=\"hidden\"\r\n-                />\r\n+                <input ref={inputFileRef} type=\"file\" accept=\"image/*\" onChange={handleImageChange} className=\"hidden\" />\r\n               </div>\r\n-\r\n               <div className=\"space-y-4\">\r\n                 <div className=\"space-y-1.5\">\r\n                   <Label htmlFor=\"nome\">Nome</Label>\r\n                   <Input id=\"nome\" defaultValue={influenciador.nome} />\r\n@@ -139,9 +140,8 @@\n                 </div>\r\n               </div>\r\n             </div>\r\n \r\n-            {/* Campos adicionais */}\r\n             <div className=\"space-y-1.5\">\r\n               <Label htmlFor=\"cpf\">CPF</Label>\r\n               <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n             </div>\r\n@@ -151,159 +151,118 @@\n               <Input value={influenciador.dataCadastro} readOnly />\r\n             </div>\r\n \r\n             <div className=\"space-y-1.5\">\r\n-  <Label>Status</Label>\r\n-  <div className=\"flex items-center gap-2\">\r\n-    <div className=\"w-[70%]\">\r\n-      <ShadSelect defaultValue={status} onValueChange={setStatus}>\r\n-        <SelectTrigger>\r\n-          <SelectValue placeholder=\"Selecione o status\" />\r\n-        </SelectTrigger>\r\n-        <SelectContent>\r\n-          <SelectItem value=\"lead\">Lead</SelectItem>\r\n-          <SelectItem value=\"contato\">Em contato</SelectItem>\r\n-          <SelectItem value=\"negociacao\">Em negociação</SelectItem>\r\n-          <SelectItem value=\"ativo\">Ativo</SelectItem>\r\n-          <SelectItem value=\"banido\">Banido</SelectItem>\r\n-        </SelectContent>\r\n-      </ShadSelect>\r\n-    </div>\r\n+              <Label>Status</Label>\r\n+              <div className=\"flex items-center gap-2\">\r\n+                <div className=\"w-[70%]\">\r\n+                  <ShadSelect defaultValue={status} onValueChange={setStatus}>\r\n+                    <SelectTrigger>\r\n+                      <SelectValue placeholder=\"Selecione o status\" />\r\n+                    </SelectTrigger>\r\n+                    <SelectContent>\r\n+                      <SelectItem value=\"lead\">Lead</SelectItem>\r\n+                      <SelectItem value=\"contato\">Em contato</SelectItem>\r\n+                      <SelectItem value=\"negociacao\">Em negociação</SelectItem>\r\n+                      <SelectItem value=\"ativo\">Ativo</SelectItem>\r\n+                      <SelectItem value=\"banido\">Banido</SelectItem>\r\n+                    </SelectContent>\r\n+                  </ShadSelect>\r\n+                </div>\r\n+                {status === \"banido\" && (\r\n+                  <Button type=\"button\" onClick={() => setOpenMotivo(true)} variant=\"ghost\" className=\"w-[30%] text-xs px-2 py-1 border border-destructive text-destructive hover:bg-destructive hover:text-white\">\r\n+                    <AlertCircle className=\"w-4 h-4 mr-1\" /> Motivo\r\n+                  </Button>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n \r\n-    {status === \"banido\" && (\r\n-      <Button\r\n-        type=\"button\"\r\n-        onClick={() => setOpenMotivo(true)}\r\n-        variant=\"ghost\"\r\n-        className=\"w-[30%] text-xs px-2 py-1 border border-destructive text-destructive hover:bg-destructive hover:text-white transition\"\r\n->\r\n-        <AlertCircle className=\"w-4 h-4 mr-1\" />\r\n-        Motivo\r\n-      </Button>\r\n-    )}\r\n-  </div>\r\n-</div>\r\n+            <InnerDialog open={openMotivo} onOpenChange={setOpenMotivo}>\r\n+              <InnerContent>\r\n+                <div className=\"space-y-2\">\r\n+                  <Label>Motivo do Banimento</Label>\r\n+                  <Textarea value={motivoBanimento} onChange={(e) => setMotivoBanimento(e.target.value)} placeholder=\"Descreva o motivo...\" />\r\n+                </div>\r\n+              </InnerContent>\r\n+            </InnerDialog>\r\n \r\n-{/* Modal interno para motivo do banimento */}\r\n-<InnerDialog open={openMotivo} onOpenChange={setOpenMotivo}>\r\n-  <InnerContent>\r\n-    <div className=\"space-y-2\">\r\n-      <Label>Motivo do Banimento</Label>\r\n-      <Textarea\r\n-        placeholder=\"Descreva o motivo...\"\r\n-        value={motivoBanimento}\r\n-        onChange={(e) => setMotivoBanimento(e.target.value)}\r\n-      />\r\n-    </div>\r\n-  </InnerContent>\r\n-</InnerDialog>\r\n-\r\n-            {/* Novo campo com react-select estilizado */}\r\n             <div className=\"space-y-1.5\">\r\n-              <Label>Plataformas Ativas</Label>\r\n+              <Label>Plataformas</Label>\r\n               <Select\r\n                 isMulti\r\n                 closeMenuOnSelect={false}\r\n                 components={makeAnimated()}\r\n                 options={platformOptions}\r\n                 value={selectedOptions}\r\n-                onChange={(selected) =>\r\n-                  setPlataformasSelecionadas(selected.map((opt) => opt.value))\r\n-                }\r\n-                className=\"react-select\"\r\n-                classNamePrefix=\"select\"\r\n-                styles={{\r\n-                  option: (provided) => ({ ...provided, fontSize: \"14px\" }),\r\n-                  multiValueLabel: (base) => ({ ...base, fontWeight: 500 }),\r\n-                }}\r\n+                onChange={(selected) => setPlataformasSelecionadas(selected.map((s) => s.value))}\r\n               />\r\n             </div>\r\n           </div>\r\n \r\n-          {/* 🔸 Coluna Direita - Plataformas */}\r\n-          <ScrollArea className=\"max-h-[450px] pr-2\">\r\n-            <div className=\"flex flex-col gap-4\">\r\n-            {influenciador.recargas\r\n-  .filter((rec) => plataformasSelecionadas.includes(rec.plataformaId))\r\n-  .map((rec, index) => {\r\n+          {/* Direita */}\r\n+          <Tabs defaultValue=\"ativas\" className=\"w-full\">\r\n+            <TabsList className=\"mb-4\">\r\n+              <TabsTrigger value=\"ativas\">Plataformas Ativas</TabsTrigger>\r\n+              <TabsTrigger value=\"historico\">Histórico</TabsTrigger>\r\n+            </TabsList>\r\n+\r\n+            <TabsContent value=\"ativas\">\r\n+              <ScrollArea className=\"max-h-[450px] pr-2\">\r\n+                {recargasAtivas\r\n+                  .filter((rec) => plataformasSelecionadas.includes(rec.plataformaId))\r\n+                  .map((rec, index) => renderRecargaCard(rec, index))}\r\n+              </ScrollArea>\r\n+            </TabsContent>\r\n+\r\n+            <TabsContent value=\"historico\">\r\n+              <ScrollArea className=\"max-h-[450px] pr-2\">\r\n+                {recargasHistorico\r\n+                  .filter((rec) => plataformasSelecionadas.includes(rec.plataformaId))\r\n+                  .map((rec, index) => renderRecargaCard(rec, index))}\r\n+              </ScrollArea>\r\n+            </TabsContent>\r\n+          </Tabs>\r\n+        </div>\r\n+      </DialogContent>\r\n+    </Dialog>\r\n+  );\r\n+\r\n+  function renderRecargaCard(rec: Influenciador[\"recargas\"][0], index: number) {\r\n     const plataforma = plataformas.find((p) => p.id === rec.plataformaId);\r\n-\r\n     const statusLabel =\r\n       rec.meta === 0 && rec.atingido === 0\r\n         ? \"Meta indefinida\"\r\n         : rec.atingido >= rec.meta\r\n         ? \"Meta Batida\"\r\n         : \"Meta Pendente\";\r\n-\r\n     const statusClass =\r\n       rec.meta === 0 && rec.atingido === 0\r\n         ? \"bg-muted text-muted-foreground\"\r\n         : rec.atingido >= rec.meta\r\n         ? \"bg-green-500 text-white\"\r\n         : \"bg-yellow-400 text-yellow-900\";\r\n \r\n     return (\r\n-      <div\r\n-        key={index}\r\n-        className=\"border border-muted rounded-md p-4 space-y-3\"\r\n-      >\r\n-        {/* 🔹 Logo e status */}\r\n+      <div key={index} className=\"border border-muted rounded-md p-4 space-y-3\">\r\n         <div className=\"flex items-center justify-between\">\r\n           <div className=\"flex items-center gap-2\">\r\n             {plataforma?.imagem && (\r\n-              <Image\r\n-                src={plataforma.imagem}\r\n-                alt={plataforma.nome}\r\n-                width={40}\r\n-                height={40}\r\n-                className=\"rounded\"\r\n-              />\r\n+              <Image src={plataforma.imagem} alt={plataforma.nome} width={40} height={40} className=\"rounded\" />\r\n             )}\r\n             <span className=\"font-medium text-sm\">{plataforma?.nome}</span>\r\n           </div>\r\n-          <div\r\n-            className={`px-3 py-1 rounded-full text-xs font-medium whitespace-nowrap ${statusClass}`}\r\n-          >\r\n-            {statusLabel}\r\n-          </div>\r\n+          <div className={`px-3 py-1 rounded-full text-xs font-medium ${statusClass}`}>{statusLabel}</div>\r\n         </div>\r\n-\r\n-        {/* 🔸 Campos da recarga */}\r\n         <div className=\"grid grid-cols-3 gap-4 text-sm\">\r\n-          <div className=\"space-y-1.5\">\r\n-            <Label>Meta</Label>\r\n-            <Input type=\"number\" defaultValue={rec.meta} />\r\n-          </div>\r\n-          <div className=\"space-y-1.5\">\r\n-            <Label>Atingido</Label>\r\n-            <Input type=\"number\" defaultValue={rec.atingido} />\r\n-          </div>\r\n-          <div className=\"space-y-1.5\">\r\n-            <Label>Reembolso</Label>\r\n-            <Input type=\"number\" defaultValue={rec.reembolso} />\r\n-          </div>\r\n-          <div className=\"space-y-1.5\">\r\n-            <Label>Salário (R$)</Label>\r\n-            <Input type=\"number\" defaultValue={rec.salario} />\r\n-          </div>\r\n-          <div className=\"space-y-1.5\">\r\n-            <Label>Início</Label>\r\n-            <Input type=\"date\" defaultValue={rec.inicio} />\r\n-          </div>\r\n-          <div className=\"space-y-1.5\">\r\n-            <Label>Término</Label>\r\n-            <Input type=\"date\" defaultValue={rec.termino} />\r\n-          </div>\r\n+          <div className=\"space-y-1.5\"><Label>Meta</Label><Input type=\"number\" defaultValue={rec.meta} /></div>\r\n+          <div className=\"space-y-1.5\"><Label>Atingido</Label><Input type=\"number\" defaultValue={rec.atingido} /></div>\r\n+          <div className=\"space-y-1.5\"><Label>Reembolso</Label><Input type=\"number\" defaultValue={rec.reembolso} /></div>\r\n+          <div className=\"space-y-1.5\"><Label>Salário (R$)</Label><Input type=\"number\" defaultValue={rec.salario} /></div>\r\n+          <div className=\"space-y-1.5\"><Label>Início</Label><Input type=\"date\" defaultValue={rec.inicio} /></div>\r\n+          <div className=\"space-y-1.5\"><Label>Término</Label><Input type=\"date\" defaultValue={rec.termino} /></div>\r\n         </div>\r\n       </div>\r\n     );\r\n-  })}\r\n-\r\n-            </div>\r\n-          </ScrollArea>\r\n-        </div>\r\n-      </DialogContent>\r\n-    </Dialog>\r\n-  );\r\n+  }\r\n };\r\n \r\n export default InfluenciadorModal;\r\n"
                },
                {
                    "date": 1745349137241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,10 +99,13 @@\n     }\r\n   };\r\n \r\n   const hoje = new Date().toISOString().split(\"T\")[0];\r\n-  const recargasAtivas = influenciador.recargas.filter((r) => r.termino >= hoje);\r\n-  const recargasHistorico = influenciador.recargas.filter((r) => r.termino < hoje);\r\n+  const recargasAtivas = influenciador.recargas.filter((rec) => {\r\n+    const terminoDate = new Date(rec.termino).getTime();\r\n+    const hojeDate = new Date().getTime(); // ou new Date(hoje).getTime()\r\n+    return terminoDate >= hojeDate;\r\n+  });  const recargasHistorico = influenciador.recargas.filter((r) => r.termino < hoje);\r\n \r\n   return (\r\n     <Dialog open={open} onOpenChange={handleCloseAndUpdate}>\r\n       <DialogContent size=\"full\">\r\n"
                },
                {
                    "date": 1745349169333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -210,18 +210,22 @@\n \r\n             <TabsContent value=\"ativas\">\r\n               <ScrollArea className=\"max-h-[450px] pr-2\">\r\n                 {recargasAtivas\r\n-                  .filter((rec) => plataformasSelecionadas.includes(rec.plataformaId))\r\n-                  .map((rec, index) => renderRecargaCard(rec, index))}\r\n+.filter((rec) => plataformasSelecionadas.includes(rec.plataformaId))\r\n+.map((rec, index) => renderRecargaCard(rec, index))}\r\n               </ScrollArea>\r\n             </TabsContent>\r\n \r\n             <TabsContent value=\"historico\">\r\n               <ScrollArea className=\"max-h-[450px] pr-2\">\r\n                 {recargasHistorico\r\n-                  .filter((rec) => plataformasSelecionadas.includes(rec.plataformaId))\r\n-                  .map((rec, index) => renderRecargaCard(rec, index))}\r\n+.filter((rec) => {\r\n+  const isPlataformaSelecionada = plataformasSelecionadas.includes(rec.plataformaId);\r\n+  const terminoDate = new Date(rec.termino).getTime();\r\n+  const hojeDate = new Date().getTime();\r\n+  return isPlataformaSelecionada && terminoDate >= hojeDate;\r\n+})                  .map((rec, index) => renderRecargaCard(rec, index))}\r\n               </ScrollArea>\r\n             </TabsContent>\r\n           </Tabs>\r\n         </div>\r\n"
                },
                {
                    "date": 1745349313452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,15 +98,20 @@\n       onClose();\r\n     }\r\n   };\r\n \r\n-  const hoje = new Date().toISOString().split(\"T\")[0];\r\n-  const recargasAtivas = influenciador.recargas.filter((rec) => {\r\n-    const terminoDate = new Date(rec.termino).getTime();\r\n-    const hojeDate = new Date().getTime(); // ou new Date(hoje).getTime()\r\n-    return terminoDate >= hojeDate;\r\n-  });  const recargasHistorico = influenciador.recargas.filter((r) => r.termino < hoje);\r\n+  const hojeTimestamp = new Date().getTime();\r\n \r\n+  const recargasAtivas = influenciador.recargas.filter((rec) =>\r\n+    plataformasSelecionadas.includes(rec.plataformaId) &&\r\n+    new Date(rec.termino).getTime() >= hojeTimestamp\r\n+  );\r\n+  \r\n+  const recargasHistorico = influenciador.recargas.filter((rec) =>\r\n+    plataformasSelecionadas.includes(rec.plataformaId) &&\r\n+    new Date(rec.termino).getTime() < hojeTimestamp\r\n+  );\r\n+\r\n   return (\r\n     <Dialog open={open} onOpenChange={handleCloseAndUpdate}>\r\n       <DialogContent size=\"full\">\r\n         <DialogHeader>\r\n"
                },
                {
                    "date": 1745349339828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -213,26 +213,18 @@\n               <TabsTrigger value=\"historico\">Histórico</TabsTrigger>\r\n             </TabsList>\r\n \r\n             <TabsContent value=\"ativas\">\r\n-              <ScrollArea className=\"max-h-[450px] pr-2\">\r\n-                {recargasAtivas\r\n-.filter((rec) => plataformasSelecionadas.includes(rec.plataformaId))\r\n-.map((rec, index) => renderRecargaCard(rec, index))}\r\n-              </ScrollArea>\r\n-            </TabsContent>\r\n+  <ScrollArea className=\"max-h-[450px] pr-2\">\r\n+    {recargasAtivas.map((rec, index) => renderRecargaCard(rec, index))}\r\n+  </ScrollArea>\r\n+</TabsContent>\r\n \r\n-            <TabsContent value=\"historico\">\r\n-              <ScrollArea className=\"max-h-[450px] pr-2\">\r\n-                {recargasHistorico\r\n-.filter((rec) => {\r\n-  const isPlataformaSelecionada = plataformasSelecionadas.includes(rec.plataformaId);\r\n-  const terminoDate = new Date(rec.termino).getTime();\r\n-  const hojeDate = new Date().getTime();\r\n-  return isPlataformaSelecionada && terminoDate >= hojeDate;\r\n-})                  .map((rec, index) => renderRecargaCard(rec, index))}\r\n-              </ScrollArea>\r\n-            </TabsContent>\r\n+<TabsContent value=\"historico\">\r\n+  <ScrollArea className=\"max-h-[450px] pr-2\">\r\n+    {recargasHistorico.map((rec, index) => renderRecargaCard(rec, index))}\r\n+  </ScrollArea>\r\n+</TabsContent>\r\n           </Tabs>\r\n         </div>\r\n       </DialogContent>\r\n     </Dialog>\r\n"
                },
                {
                    "date": 1745349401355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,20 +98,21 @@\n       onClose();\r\n     }\r\n   };\r\n \r\n-  const hojeTimestamp = new Date().getTime();\r\n+  const hoje = new Date().toISOString().split(\"T\")[0];\r\n+const hojeTimestamp = Date.parse(hoje); // ← força pra 00:00 do dia\r\n \r\n-  const recargasAtivas = influenciador.recargas.filter((rec) =>\r\n-    plataformasSelecionadas.includes(rec.plataformaId) &&\r\n-    new Date(rec.termino).getTime() >= hojeTimestamp\r\n-  );\r\n-  \r\n-  const recargasHistorico = influenciador.recargas.filter((rec) =>\r\n-    plataformasSelecionadas.includes(rec.plataformaId) &&\r\n-    new Date(rec.termino).getTime() < hojeTimestamp\r\n-  );\r\n+const recargasAtivas = influenciador.recargas.filter((rec) =>\r\n+  plataformasSelecionadas.includes(rec.plataformaId) &&\r\n+  Date.parse(rec.termino) >= hojeTimestamp\r\n+);\r\n \r\n+const recargasHistorico = influenciador.recargas.filter((rec) =>\r\n+  plataformasSelecionadas.includes(rec.plataformaId) &&\r\n+  Date.parse(rec.termino) < hojeTimestamp\r\n+);\r\n+\r\n   return (\r\n     <Dialog open={open} onOpenChange={handleCloseAndUpdate}>\r\n       <DialogContent size=\"full\">\r\n         <DialogHeader>\r\n"
                },
                {
                    "date": 1745349464181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n     }\r\n   };\r\n \r\n   const hoje = new Date().toISOString().split(\"T\")[0];\r\n-const hojeTimestamp = Date.parse(hoje); // ← força pra 00:00 do dia\r\n+const hojeTimestamp = Date.parse(hoje); // s← força pra 00:00 do dia\r\n \r\n const recargasAtivas = influenciador.recargas.filter((rec) =>\r\n   plataformasSelecionadas.includes(rec.plataformaId) &&\r\n   Date.parse(rec.termino) >= hojeTimestamp\r\n"
                },
                {
                    "date": 1745349576162,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,20 +99,31 @@\n     }\r\n   };\r\n \r\n   const hoje = new Date().toISOString().split(\"T\")[0];\r\n-const hojeTimestamp = Date.parse(hoje); // s← força pra 00:00 do dia\r\n+  const hojeTimestamp = Date.parse(hoje);\r\n+  \r\n+  console.log(\"📅 Data de hoje (ISO):\", hoje);\r\n+  console.log(\"📅 Timestamp de hoje:\", hojeTimestamp);\r\n+  \r\n+  const recargasAtivas = influenciador.recargas.filter((rec) => {\r\n+    const recTermino = Date.parse(rec.termino);\r\n+    const ativa = recTermino >= hojeTimestamp;\r\n+  \r\n+    console.log(`🔍 ${rec.plataformaId} | Término: ${rec.termino} (${recTermino}) | Ativa? ${ativa}`);\r\n+  \r\n+    return plataformasSelecionadas.includes(rec.plataformaId) && ativa;\r\n+  });\r\n+  \r\n+  const recargasHistorico = influenciador.recargas.filter((rec) => {\r\n+    const recTermino = Date.parse(rec.termino);\r\n+    const historico = recTermino < hojeTimestamp;\r\n+  \r\n+    console.log(`🕘 ${rec.plataformaId} | Término: ${rec.termino} (${recTermino}) | Histórico? ${historico}`);\r\n+  \r\n+    return plataformasSelecionadas.includes(rec.plataformaId) && historico;\r\n+  });\r\n \r\n-const recargasAtivas = influenciador.recargas.filter((rec) =>\r\n-  plataformasSelecionadas.includes(rec.plataformaId) &&\r\n-  Date.parse(rec.termino) >= hojeTimestamp\r\n-);\r\n-\r\n-const recargasHistorico = influenciador.recargas.filter((rec) =>\r\n-  plataformasSelecionadas.includes(rec.plataformaId) &&\r\n-  Date.parse(rec.termino) < hojeTimestamp\r\n-);\r\n-\r\n   return (\r\n     <Dialog open={open} onOpenChange={handleCloseAndUpdate}>\r\n       <DialogContent size=\"full\">\r\n         <DialogHeader>\r\n"
                },
                {
                    "date": 1745357538724,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,14 +49,12 @@\n \r\n const InfluenciadorModal = ({ open, onClose, influenciador, onUpdate }: Props) => {\r\n   if (!influenciador) return null;\r\n \r\n-  const [plataformasSelecionadas, setPlataformasSelecionadas] = useState<string[]>(\r\n-    influenciador.recargas.map((r) => r.plataformaId)\r\n-  );\r\n-  const [previewImage, setPreviewImage] = useState(influenciador.imagem);\r\n-  const [status, setStatus] = useState(influenciador.status);\r\n-  const [motivoBanimento, setMotivoBanimento] = useState(influenciador.motivoBanimento || \"\");\r\n+  const [plataformasSelecionadas, setPlataformasSelecionadas] = useState<string[]>([]);\r\n+  const [previewImage, setPreviewImage] = useState<string | undefined>();\r\n+  const [status, setStatus] = useState<Influenciador[\"status\"]>(\"lead\");\r\n+  const [motivoBanimento, setMotivoBanimento] = useState(\"\");\r\n   const [openMotivo, setOpenMotivo] = useState(false);\r\n   const inputFileRef = useRef<HTMLInputElement>(null);\r\n \r\n   const platformOptions: OptionType[] = plataformas.map((p) => ({\r\n@@ -68,8 +66,17 @@\n     plataformasSelecionadas.includes(opt.value)\r\n   );\r\n \r\n   useEffect(() => {\r\n+    if (influenciador) {\r\n+      setPlataformasSelecionadas(influenciador.recargas.map((r) => r.plataformaId));\r\n+      setPreviewImage(influenciador.imagem);\r\n+      setStatus(influenciador.status);\r\n+      setMotivoBanimento(influenciador.motivoBanimento || \"\");\r\n+    }\r\n+  }, [influenciador]);\r\n+\r\n+  useEffect(() => {\r\n     if (status === \"banido\") {\r\n       setOpenMotivo(true);\r\n     }\r\n   }, [status]);\r\n@@ -85,9 +92,9 @@\n     }\r\n   };\r\n \r\n   const handleCloseAndUpdate = (openState: boolean) => {\r\n-    if (!openState) {\r\n+    if (!openState && influenciador) {\r\n       const updated: Influenciador = {\r\n         ...influenciador,\r\n         imagem: previewImage,\r\n         status,\r\n@@ -100,28 +107,17 @@\n   };\r\n \r\n   const hoje = new Date().toISOString().split(\"T\")[0];\r\n   const hojeTimestamp = Date.parse(hoje);\r\n-  \r\n-  console.log(\"📅 Data de hoje (ISO):\", hoje);\r\n-  console.log(\"📅 Timestamp de hoje:\", hojeTimestamp);\r\n-  \r\n+\r\n   const recargasAtivas = influenciador.recargas.filter((rec) => {\r\n     const recTermino = Date.parse(rec.termino);\r\n-    const ativa = recTermino >= hojeTimestamp;\r\n-  \r\n-    console.log(`🔍 ${rec.plataformaId} | Término: ${rec.termino} (${recTermino}) | Ativa? ${ativa}`);\r\n-  \r\n-    return plataformasSelecionadas.includes(rec.plataformaId) && ativa;\r\n+    return plataformasSelecionadas.includes(rec.plataformaId) && recTermino >= hojeTimestamp;\r\n   });\r\n-  \r\n+\r\n   const recargasHistorico = influenciador.recargas.filter((rec) => {\r\n     const recTermino = Date.parse(rec.termino);\r\n-    const historico = recTermino < hojeTimestamp;\r\n-  \r\n-    console.log(`🕘 ${rec.plataformaId} | Término: ${rec.termino} (${recTermino}) | Histórico? ${historico}`);\r\n-  \r\n-    return plataformasSelecionadas.includes(rec.plataformaId) && historico;\r\n+    return plataformasSelecionadas.includes(rec.plataformaId) && recTermino < hojeTimestamp;\r\n   });\r\n \r\n   return (\r\n     <Dialog open={open} onOpenChange={handleCloseAndUpdate}>\r\n@@ -174,9 +170,9 @@\n             <div className=\"space-y-1.5\">\r\n               <Label>Status</Label>\r\n               <div className=\"flex items-center gap-2\">\r\n                 <div className=\"w-[70%]\">\r\n-                  <ShadSelect defaultValue={status} onValueChange={setStatus}>\r\n+                  <ShadSelect value={status} onValueChange={setStatus}>\r\n                     <SelectTrigger>\r\n                       <SelectValue placeholder=\"Selecione o status\" />\r\n                     </SelectTrigger>\r\n                     <SelectContent>\r\n@@ -225,18 +221,18 @@\n               <TabsTrigger value=\"historico\">Histórico</TabsTrigger>\r\n             </TabsList>\r\n \r\n             <TabsContent value=\"ativas\">\r\n-  <ScrollArea className=\"max-h-[450px] pr-2\">\r\n-    {recargasAtivas.map((rec, index) => renderRecargaCard(rec, index))}\r\n-  </ScrollArea>\r\n-</TabsContent>\r\n+              <ScrollArea className=\"max-h-[450px] pr-2\">\r\n+                {recargasAtivas.map((rec, index) => renderRecargaCard(rec, index))}\r\n+              </ScrollArea>\r\n+            </TabsContent>\r\n \r\n-<TabsContent value=\"historico\">\r\n-  <ScrollArea className=\"max-h-[450px] pr-2\">\r\n-    {recargasHistorico.map((rec, index) => renderRecargaCard(rec, index))}\r\n-  </ScrollArea>\r\n-</TabsContent>\r\n+            <TabsContent value=\"historico\">\r\n+              <ScrollArea className=\"max-h-[450px] pr-2\">\r\n+                {recargasHistorico.map((rec, index) => renderRecargaCard(rec, index))}\r\n+              </ScrollArea>\r\n+            </TabsContent>\r\n           </Tabs>\r\n         </div>\r\n       </DialogContent>\r\n     </Dialog>\r\n"
                },
                {
                    "date": 1745359987806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,8 +104,20 @@\n       onUpdate?.(updated);\r\n       onClose();\r\n     }\r\n   };\r\n+  const [followersCount, setFollowersCount] = useState<number | null>(null);\r\n+  const fetchInstagramData = async (username: string) => {\r\n+  try {\r\n+    const response = await fetch(`/api/instagram/profile?username=${username}`);\r\n+    const data = await response.json();\r\n+    // Atualize o estado com os dados recebidos\r\n+    setPreviewImage(data.profile_pic_url_hd);\r\n+    setFollowersCount(data.edge_followed_by.count);\r\n+  } catch (error) {\r\n+    console.error('Erro ao buscar dados do Instagram:', error);\r\n+  }\r\n+};\r\n \r\n   const hoje = new Date().toISOString().split(\"T\")[0];\r\n   const hojeTimestamp = Date.parse(hoje);\r\n \r\n@@ -117,8 +129,14 @@\n   const recargasHistorico = influenciador.recargas.filter((rec) => {\r\n     const recTermino = Date.parse(rec.termino);\r\n     return plataformasSelecionadas.includes(rec.plataformaId) && recTermino < hojeTimestamp;\r\n   });\r\n+  useEffect(() => {\r\n+    const username = influenciador?.instagram?.replace(\"https://instagram.com/\", \"\");\r\n+    if (username) {\r\n+      fetchInstagramData(username);\r\n+    }\r\n+  }, [influenciador]);\r\n \r\n   return (\r\n     <Dialog open={open} onOpenChange={handleCloseAndUpdate}>\r\n       <DialogContent size=\"full\">\r\n@@ -136,8 +154,12 @@\n                   alt={influenciador.nome}\r\n                   fill\r\n                   className=\"rounded-full object-cover border\"\r\n                 />\r\n+                <div className=\"space-y-1.5\">\r\n+  <Label>Seguidores (atuais)</Label>\r\n+  <Input value={followersCount?.toLocaleString('pt-BR') || 'Carregando...'} readOnly />\r\n+</div>\r\n                 <div\r\n                   className=\"absolute inset-0 bg-black/50 rounded-full opacity-0 group-hover:opacity-100 flex items-center justify-center cursor-pointer transition\"\r\n                   onClick={() => inputFileRef.current?.click()}\r\n                 >\r\n"
                },
                {
                    "date": 1745360144120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,19 +105,33 @@\n       onClose();\r\n     }\r\n   };\r\n   const [followersCount, setFollowersCount] = useState<number | null>(null);\r\n-  const fetchInstagramData = async (username: string) => {\r\n-  try {\r\n-    const response = await fetch(`/api/instagram/profile?username=${username}`);\r\n-    const data = await response.json();\r\n-    // Atualize o estado com os dados recebidos\r\n-    setPreviewImage(data.profile_pic_url_hd);\r\n-    setFollowersCount(data.edge_followed_by.count);\r\n-  } catch (error) {\r\n-    console.error('Erro ao buscar dados do Instagram:', error);\r\n+  function isCacheValid(cached: any): boolean {\r\n+    if (!cached?.lastFetched) return false;\r\n+    const diffInDays = (Date.now() - cached.lastFetched) / (1000 * 60 * 60 * 24);\r\n+    return diffInDays < 30;\r\n   }\r\n-};\r\n+  const fetchInstagramData = async (username: string, cacheKey: string) => {\r\n+    try {\r\n+      const response = await fetch(`/api/instagram/profile?username=${username}`);\r\n+      const data = await response.json();\r\n+  \r\n+      const profilePic = data.profile_pic_url_hd;\r\n+      const followers = data.edge_followed_by.count;\r\n+  \r\n+      setPreviewImage(profilePic);\r\n+      setFollowersCount(followers);\r\n+  \r\n+      localStorage.setItem(cacheKey, JSON.stringify({\r\n+        profile_pic_url_hd: profilePic,\r\n+        followers_count: followers,\r\n+        lastFetched: Date.now()\r\n+      }));\r\n+    } catch (error) {\r\n+      console.error('Erro ao buscar dados do Instagram:', error);\r\n+    }\r\n+  };\r\n \r\n   const hoje = new Date().toISOString().split(\"T\")[0];\r\n   const hojeTimestamp = Date.parse(hoje);\r\n \r\n@@ -129,15 +143,25 @@\n   const recargasHistorico = influenciador.recargas.filter((rec) => {\r\n     const recTermino = Date.parse(rec.termino);\r\n     return plataformasSelecionadas.includes(rec.plataformaId) && recTermino < hojeTimestamp;\r\n   });\r\n+\r\n   useEffect(() => {\r\n-    const username = influenciador?.instagram?.replace(\"https://instagram.com/\", \"\");\r\n-    if (username) {\r\n-      fetchInstagramData(username);\r\n-    }\r\n-  }, [influenciador]);\r\n+  const username = influenciador?.instagram?.replace(\"https://instagram.com/\", \"\");\r\n+  if (!username) return;\r\n \r\n+  const cacheKey = `insta_${username}`;\r\n+  const cached = JSON.parse(localStorage.getItem(cacheKey) || \"null\");\r\n+\r\n+  if (isCacheValid(cached)) {\r\n+    setPreviewImage(cached.profile_pic_url_hd);\r\n+    setFollowersCount(cached.followers_count);\r\n+    return;\r\n+  }\r\n+\r\n+  fetchInstagramData(username, cacheKey);\r\n+}, [influenciador]);\r\n+\r\n   return (\r\n     <Dialog open={open} onOpenChange={handleCloseAndUpdate}>\r\n       <DialogContent size=\"full\">\r\n         <DialogHeader>\r\n"
                },
                {
                    "date": 1745361369649,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -145,10 +145,10 @@\n     return plataformasSelecionadas.includes(rec.plataformaId) && recTermino < hojeTimestamp;\r\n   });\r\n \r\n   useEffect(() => {\r\n-  const username = influenciador?.instagram?.replace(\"https://instagram.com/\", \"\");\r\n-  if (!username) return;\r\n+    const username = influenciador?.instagram?.split(\"/\").pop()?.replace(\"@\", \"\");\r\n+    if (!username) return;\r\n \r\n   const cacheKey = `insta_${username}`;\r\n   const cached = JSON.parse(localStorage.getItem(cacheKey) || \"null\");\r\n \r\n"
                },
                {
                    "date": 1745361990673,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,14 +172,20 @@\n           {/* Esquerda */}\r\n           <div className=\"space-y-4\">\r\n             <div className=\"grid grid-cols-[auto_1fr] gap-4 items-start\">\r\n               <div className=\"relative w-24 h-24 group\">\r\n-                <Image\r\n-                  src={previewImage || \"/images/avatar/avatar-default.png\"}\r\n-                  alt={influenciador.nome}\r\n-                  fill\r\n-                  className=\"rounded-full object-cover border\"\r\n-                />\r\n+              <Image\r\n+  src={\r\n+    imagemErro\r\n+      ? fallbackImage\r\n+      : previewImage || \"/images/avatar/avatar-default.png\"\r\n+  }\r\n+  alt={influenciador.nome}\r\n+  fill\r\n+  onError={() => setImagemErro(true)}\r\n+  unoptimized\r\n+  className=\"rounded-full object-cover border\"\r\n+/>\r\n                 <div className=\"space-y-1.5\">\r\n   <Label>Seguidores (atuais)</Label>\r\n   <Input value={followersCount?.toLocaleString('pt-BR') || 'Carregando...'} readOnly />\r\n </div>\r\n"
                },
                {
                    "date": 1745362157119,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,8 +105,13 @@\n       onClose();\r\n     }\r\n   };\r\n   const [followersCount, setFollowersCount] = useState<number | null>(null);\r\n+  const [imagemErro, setImagemErro] = useState(false);\r\n+  useEffect(() => {\r\n+    setImagemErro(false);\r\n+  }, [influenciador]);\r\n+\r\n   function isCacheValid(cached: any): boolean {\r\n     if (!cached?.lastFetched) return false;\r\n     const diffInDays = (Date.now() - cached.lastFetched) / (1000 * 60 * 60 * 24);\r\n     return diffInDays < 30;\r\n@@ -160,8 +165,12 @@\n \r\n   fetchInstagramData(username, cacheKey);\r\n }, [influenciador]);\r\n \r\n+// Gera uma imagem \"random\" baseada no nome (usando ui-avatars.com)\r\n+const fallbackImage = `https://ui-avatars.com/api/?name=${encodeURIComponent(\r\n+  influenciador.nome\r\n+)}&background=random&color=fff`;\r\n   return (\r\n     <Dialog open={open} onOpenChange={handleCloseAndUpdate}>\r\n       <DialogContent size=\"full\">\r\n         <DialogHeader>\r\n"
                },
                {
                    "date": 1745443043773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -150,9 +150,9 @@\n     return plataformasSelecionadas.includes(rec.plataformaId) && recTermino < hojeTimestamp;\r\n   });\r\n \r\n   useEffect(() => {\r\n-    const username = influenciador?.instagram?.split(\"/\").pop()?.replace(\"@\", \"\");\r\n+    const username = influenciador?.instagram?.replace(/\\/$/, \"\").split(\"/\").pop()?.replace(\"@\", \"\");\r\n     if (!username) return;\r\n \r\n   const cacheKey = `insta_${username}`;\r\n   const cached = JSON.parse(localStorage.getItem(cacheKey) || \"null\");\r\n"
                },
                {
                    "date": 1745443240280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,10 +68,22 @@\n \r\n   useEffect(() => {\r\n     if (influenciador) {\r\n       setPlataformasSelecionadas(influenciador.recargas.map((r) => r.plataformaId));\r\n-      setPreviewImage(influenciador.imagem);\r\n-      setStatus(influenciador.status);\r\n+      if (influenciador.instagram) {\r\n+        const username = influenciador.instagram.replace(/\\/$/, \"\").split(\"/\").pop()?.replace(\"@\", \"\");\r\n+        const cacheKey = `insta_${username}`;\r\n+        const cached = JSON.parse(localStorage.getItem(cacheKey) || \"null\");\r\n+      \r\n+        if (isCacheValid(cached)) {\r\n+          setPreviewImage(cached.profile_pic_url_hd);\r\n+          setFollowersCount(cached.followers_count);\r\n+        } else {\r\n+          fetchInstagramData(username!, cacheKey);\r\n+        }\r\n+      } else {\r\n+        setPreviewImage(\"/images/avatar/placeholder.png\");\r\n+      }      setStatus(influenciador.status);\r\n       setMotivoBanimento(influenciador.motivoBanimento || \"\");\r\n     }\r\n   }, [influenciador]);\r\n \r\n@@ -182,13 +194,9 @@\n           <div className=\"space-y-4\">\r\n             <div className=\"grid grid-cols-[auto_1fr] gap-4 items-start\">\r\n               <div className=\"relative w-24 h-24 group\">\r\n               <Image\r\n-  src={\r\n-    imagemErro\r\n-      ? fallbackImage\r\n-      : previewImage || \"/images/avatar/avatar-default.png\"\r\n-  }\r\n+  src={imagemErro ? \"/images/avatar/placeholder.png\" : previewImage || \"/images/avatar/placeholder.png\"}\r\n   alt={influenciador.nome}\r\n   fill\r\n   onError={() => setImagemErro(true)}\r\n   unoptimized\r\n"
                },
                {
                    "date": 1745443315603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -191,98 +191,71 @@\n \r\n         <div className=\"grid grid-cols-[35%_1fr] gap-8\">\r\n           {/* Esquerda */}\r\n           <div className=\"space-y-4\">\r\n-            <div className=\"grid grid-cols-[auto_1fr] gap-4 items-start\">\r\n-              <div className=\"relative w-24 h-24 group\">\r\n-              <Image\r\n-  src={imagemErro ? \"/images/avatar/placeholder.png\" : previewImage || \"/images/avatar/placeholder.png\"}\r\n-  alt={influenciador.nome}\r\n-  fill\r\n-  onError={() => setImagemErro(true)}\r\n-  unoptimized\r\n-  className=\"rounded-full object-cover border\"\r\n-/>\r\n-                <div className=\"space-y-1.5\">\r\n-  <Label>Seguidores (atuais)</Label>\r\n-  <Input value={followersCount?.toLocaleString('pt-BR') || 'Carregando...'} readOnly />\r\n-</div>\r\n-                <div\r\n-                  className=\"absolute inset-0 bg-black/50 rounded-full opacity-0 group-hover:opacity-100 flex items-center justify-center cursor-pointer transition\"\r\n-                  onClick={() => inputFileRef.current?.click()}\r\n-                >\r\n-                  <Pencil className=\"text-white w-5 h-5\" />\r\n-                </div>\r\n-                <input ref={inputFileRef} type=\"file\" accept=\"image/*\" onChange={handleImageChange} className=\"hidden\" />\r\n-              </div>\r\n-              <div className=\"space-y-4\">\r\n-                <div className=\"space-y-1.5\">\r\n-                  <Label htmlFor=\"nome\">Nome</Label>\r\n-                  <Input id=\"nome\" defaultValue={influenciador.nome} />\r\n-                </div>\r\n-                <div className=\"space-y-1.5\">\r\n-                  <Label htmlFor=\"instagram\">Instagram</Label>\r\n-                  <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n-                </div>\r\n-              </div>\r\n-            </div>\r\n+  <div className=\"grid grid-cols-[auto_1fr] gap-4 items-start\">\r\n+    <div className=\"relative w-24 h-24 group\">\r\n+      <Image\r\n+        src={\r\n+          imagemErro\r\n+            ? \"/images/avatar/placeholder.png\"\r\n+            : previewImage || \"/images/avatar/placeholder.png\"\r\n+        }\r\n+        alt={influenciador.nome}\r\n+        fill\r\n+        onError={() => setImagemErro(true)}\r\n+        unoptimized\r\n+        className=\"rounded-full object-cover border\"\r\n+      />\r\n+      <div\r\n+        className={`absolute inset-0 rounded-full flex items-center justify-center transition ${\r\n+          influenciador.instagram\r\n+            ? \"bg-black/50 opacity-60 cursor-not-allowed\"\r\n+            : \"bg-black/50 opacity-0 group-hover:opacity-100 cursor-pointer\"\r\n+        }`}\r\n+        onClick={() => {\r\n+          if (!influenciador.instagram) inputFileRef.current?.click();\r\n+        }}\r\n+      >\r\n+        <Pencil className=\"text-white w-5 h-5\" />\r\n+      </div>\r\n+      <input\r\n+        ref={inputFileRef}\r\n+        type=\"file\"\r\n+        accept=\"image/*\"\r\n+        onChange={handleImageChange}\r\n+        className=\"hidden\"\r\n+      />\r\n+    </div>\r\n \r\n-            <div className=\"space-y-1.5\">\r\n-              <Label htmlFor=\"cpf\">CPF</Label>\r\n-              <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n-            </div>\r\n+    <div className=\"space-y-4\">\r\n+      <div className=\"space-y-1.5\">\r\n+        <Label htmlFor=\"nome\">Nome</Label>\r\n+        <Input id=\"nome\" defaultValue={influenciador.nome} />\r\n+      </div>\r\n+      <div className=\"space-y-1.5\">\r\n+        <Label htmlFor=\"instagram\">Instagram</Label>\r\n+        <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n+      </div>\r\n+    </div>\r\n+  </div>\r\n \r\n-            <div className=\"space-y-1.5\">\r\n-              <Label>Data de Cadastro</Label>\r\n-              <Input value={influenciador.dataCadastro} readOnly />\r\n-            </div>\r\n+  <div className=\"space-y-1.5\">\r\n+    <Label>Seguidores (atuais)</Label>\r\n+    <Input value={followersCount?.toLocaleString(\"pt-BR\") || \"Carregando...\"} readOnly />\r\n+  </div>\r\n \r\n-            <div className=\"space-y-1.5\">\r\n-              <Label>Status</Label>\r\n-              <div className=\"flex items-center gap-2\">\r\n-                <div className=\"w-[70%]\">\r\n-                  <ShadSelect value={status} onValueChange={setStatus}>\r\n-                    <SelectTrigger>\r\n-                      <SelectValue placeholder=\"Selecione o status\" />\r\n-                    </SelectTrigger>\r\n-                    <SelectContent>\r\n-                      <SelectItem value=\"lead\">Lead</SelectItem>\r\n-                      <SelectItem value=\"contato\">Em contato</SelectItem>\r\n-                      <SelectItem value=\"negociacao\">Em negociação</SelectItem>\r\n-                      <SelectItem value=\"ativo\">Ativo</SelectItem>\r\n-                      <SelectItem value=\"banido\">Banido</SelectItem>\r\n-                    </SelectContent>\r\n-                  </ShadSelect>\r\n-                </div>\r\n-                {status === \"banido\" && (\r\n-                  <Button type=\"button\" onClick={() => setOpenMotivo(true)} variant=\"ghost\" className=\"w-[30%] text-xs px-2 py-1 border border-destructive text-destructive hover:bg-destructive hover:text-white\">\r\n-                    <AlertCircle className=\"w-4 h-4 mr-1\" /> Motivo\r\n-                  </Button>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n+  <div className=\"space-y-1.5\">\r\n+    <Label htmlFor=\"cpf\">CPF</Label>\r\n+    <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n+  </div>\r\n \r\n-            <InnerDialog open={openMotivo} onOpenChange={setOpenMotivo}>\r\n-              <InnerContent>\r\n-                <div className=\"space-y-2\">\r\n-                  <Label>Motivo do Banimento</Label>\r\n-                  <Textarea value={motivoBanimento} onChange={(e) => setMotivoBanimento(e.target.value)} placeholder=\"Descreva o motivo...\" />\r\n-                </div>\r\n-              </InnerContent>\r\n-            </InnerDialog>\r\n+  <div className=\"space-y-1.5\">\r\n+    <Label>Data de Cadastro</Label>\r\n+    <Input value={influenciador.dataCadastro} readOnly />\r\n+  </div>\r\n+</div>\r\n \r\n-            <div className=\"space-y-1.5\">\r\n-              <Label>Plataformas</Label>\r\n-              <Select\r\n-                isMulti\r\n-                closeMenuOnSelect={false}\r\n-                components={makeAnimated()}\r\n-                options={platformOptions}\r\n-                value={selectedOptions}\r\n-                onChange={(selected) => setPlataformasSelecionadas(selected.map((s) => s.value))}\r\n-              />\r\n-            </div>\r\n-          </div>\r\n \r\n           {/* Direita */}\r\n           <Tabs defaultValue=\"ativas\" className=\"w-full\">\r\n             <TabsList className=\"mb-4\">\r\n"
                },
                {
                    "date": 1745443354418,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,23 +162,34 @@\n     return plataformasSelecionadas.includes(rec.plataformaId) && recTermino < hojeTimestamp;\r\n   });\r\n \r\n   useEffect(() => {\r\n-    const username = influenciador?.instagram?.replace(/\\/$/, \"\").split(\"/\").pop()?.replace(\"@\", \"\");\r\n-    if (!username) return;\r\n+    if (!influenciador) return;\r\n+  \r\n+    setPlataformasSelecionadas(influenciador.recargas.map((r) => r.plataformaId));\r\n+    setStatus(influenciador.status);\r\n+    setMotivoBanimento(influenciador.motivoBanimento || \"\");\r\n+    setImagemErro(false);\r\n+  \r\n+    if (influenciador.instagram) {\r\n+      const username = influenciador.instagram.replace(/\\/$/, \"\").split(\"/\").pop()?.replace(\"@\", \"\");\r\n+      if (!username) return;\r\n+  \r\n+      const cacheKey = `insta_${username}`;\r\n+      const cached = JSON.parse(localStorage.getItem(cacheKey) || \"null\");\r\n+  \r\n+      if (isCacheValid(cached)) {\r\n+        setPreviewImage(cached.profile_pic_url_hd);\r\n+        setFollowersCount(cached.followers_count);\r\n+      } else {\r\n+        fetchInstagramData(username, cacheKey);\r\n+      }\r\n+    } else {\r\n+      setPreviewImage(\"/images/avatar/placeholder.png\");\r\n+    }\r\n+  }, [influenciador]);\r\n+  \r\n \r\n-  const cacheKey = `insta_${username}`;\r\n-  const cached = JSON.parse(localStorage.getItem(cacheKey) || \"null\");\r\n-\r\n-  if (isCacheValid(cached)) {\r\n-    setPreviewImage(cached.profile_pic_url_hd);\r\n-    setFollowersCount(cached.followers_count);\r\n-    return;\r\n-  }\r\n-\r\n-  fetchInstagramData(username, cacheKey);\r\n-}, [influenciador]);\r\n-\r\n // Gera uma imagem \"random\" baseada no nome (usando ui-avatars.com)\r\n const fallbackImage = `https://ui-avatars.com/api/?name=${encodeURIComponent(\r\n   influenciador.nome\r\n )}&background=random&color=fff`;\r\n"
                },
                {
                    "date": 1745443434465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,29 +66,8 @@\n     plataformasSelecionadas.includes(opt.value)\r\n   );\r\n \r\n   useEffect(() => {\r\n-    if (influenciador) {\r\n-      setPlataformasSelecionadas(influenciador.recargas.map((r) => r.plataformaId));\r\n-      if (influenciador.instagram) {\r\n-        const username = influenciador.instagram.replace(/\\/$/, \"\").split(\"/\").pop()?.replace(\"@\", \"\");\r\n-        const cacheKey = `insta_${username}`;\r\n-        const cached = JSON.parse(localStorage.getItem(cacheKey) || \"null\");\r\n-      \r\n-        if (isCacheValid(cached)) {\r\n-          setPreviewImage(cached.profile_pic_url_hd);\r\n-          setFollowersCount(cached.followers_count);\r\n-        } else {\r\n-          fetchInstagramData(username!, cacheKey);\r\n-        }\r\n-      } else {\r\n-        setPreviewImage(\"/images/avatar/placeholder.png\");\r\n-      }      setStatus(influenciador.status);\r\n-      setMotivoBanimento(influenciador.motivoBanimento || \"\");\r\n-    }\r\n-  }, [influenciador]);\r\n-\r\n-  useEffect(() => {\r\n     if (status === \"banido\") {\r\n       setOpenMotivo(true);\r\n     }\r\n   }, [status]);\r\n@@ -133,9 +112,9 @@\n       const response = await fetch(`/api/instagram/profile?username=${username}`);\r\n       const data = await response.json();\r\n   \r\n       const profilePic = data.profile_pic_url_hd;\r\n-      const followers = data.edge_followed_by.count;\r\n+      const followers = data.followers;\r\n   \r\n       setPreviewImage(profilePic);\r\n       setFollowersCount(followers);\r\n   \r\n"
                },
                {
                    "date": 1745443515200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,9 +139,8 @@\n   const recargasHistorico = influenciador.recargas.filter((rec) => {\r\n     const recTermino = Date.parse(rec.termino);\r\n     return plataformasSelecionadas.includes(rec.plataformaId) && recTermino < hojeTimestamp;\r\n   });\r\n-\r\n   useEffect(() => {\r\n     if (!influenciador) return;\r\n   \r\n     setPlataformasSelecionadas(influenciador.recargas.map((r) => r.plataformaId));\r\n@@ -159,15 +158,16 @@\n       if (isCacheValid(cached)) {\r\n         setPreviewImage(cached.profile_pic_url_hd);\r\n         setFollowersCount(cached.followers_count);\r\n       } else {\r\n-        fetchInstagramData(username, cacheKey);\r\n+        fetchInstagramData(username, cacheKey); // <- corrigido\r\n       }\r\n     } else {\r\n       setPreviewImage(\"/images/avatar/placeholder.png\");\r\n     }\r\n   }, [influenciador]);\r\n   \r\n+  \r\n \r\n // Gera uma imagem \"random\" baseada no nome (usando ui-avatars.com)\r\n const fallbackImage = `https://ui-avatars.com/api/?name=${encodeURIComponent(\r\n   influenciador.nome\r\n"
                },
                {
                    "date": 1745443530399,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,8 +72,9 @@\n     }\r\n   }, [status]);\r\n \r\n   const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n+    if (influenciador?.instagram) return; // impede overwrite\r\n     const file = e.target.files?.[0];\r\n     if (file) {\r\n       const reader = new FileReader();\r\n       reader.onloadend = () => {\r\n"
                },
                {
                    "date": 1745443731774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,8 +117,9 @@\n       const followers = data.followers;\r\n   \r\n       setPreviewImage(profilePic);\r\n       setFollowersCount(followers);\r\n+      console.log(\"📸 URL da imagem carregada:\", profilePic);\r\n   \r\n       localStorage.setItem(cacheKey, JSON.stringify({\r\n         profile_pic_url_hd: profilePic,\r\n         followers_count: followers,\r\n@@ -126,8 +127,9 @@\n       }));\r\n     } catch (error) {\r\n       console.error('Erro ao buscar dados do Instagram:', error);\r\n     }\r\n+    \r\n   };\r\n \r\n   const hoje = new Date().toISOString().split(\"T\")[0];\r\n   const hojeTimestamp = Date.parse(hoje);\r\n"
                },
                {
                    "date": 1745443929860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,15 +66,23 @@\n     plataformasSelecionadas.includes(opt.value)\r\n   );\r\n \r\n   useEffect(() => {\r\n+    if (influenciador) {\r\n+      setPlataformasSelecionadas(influenciador.recargas.map((r) => r.plataformaId));\r\n+      setPreviewImage(influenciador.imagem);\r\n+      setStatus(influenciador.status);\r\n+      setMotivoBanimento(influenciador.motivoBanimento || \"\");\r\n+    }\r\n+  }, [influenciador]);\r\n+\r\n+  useEffect(() => {\r\n     if (status === \"banido\") {\r\n       setOpenMotivo(true);\r\n     }\r\n   }, [status]);\r\n \r\n   const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n-    if (influenciador?.instagram) return; // impede overwrite\r\n     const file = e.target.files?.[0];\r\n     if (file) {\r\n       const reader = new FileReader();\r\n       reader.onloadend = () => {\r\n@@ -113,13 +121,12 @@\n       const response = await fetch(`/api/instagram/profile?username=${username}`);\r\n       const data = await response.json();\r\n   \r\n       const profilePic = data.profile_pic_url_hd;\r\n-      const followers = data.followers;\r\n+      const followers = data.edge_followed_by.count;\r\n   \r\n       setPreviewImage(profilePic);\r\n       setFollowersCount(followers);\r\n-      console.log(\"📸 URL da imagem carregada:\", profilePic);\r\n   \r\n       localStorage.setItem(cacheKey, JSON.stringify({\r\n         profile_pic_url_hd: profilePic,\r\n         followers_count: followers,\r\n@@ -127,9 +134,8 @@\n       }));\r\n     } catch (error) {\r\n       console.error('Erro ao buscar dados do Instagram:', error);\r\n     }\r\n-    \r\n   };\r\n \r\n   const hoje = new Date().toISOString().split(\"T\")[0];\r\n   const hojeTimestamp = Date.parse(hoje);\r\n@@ -142,36 +148,25 @@\n   const recargasHistorico = influenciador.recargas.filter((rec) => {\r\n     const recTermino = Date.parse(rec.termino);\r\n     return plataformasSelecionadas.includes(rec.plataformaId) && recTermino < hojeTimestamp;\r\n   });\r\n+\r\n   useEffect(() => {\r\n-    if (!influenciador) return;\r\n-  \r\n-    setPlataformasSelecionadas(influenciador.recargas.map((r) => r.plataformaId));\r\n-    setStatus(influenciador.status);\r\n-    setMotivoBanimento(influenciador.motivoBanimento || \"\");\r\n-    setImagemErro(false);\r\n-  \r\n-    if (influenciador.instagram) {\r\n-      const username = influenciador.instagram.replace(/\\/$/, \"\").split(\"/\").pop()?.replace(\"@\", \"\");\r\n-      if (!username) return;\r\n-  \r\n-      const cacheKey = `insta_${username}`;\r\n-      const cached = JSON.parse(localStorage.getItem(cacheKey) || \"null\");\r\n-  \r\n-      if (isCacheValid(cached)) {\r\n-        setPreviewImage(cached.profile_pic_url_hd);\r\n-        setFollowersCount(cached.followers_count);\r\n-      } else {\r\n-        fetchInstagramData(username, cacheKey); // <- corrigido\r\n-      }\r\n-    } else {\r\n-      setPreviewImage(\"/images/avatar/placeholder.png\");\r\n-    }\r\n-  }, [influenciador]);\r\n-  \r\n-  \r\n+    const username = influenciador?.instagram?.replace(/\\/$/, \"\").split(\"/\").pop()?.replace(\"@\", \"\");\r\n+    if (!username) return;\r\n \r\n+  const cacheKey = `insta_${username}`;\r\n+  const cached = JSON.parse(localStorage.getItem(cacheKey) || \"null\");\r\n+\r\n+  if (isCacheValid(cached)) {\r\n+    setPreviewImage(cached.profile_pic_url_hd);\r\n+    setFollowersCount(cached.followers_count);\r\n+    return;\r\n+  }\r\n+\r\n+  fetchInstagramData(username, cacheKey);\r\n+}, [influenciador]);\r\n+\r\n // Gera uma imagem \"random\" baseada no nome (usando ui-avatars.com)\r\n const fallbackImage = `https://ui-avatars.com/api/?name=${encodeURIComponent(\r\n   influenciador.nome\r\n )}&background=random&color=fff`;\r\n@@ -184,71 +179,102 @@\n \r\n         <div className=\"grid grid-cols-[35%_1fr] gap-8\">\r\n           {/* Esquerda */}\r\n           <div className=\"space-y-4\">\r\n-  <div className=\"grid grid-cols-[auto_1fr] gap-4 items-start\">\r\n-    <div className=\"relative w-24 h-24 group\">\r\n-      <Image\r\n-        src={\r\n-          imagemErro\r\n-            ? \"/images/avatar/placeholder.png\"\r\n-            : previewImage || \"/images/avatar/placeholder.png\"\r\n-        }\r\n-        alt={influenciador.nome}\r\n-        fill\r\n-        onError={() => setImagemErro(true)}\r\n-        unoptimized\r\n-        className=\"rounded-full object-cover border\"\r\n-      />\r\n-      <div\r\n-        className={`absolute inset-0 rounded-full flex items-center justify-center transition ${\r\n-          influenciador.instagram\r\n-            ? \"bg-black/50 opacity-60 cursor-not-allowed\"\r\n-            : \"bg-black/50 opacity-0 group-hover:opacity-100 cursor-pointer\"\r\n-        }`}\r\n-        onClick={() => {\r\n-          if (!influenciador.instagram) inputFileRef.current?.click();\r\n-        }}\r\n-      >\r\n-        <Pencil className=\"text-white w-5 h-5\" />\r\n-      </div>\r\n-      <input\r\n-        ref={inputFileRef}\r\n-        type=\"file\"\r\n-        accept=\"image/*\"\r\n-        onChange={handleImageChange}\r\n-        className=\"hidden\"\r\n-      />\r\n-    </div>\r\n+            <div className=\"grid grid-cols-[auto_1fr] gap-4 items-start\">\r\n+              <div className=\"relative w-24 h-24 group\">\r\n+              <Image\r\n+  src={\r\n+    imagemErro\r\n+      ? fallbackImage\r\n+      : previewImage || \"/images/avatar/avatar-default.png\"\r\n+  }\r\n+  alt={influenciador.nome}\r\n+  fill\r\n+  onError={() => setImagemErro(true)}\r\n+  unoptimized\r\n+  className=\"rounded-full object-cover border\"\r\n+/>\r\n+                <div className=\"space-y-1.5\">\r\n+  <Label>Seguidores (atuais)</Label>\r\n+  <Input value={followersCount?.toLocaleString('pt-BR') || 'Carregando...'} readOnly />\r\n+</div>\r\n+                <div\r\n+                  className=\"absolute inset-0 bg-black/50 rounded-full opacity-0 group-hover:opacity-100 flex items-center justify-center cursor-pointer transition\"\r\n+                  onClick={() => inputFileRef.current?.click()}\r\n+                >\r\n+                  <Pencil className=\"text-white w-5 h-5\" />\r\n+                </div>\r\n+                <input ref={inputFileRef} type=\"file\" accept=\"image/*\" onChange={handleImageChange} className=\"hidden\" />\r\n+              </div>\r\n+              <div className=\"space-y-4\">\r\n+                <div className=\"space-y-1.5\">\r\n+                  <Label htmlFor=\"nome\">Nome</Label>\r\n+                  <Input id=\"nome\" defaultValue={influenciador.nome} />\r\n+                </div>\r\n+                <div className=\"space-y-1.5\">\r\n+                  <Label htmlFor=\"instagram\">Instagram</Label>\r\n+                  <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n \r\n-    <div className=\"space-y-4\">\r\n-      <div className=\"space-y-1.5\">\r\n-        <Label htmlFor=\"nome\">Nome</Label>\r\n-        <Input id=\"nome\" defaultValue={influenciador.nome} />\r\n-      </div>\r\n-      <div className=\"space-y-1.5\">\r\n-        <Label htmlFor=\"instagram\">Instagram</Label>\r\n-        <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n-      </div>\r\n-    </div>\r\n-  </div>\r\n+            <div className=\"space-y-1.5\">\r\n+              <Label htmlFor=\"cpf\">CPF</Label>\r\n+              <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n+            </div>\r\n \r\n-  <div className=\"space-y-1.5\">\r\n-    <Label>Seguidores (atuais)</Label>\r\n-    <Input value={followersCount?.toLocaleString(\"pt-BR\") || \"Carregando...\"} readOnly />\r\n-  </div>\r\n+            <div className=\"space-y-1.5\">\r\n+              <Label>Data de Cadastro</Label>\r\n+              <Input value={influenciador.dataCadastro} readOnly />\r\n+            </div>\r\n \r\n-  <div className=\"space-y-1.5\">\r\n-    <Label htmlFor=\"cpf\">CPF</Label>\r\n-    <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n-  </div>\r\n+            <div className=\"space-y-1.5\">\r\n+              <Label>Status</Label>\r\n+              <div className=\"flex items-center gap-2\">\r\n+                <div className=\"w-[70%]\">\r\n+                  <ShadSelect value={status} onValueChange={setStatus}>\r\n+                    <SelectTrigger>\r\n+                      <SelectValue placeholder=\"Selecione o status\" />\r\n+                    </SelectTrigger>\r\n+                    <SelectContent>\r\n+                      <SelectItem value=\"lead\">Lead</SelectItem>\r\n+                      <SelectItem value=\"contato\">Em contato</SelectItem>\r\n+                      <SelectItem value=\"negociacao\">Em negociação</SelectItem>\r\n+                      <SelectItem value=\"ativo\">Ativo</SelectItem>\r\n+                      <SelectItem value=\"banido\">Banido</SelectItem>\r\n+                    </SelectContent>\r\n+                  </ShadSelect>\r\n+                </div>\r\n+                {status === \"banido\" && (\r\n+                  <Button type=\"button\" onClick={() => setOpenMotivo(true)} variant=\"ghost\" className=\"w-[30%] text-xs px-2 py-1 border border-destructive text-destructive hover:bg-destructive hover:text-white\">\r\n+                    <AlertCircle className=\"w-4 h-4 mr-1\" /> Motivo\r\n+                  </Button>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n \r\n-  <div className=\"space-y-1.5\">\r\n-    <Label>Data de Cadastro</Label>\r\n-    <Input value={influenciador.dataCadastro} readOnly />\r\n-  </div>\r\n-</div>\r\n+            <InnerDialog open={openMotivo} onOpenChange={setOpenMotivo}>\r\n+              <InnerContent>\r\n+                <div className=\"space-y-2\">\r\n+                  <Label>Motivo do Banimento</Label>\r\n+                  <Textarea value={motivoBanimento} onChange={(e) => setMotivoBanimento(e.target.value)} placeholder=\"Descreva o motivo...\" />\r\n+                </div>\r\n+              </InnerContent>\r\n+            </InnerDialog>\r\n \r\n+            <div className=\"space-y-1.5\">\r\n+              <Label>Plataformas</Label>\r\n+              <Select\r\n+                isMulti\r\n+                closeMenuOnSelect={false}\r\n+                components={makeAnimated()}\r\n+                options={platformOptions}\r\n+                value={selectedOptions}\r\n+                onChange={(selected) => setPlataformasSelecionadas(selected.map((s) => s.value))}\r\n+              />\r\n+            </div>\r\n+          </div>\r\n \r\n           {/* Direita */}\r\n           <Tabs defaultValue=\"ativas\" className=\"w-full\">\r\n             <TabsList className=\"mb-4\">\r\n"
                },
                {
                    "date": 1745443964977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -193,12 +193,8 @@\n   onError={() => setImagemErro(true)}\r\n   unoptimized\r\n   className=\"rounded-full object-cover border\"\r\n />\r\n-                <div className=\"space-y-1.5\">\r\n-  <Label>Seguidores (atuais)</Label>\r\n-  <Input value={followersCount?.toLocaleString('pt-BR') || 'Carregando...'} readOnly />\r\n-</div>\r\n                 <div\r\n                   className=\"absolute inset-0 bg-black/50 rounded-full opacity-0 group-hover:opacity-100 flex items-center justify-center cursor-pointer transition\"\r\n                   onClick={() => inputFileRef.current?.click()}\r\n                 >\r\n"
                },
                {
                    "date": 1745444151396,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -184,10 +184,10 @@\n               <div className=\"relative w-24 h-24 group\">\r\n               <Image\r\n   src={\r\n     imagemErro\r\n-      ? fallbackImage\r\n-      : previewImage || \"/images/avatar/avatar-default.png\"\r\n+      ? \"/images/avatar/placeholder.png\"\r\n+      : previewImage || \"/images/avatar/placeholder.png\"\r\n   }\r\n   alt={influenciador.nome}\r\n   fill\r\n   onError={() => setImagemErro(true)}\r\n"
                },
                {
                    "date": 1745445462624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -324,10 +324,17 @@\n         <div className=\"grid grid-cols-3 gap-4 text-sm\">\r\n           <div className=\"space-y-1.5\"><Label>Meta</Label><Input type=\"number\" defaultValue={rec.meta} /></div>\r\n           <div className=\"space-y-1.5\"><Label>Atingido</Label><Input type=\"number\" defaultValue={rec.atingido} /></div>\r\n           <div className=\"space-y-1.5\"><Label>Reembolso</Label><Input type=\"number\" defaultValue={rec.reembolso} /></div>\r\n-          <div className=\"space-y-1.5\"><Label>Salário (R$)</Label><Input type=\"number\" defaultValue={rec.salario} /></div>\r\n-          <div className=\"space-y-1.5\"><Label>Início</Label><Input type=\"date\" defaultValue={rec.inicio} /></div>\r\n+          <Label>Salário</Label>\r\n+<div className=\"relative\">\r\n+  <span className=\"absolute left-3 top-1/2 -translate-y-1/2 text-muted-foreground text-sm\">R$</span>\r\n+  <Input\r\n+    type=\"number\"\r\n+    defaultValue={rec.salario}\r\n+    className=\"pl-10\"\r\n+  />\r\n+</div>          <div className=\"space-y-1.5\"><Label>Início</Label><Input type=\"date\" defaultValue={rec.inicio} /></div>\r\n           <div className=\"space-y-1.5\"><Label>Término</Label><Input type=\"date\" defaultValue={rec.termino} /></div>\r\n         </div>\r\n       </div>\r\n     );\r\n"
                },
                {
                    "date": 1745445709250,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,11 @@\n import makeAnimated from \"react-select/animated\";\r\n import { Dialog as InnerDialog, DialogContent as InnerContent } from \"@/components/ui/dialog\";\r\n import { plataformas } from \"@/lib/data\";\r\n import { Influenciador } from \"@/lib/influenciadores\";\r\n+import { InputGroup, InputGroupText } from \"@/components/ui/input-group\";\r\n \r\n+\r\n interface OptionType {\r\n   value: string;\r\n   label: string;\r\n   icon?: string;\r\n@@ -321,22 +323,50 @@\n           </div>\r\n           <div className={`px-3 py-1 rounded-full text-xs font-medium ${statusClass}`}>{statusLabel}</div>\r\n         </div>\r\n         <div className=\"grid grid-cols-3 gap-4 text-sm\">\r\n-          <div className=\"space-y-1.5\"><Label>Meta</Label><Input type=\"number\" defaultValue={rec.meta} /></div>\r\n-          <div className=\"space-y-1.5\"><Label>Atingido</Label><Input type=\"number\" defaultValue={rec.atingido} /></div>\r\n-          <div className=\"space-y-1.5\"><Label>Reembolso</Label><Input type=\"number\" defaultValue={rec.reembolso} /></div>\r\n-          <Label>Salário</Label>\r\n-<div className=\"relative\">\r\n-  <span className=\"absolute left-3 top-1/2 -translate-y-1/2 text-muted-foreground text-sm\">R$</span>\r\n-  <Input\r\n-    type=\"number\"\r\n-    defaultValue={rec.salario}\r\n-    className=\"pl-10\"\r\n-  />\r\n-</div>          <div className=\"space-y-1.5\"><Label>Início</Label><Input type=\"date\" defaultValue={rec.inicio} /></div>\r\n-          <div className=\"space-y-1.5\"><Label>Término</Label><Input type=\"date\" defaultValue={rec.termino} /></div>\r\n-        </div>\r\n+  <div className=\"space-y-1.5\">\r\n+    <Label>Meta</Label>\r\n+    <InputGroup>\r\n+      <InputGroupText>R$</InputGroupText>\r\n+      <Input type=\"number\" defaultValue={rec.meta} />\r\n+    </InputGroup>\r\n+  </div>\r\n+\r\n+  <div className=\"space-y-1.5\">\r\n+    <Label>Atingido</Label>\r\n+    <InputGroup>\r\n+      <InputGroupText>R$</InputGroupText>\r\n+      <Input type=\"number\" defaultValue={rec.atingido} />\r\n+    </InputGroup>\r\n+  </div>\r\n+\r\n+  <div className=\"space-y-1.5\">\r\n+    <Label>Reembolso</Label>\r\n+    <InputGroup>\r\n+      <InputGroupText>R$</InputGroupText>\r\n+      <Input type=\"number\" defaultValue={rec.reembolso} />\r\n+    </InputGroup>\r\n+  </div>\r\n+\r\n+  <div className=\"space-y-1.5\">\r\n+    <Label>Salário</Label>\r\n+    <InputGroup>\r\n+      <InputGroupText>R$</InputGroupText>\r\n+      <Input type=\"number\" defaultValue={rec.salario} />\r\n+    </InputGroup>\r\n+  </div>\r\n+\r\n+  <div className=\"space-y-1.5\">\r\n+    <Label>Início</Label>\r\n+    <Input type=\"date\" defaultValue={rec.inicio} />\r\n+  </div>\r\n+\r\n+  <div className=\"space-y-1.5\">\r\n+    <Label>Término</Label>\r\n+    <Input type=\"date\" defaultValue={rec.termino} />\r\n+  </div>\r\n+</div>\r\n       </div>\r\n     );\r\n   }\r\n };\r\n"
                },
                {
                    "date": 1745445810098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -322,9 +322,9 @@\n             <span className=\"font-medium text-sm\">{plataforma?.nome}</span>\r\n           </div>\r\n           <div className={`px-3 py-1 rounded-full text-xs font-medium ${statusClass}`}>{statusLabel}</div>\r\n         </div>\r\n-        <div className=\"grid grid-cols-3 gap-4 text-sm\">\r\n+        <div className=\"grid grid-cols-6 gap-2 text-sm\">\r\n   <div className=\"space-y-1.5\">\r\n     <Label>Meta</Label>\r\n     <InputGroup>\r\n       <InputGroupText>R$</InputGroupText>\r\n"
                },
                {
                    "date": 1745462135574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -314,9 +314,9 @@\n \r\n     return (\r\n       <div key={index} className=\"border border-muted rounded-md p-4 space-y-3\">\r\n         <div className=\"flex items-center justify-between\">\r\n-          <div className=\"flex items-center gap-2\">\r\n+          <div className=\"flex items-center gap-4\">\r\n             {plataforma?.imagem && (\r\n               <Image src={plataforma.imagem} alt={plataforma.nome} width={40} height={40} className=\"rounded\" />\r\n             )}\r\n             <span className=\"font-medium text-sm\">{plataforma?.nome}</span>\r\n"
                },
                {
                    "date": 1745462152278,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -314,13 +314,12 @@\n \r\n     return (\r\n       <div key={index} className=\"border border-muted rounded-md p-4 space-y-3\">\r\n         <div className=\"flex items-center justify-between\">\r\n-          <div className=\"flex items-center gap-4\">\r\n+          <div className=\"flex items-center gap-\">\r\n             {plataforma?.imagem && (\r\n               <Image src={plataforma.imagem} alt={plataforma.nome} width={40} height={40} className=\"rounded\" />\r\n             )}\r\n-            <span className=\"font-medium text-sm\">{plataforma?.nome}</span>\r\n           </div>\r\n           <div className={`px-3 py-1 rounded-full text-xs font-medium ${statusClass}`}>{statusLabel}</div>\r\n         </div>\r\n         <div className=\"grid grid-cols-6 gap-2 text-sm\">\r\n"
                },
                {
                    "date": 1745462164092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -316,9 +316,9 @@\n       <div key={index} className=\"border border-muted rounded-md p-4 space-y-3\">\r\n         <div className=\"flex items-center justify-between\">\r\n           <div className=\"flex items-center gap-\">\r\n             {plataforma?.imagem && (\r\n-              <Image src={plataforma.imagem} alt={plataforma.nome} width={40} height={40} className=\"rounded\" />\r\n+              <Image src={plataforma.imagem} alt={plataforma.nome} width={60} height={60} className=\"rounded\" />\r\n             )}\r\n           </div>\r\n           <div className={`px-3 py-1 rounded-full text-xs font-medium ${statusClass}`}>{statusLabel}</div>\r\n         </div>\r\n"
                },
                {
                    "date": 1745462179138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -316,9 +316,9 @@\n       <div key={index} className=\"border border-muted rounded-md p-4 space-y-3\">\r\n         <div className=\"flex items-center justify-between\">\r\n           <div className=\"flex items-center gap-\">\r\n             {plataforma?.imagem && (\r\n-              <Image src={plataforma.imagem} alt={plataforma.nome} width={60} height={60} className=\"rounded\" />\r\n+              <Image src={plataforma.imagem} alt={plataforma.nome} width={48} height={48} className=\"rounded\" />\r\n             )}\r\n           </div>\r\n           <div className={`px-3 py-1 rounded-full text-xs font-medium ${statusClass}`}>{statusLabel}</div>\r\n         </div>\r\n"
                },
                {
                    "date": 1745462247087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -312,9 +312,9 @@\n         ? \"bg-green-500 text-white\"\r\n         : \"bg-yellow-400 text-yellow-900\";\r\n \r\n     return (\r\n-      <div key={index} className=\"border border-muted rounded-md p-4 space-y-3\">\r\n+      <div key={index} className=\"border border-muted gap-3 rounded-md p-4 space-y-3\">\r\n         <div className=\"flex items-center justify-between\">\r\n           <div className=\"flex items-center gap-\">\r\n             {plataforma?.imagem && (\r\n               <Image src={plataforma.imagem} alt={plataforma.nome} width={48} height={48} className=\"rounded\" />\r\n"
                },
                {
                    "date": 1745462253315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -312,9 +312,9 @@\n         ? \"bg-green-500 text-white\"\r\n         : \"bg-yellow-400 text-yellow-900\";\r\n \r\n     return (\r\n-      <div key={index} className=\"border border-muted gap-3 rounded-md p-4 space-y-3\">\r\n+      <div key={index} className=\"border border-muted rounded-md p-4 space-y-3\">\r\n         <div className=\"flex items-center justify-between\">\r\n           <div className=\"flex items-center gap-\">\r\n             {plataforma?.imagem && (\r\n               <Image src={plataforma.imagem} alt={plataforma.nome} width={48} height={48} className=\"rounded\" />\r\n"
                },
                {
                    "date": 1745462258920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -312,9 +312,9 @@\n         ? \"bg-green-500 text-white\"\r\n         : \"bg-yellow-400 text-yellow-900\";\r\n \r\n     return (\r\n-      <div key={index} className=\"border border-muted rounded-md p-4 space-y-3\">\r\n+      <div key={index} className=\" p-4 space-y-3\">\r\n         <div className=\"flex items-center justify-between\">\r\n           <div className=\"flex items-center gap-\">\r\n             {plataforma?.imagem && (\r\n               <Image src={plataforma.imagem} alt={plataforma.nome} width={48} height={48} className=\"rounded\" />\r\n"
                },
                {
                    "date": 1745462264725,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -312,9 +312,9 @@\n         ? \"bg-green-500 text-white\"\r\n         : \"bg-yellow-400 text-yellow-900\";\r\n \r\n     return (\r\n-      <div key={index} className=\" p-4 space-y-3\">\r\n+      <div key={index} className=\"border border-muted rounded-md p-4 space-y-3\">\r\n         <div className=\"flex items-center justify-between\">\r\n           <div className=\"flex items-center gap-\">\r\n             {plataforma?.imagem && (\r\n               <Image src={plataforma.imagem} alt={plataforma.nome} width={48} height={48} className=\"rounded\" />\r\n"
                },
                {
                    "date": 1745462271083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -312,9 +312,9 @@\n         ? \"bg-green-500 text-white\"\r\n         : \"bg-yellow-400 text-yellow-900\";\r\n \r\n     return (\r\n-      <div key={index} className=\"border border-muted rounded-md p-4 space-y-3\">\r\n+      <div key={index} className=\"border border-muted rounded-md m-2 p-4 space-y-3\">\r\n         <div className=\"flex items-center justify-between\">\r\n           <div className=\"flex items-center gap-\">\r\n             {plataforma?.imagem && (\r\n               <Image src={plataforma.imagem} alt={plataforma.nome} width={48} height={48} className=\"rounded\" />\r\n"
                },
                {
                    "date": 1745462284446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -312,9 +312,9 @@\n         ? \"bg-green-500 text-white\"\r\n         : \"bg-yellow-400 text-yellow-900\";\r\n \r\n     return (\r\n-      <div key={index} className=\"border border-muted rounded-md m-2 p-4 space-y-3\">\r\n+      <div key={index} className=\"border border-muted rounded-md  p-4 space-y-3\">\r\n         <div className=\"flex items-center justify-between\">\r\n           <div className=\"flex items-center gap-\">\r\n             {plataforma?.imagem && (\r\n               <Image src={plataforma.imagem} alt={plataforma.nome} width={48} height={48} className=\"rounded\" />\r\n"
                },
                {
                    "date": 1745462295269,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -312,9 +312,9 @@\n         ? \"bg-green-500 text-white\"\r\n         : \"bg-yellow-400 text-yellow-900\";\r\n \r\n     return (\r\n-      <div key={index} className=\"border border-muted rounded-md  p-4 space-y-3\">\r\n+      <div key={index} className=\"border border-muted rounded-md m-2 p-4 space-y-3\">\r\n         <div className=\"flex items-center justify-between\">\r\n           <div className=\"flex items-center gap-\">\r\n             {plataforma?.imagem && (\r\n               <Image src={plataforma.imagem} alt={plataforma.nome} width={48} height={48} className=\"rounded\" />\r\n"
                },
                {
                    "date": 1745462709273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -275,9 +275,9 @@\n \r\n           {/* Direita */}\r\n           <Tabs defaultValue=\"ativas\" className=\"w-full\">\r\n             <TabsList className=\"mb-4\">\r\n-              <TabsTrigger value=\"ativas\">Plataformas Ativas</TabsTrigger>\r\n+              <TabsTrigger value=\"ativas\">Recargas  Ativas</TabsTrigger>\r\n               <TabsTrigger value=\"historico\">Histórico</TabsTrigger>\r\n             </TabsList>\r\n \r\n             <TabsContent value=\"ativas\">\r\n"
                },
                {
                    "date": 1745462726525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -280,12 +280,18 @@\n               <TabsTrigger value=\"historico\">Histórico</TabsTrigger>\r\n             </TabsList>\r\n \r\n             <TabsContent value=\"ativas\">\r\n-              <ScrollArea className=\"max-h-[450px] pr-2\">\r\n-                {recargasAtivas.map((rec, index) => renderRecargaCard(rec, index))}\r\n-              </ScrollArea>\r\n-            </TabsContent>\r\n+  {recargasAtivas.length === 0 ? (\r\n+    <div className=\"text-muted-foreground text-sm p-4\">\r\n+      Nenhuma recarga ativa no momento.\r\n+    </div>\r\n+  ) : (\r\n+    <ScrollArea className=\"max-h-[450px] pr-2\">\r\n+      {recargasAtivas.map((rec, index) => renderRecargaCard(rec, index))}\r\n+    </ScrollArea>\r\n+  )}\r\n+</TabsContent>\r\n \r\n             <TabsContent value=\"historico\">\r\n               <ScrollArea className=\"max-h-[450px] pr-2\">\r\n                 {recargasHistorico.map((rec, index) => renderRecargaCard(rec, index))}\r\n"
                },
                {
                    "date": 1745462766047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -281,9 +281,9 @@\n             </TabsList>\r\n \r\n             <TabsContent value=\"ativas\">\r\n   {recargasAtivas.length === 0 ? (\r\n-    <div className=\"text-muted-foreground text-sm p-4\">\r\n+    <div className=\"flex items-center justify-center h-[300px] text-muted-foreground text-sm text-center\">\r\n       Nenhuma recarga ativa no momento.\r\n     </div>\r\n   ) : (\r\n     <ScrollArea className=\"max-h-[450px] pr-2\">\r\n"
                },
                {
                    "date": 1745468308394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,10 +33,12 @@\n import { Dialog as InnerDialog, DialogContent as InnerContent } from \"@/components/ui/dialog\";\r\n import { plataformas } from \"@/lib/data\";\r\n import { Influenciador } from \"@/lib/influenciadores\";\r\n import { InputGroup, InputGroupText } from \"@/components/ui/input-group\";\r\n+import RecargasModal from \"@/components/RecargasModal\";\r\n \r\n \r\n+\r\n interface OptionType {\r\n   value: string;\r\n   label: string;\r\n   icon?: string;\r\n@@ -63,8 +65,10 @@\n     value: p.id,\r\n     label: p.nome,\r\n   }));\r\n \r\n+  const [recargaModalOpen, setRecargaModalOpen] = useState(false);\r\n+\r\n   const selectedOptions = platformOptions.filter((opt) =>\r\n     plataformasSelecionadas.includes(opt.value)\r\n   );\r\n \r\n@@ -273,14 +277,31 @@\n             </div>\r\n           </div>\r\n \r\n           {/* Direita */}\r\n-          <Tabs defaultValue=\"ativas\" className=\"w-full\">\r\n-            <TabsList className=\"mb-4\">\r\n-              <TabsTrigger value=\"ativas\">Recargas  Ativas</TabsTrigger>\r\n-              <TabsTrigger value=\"historico\">Histórico</TabsTrigger>\r\n-            </TabsList>\r\n+          {/* Antes: */}\r\n+{/* <TabsList className=\"mb-4\"> */}\r\n+{/*   <TabsTrigger value=\"ativas\">Recargas  Ativas</TabsTrigger> */}\r\n+{/*   <TabsTrigger value=\"historico\">Histórico</TabsTrigger> */}\r\n+{/* </TabsList> */}\r\n \r\n+{/* Depois: */}\r\n+<div className=\"flex items-center mb-4 space-x-2\">\r\n+  <Button\r\n+    variant=\"outline\"\r\n+    size=\"sm\"\r\n+    onClick={() => setRecargaModalOpen(true)}\r\n+    className=\"w-8 h-8 p-0 text-xl\"\r\n+    aria-label=\"Nova recarga\"\r\n+  >\r\n+    +\r\n+  </Button>\r\n+  <TabsList>\r\n+    <TabsTrigger value=\"ativas\">Recargas Ativas</TabsTrigger>\r\n+    <TabsTrigger value=\"historico\">Histórico</TabsTrigger>\r\n+  </TabsList>\r\n+</div>\r\n+\r\n             <TabsContent value=\"ativas\">\r\n   {recargasAtivas.length === 0 ? (\r\n     <div className=\"flex items-center justify-center h-[300px] text-muted-foreground text-sm text-center\">\r\n       Nenhuma recarga ativa no momento.\r\n"
                },
                {
                    "date": 1745468407557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n   const platformOptions: OptionType[] = plataformas.map((p) => ({\r\n     value: p.id,\r\n     label: p.nome,\r\n   }));\r\n-\r\n+  \r\n   const [recargaModalOpen, setRecargaModalOpen] = useState(false);\r\n \r\n   const selectedOptions = platformOptions.filter((opt) =>\r\n     plataformasSelecionadas.includes(opt.value)\r\n@@ -277,31 +277,24 @@\n             </div>\r\n           </div>\r\n \r\n           {/* Direita */}\r\n-          {/* Antes: */}\r\n-{/* <TabsList className=\"mb-4\"> */}\r\n-{/*   <TabsTrigger value=\"ativas\">Recargas  Ativas</TabsTrigger> */}\r\n-{/*   <TabsTrigger value=\"historico\">Histórico</TabsTrigger> */}\r\n-{/* </TabsList> */}\r\n-\r\n-{/* Depois: */}\r\n-<div className=\"flex items-center mb-4 space-x-2\">\r\n-  <Button\r\n+          <Tabs defaultValue=\"ativas\" className=\"w-full\">\r\n+          <div className=\"flex items-center mb-4 space-x-2\">\r\n+          <Button\r\n     variant=\"outline\"\r\n     size=\"sm\"\r\n     onClick={() => setRecargaModalOpen(true)}\r\n     className=\"w-8 h-8 p-0 text-xl\"\r\n     aria-label=\"Nova recarga\"\r\n   >\r\n     +\r\n   </Button>\r\n-  <TabsList>\r\n-    <TabsTrigger value=\"ativas\">Recargas Ativas</TabsTrigger>\r\n-    <TabsTrigger value=\"historico\">Histórico</TabsTrigger>\r\n-  </TabsList>\r\n-</div>\r\n-\r\n+            <TabsList className=\"mb-4\">\r\n+              <TabsTrigger value=\"ativas\">Recargas  Ativas</TabsTrigger>\r\n+              <TabsTrigger value=\"historico\">Histórico</TabsTrigger>\r\n+            </TabsList>\r\n+          </div>\r\n             <TabsContent value=\"ativas\">\r\n   {recargasAtivas.length === 0 ? (\r\n     <div className=\"flex items-center justify-center h-[300px] text-muted-foreground text-sm text-center\">\r\n       Nenhuma recarga ativa no momento.\r\n"
                },
                {
                    "date": 1745468503699,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -315,9 +315,327 @@\n         </div>\r\n       </DialogContent>\r\n     </Dialog>\r\n   );\r\n+  \"use client\";\r\n \r\n+import {\r\n+  Dialog,\r\n+  DialogContent,\r\n+  DialogHeader,\r\n+  DialogTitle,\r\n+} from \"@/components/ui/dialog\";\r\n+import { Input } from \"@/components/ui/input\";\r\n+import { Label } from \"@/components/ui/label\";\r\n+import {\r\n+  Select as ShadSelect,\r\n+  SelectContent,\r\n+  SelectItem,\r\n+  SelectTrigger,\r\n+  SelectValue,\r\n+} from \"@/components/ui/select\";\r\n+import { ScrollArea } from \"@/components/ui/scroll-area\";\r\n+import {\r\n+  Tabs,\r\n+  TabsContent,\r\n+  TabsList,\r\n+  TabsTrigger,\r\n+} from \"@/components/ui/tabs\";\r\n+import { Textarea } from \"@/components/ui/textarea\";\r\n+import { Button } from \"@/components/ui/button\";\r\n+\r\n+import Image from \"next/image\";\r\n+import { Pencil, AlertCircle } from \"lucide-react\";\r\n+import { useEffect, useRef, useState } from \"react\";\r\n+import Select from \"react-select\";\r\n+import makeAnimated from \"react-select/animated\";\r\n+import { Dialog as InnerDialog, DialogContent as InnerContent } from \"@/components/ui/dialog\";\r\n+import { plataformas } from \"@/lib/data\";\r\n+import { Influenciador } from \"@/lib/influenciadores\";\r\n+import { InputGroup, InputGroupText } from \"@/components/ui/input-group\";\r\n+import RecargasModal from \"@/components/RecargasModal\";\r\n+\r\n+\r\n+\r\n+interface OptionType {\r\n+  value: string;\r\n+  label: string;\r\n+  icon?: string;\r\n+}\r\n+\r\n+interface Props {\r\n+  open: boolean;\r\n+  onClose: () => void;\r\n+  influenciador: Influenciador | null;\r\n+  onUpdate?: (updated: Influenciador) => void;\r\n+}\r\n+\r\n+const InfluenciadorModal = ({ open, onClose, influenciador, onUpdate }: Props) => {\r\n+  if (!influenciador) return null;\r\n+\r\n+  const [plataformasSelecionadas, setPlataformasSelecionadas] = useState<string[]>([]);\r\n+  const [previewImage, setPreviewImage] = useState<string | undefined>();\r\n+  const [status, setStatus] = useState<Influenciador[\"status\"]>(\"lead\");\r\n+  const [motivoBanimento, setMotivoBanimento] = useState(\"\");\r\n+  const [openMotivo, setOpenMotivo] = useState(false);\r\n+  const inputFileRef = useRef<HTMLInputElement>(null);\r\n+\r\n+  const platformOptions: OptionType[] = plataformas.map((p) => ({\r\n+    value: p.id,\r\n+    label: p.nome,\r\n+  }));\r\n+  \r\n+  const [recargaModalOpen, setRecargaModalOpen] = useState(false);\r\n+\r\n+  const selectedOptions = platformOptions.filter((opt) =>\r\n+    plataformasSelecionadas.includes(opt.value)\r\n+  );\r\n+\r\n+  useEffect(() => {\r\n+    if (influenciador) {\r\n+      setPlataformasSelecionadas(influenciador.recargas.map((r) => r.plataformaId));\r\n+      setPreviewImage(influenciador.imagem);\r\n+      setStatus(influenciador.status);\r\n+      setMotivoBanimento(influenciador.motivoBanimento || \"\");\r\n+    }\r\n+  }, [influenciador]);\r\n+\r\n+  useEffect(() => {\r\n+    if (status === \"banido\") {\r\n+      setOpenMotivo(true);\r\n+    }\r\n+  }, [status]);\r\n+\r\n+  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n+    const file = e.target.files?.[0];\r\n+    if (file) {\r\n+      const reader = new FileReader();\r\n+      reader.onloadend = () => {\r\n+        setPreviewImage(reader.result as string);\r\n+      };\r\n+      reader.readAsDataURL(file);\r\n+    }\r\n+  };\r\n+\r\n+  const handleCloseAndUpdate = (openState: boolean) => {\r\n+    if (!openState && influenciador) {\r\n+      const updated: Influenciador = {\r\n+        ...influenciador,\r\n+        imagem: previewImage,\r\n+        status,\r\n+        motivoBanimento,\r\n+        recargas: influenciador.recargas,\r\n+      };\r\n+      onUpdate?.(updated);\r\n+      onClose();\r\n+    }\r\n+  };\r\n+  const [followersCount, setFollowersCount] = useState<number | null>(null);\r\n+  const [imagemErro, setImagemErro] = useState(false);\r\n+  useEffect(() => {\r\n+    setImagemErro(false);\r\n+  }, [influenciador]);\r\n+\r\n+  function isCacheValid(cached: any): boolean {\r\n+    if (!cached?.lastFetched) return false;\r\n+    const diffInDays = (Date.now() - cached.lastFetched) / (1000 * 60 * 60 * 24);\r\n+    return diffInDays < 30;\r\n+  }\r\n+  const fetchInstagramData = async (username: string, cacheKey: string) => {\r\n+    try {\r\n+      const response = await fetch(`/api/instagram/profile?username=${username}`);\r\n+      const data = await response.json();\r\n+  \r\n+      const profilePic = data.profile_pic_url_hd;\r\n+      const followers = data.edge_followed_by.count;\r\n+  \r\n+      setPreviewImage(profilePic);\r\n+      setFollowersCount(followers);\r\n+  \r\n+      localStorage.setItem(cacheKey, JSON.stringify({\r\n+        profile_pic_url_hd: profilePic,\r\n+        followers_count: followers,\r\n+        lastFetched: Date.now()\r\n+      }));\r\n+    } catch (error) {\r\n+      console.error('Erro ao buscar dados do Instagram:', error);\r\n+    }\r\n+  };\r\n+\r\n+  const hoje = new Date().toISOString().split(\"T\")[0];\r\n+  const hojeTimestamp = Date.parse(hoje);\r\n+\r\n+  const recargasAtivas = influenciador.recargas.filter((rec) => {\r\n+    const recTermino = Date.parse(rec.termino);\r\n+    return plataformasSelecionadas.includes(rec.plataformaId) && recTermino >= hojeTimestamp;\r\n+  });\r\n+\r\n+  const recargasHistorico = influenciador.recargas.filter((rec) => {\r\n+    const recTermino = Date.parse(rec.termino);\r\n+    return plataformasSelecionadas.includes(rec.plataformaId) && recTermino < hojeTimestamp;\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    const username = influenciador?.instagram?.replace(/\\/$/, \"\").split(\"/\").pop()?.replace(\"@\", \"\");\r\n+    if (!username) return;\r\n+\r\n+  const cacheKey = `insta_${username}`;\r\n+  const cached = JSON.parse(localStorage.getItem(cacheKey) || \"null\");\r\n+\r\n+  if (isCacheValid(cached)) {\r\n+    setPreviewImage(cached.profile_pic_url_hd);\r\n+    setFollowersCount(cached.followers_count);\r\n+    return;\r\n+  }\r\n+\r\n+  fetchInstagramData(username, cacheKey);\r\n+}, [influenciador]);\r\n+\r\n+// Gera uma imagem \"random\" baseada no nome (usando ui-avatars.com)\r\n+const fallbackImage = `https://ui-avatars.com/api/?name=${encodeURIComponent(\r\n+  influenciador.nome\r\n+)}&background=random&color=fff`;\r\n+  return (\r\n+    <Dialog open={open} onOpenChange={handleCloseAndUpdate}>\r\n+      <DialogContent size=\"full\">\r\n+        <DialogHeader>\r\n+          <DialogTitle>Editar Influenciador</DialogTitle>\r\n+        </DialogHeader>\r\n+\r\n+        <div className=\"grid grid-cols-[35%_1fr] gap-8\">\r\n+          {/* Esquerda */}\r\n+          <div className=\"space-y-4\">\r\n+            <div className=\"grid grid-cols-[auto_1fr] gap-4 items-start\">\r\n+              <div className=\"relative w-24 h-24 group\">\r\n+              <Image\r\n+  src={\r\n+    imagemErro\r\n+      ? \"/images/avatar/placeholder.png\"\r\n+      : previewImage || \"/images/avatar/placeholder.png\"\r\n+  }\r\n+  alt={influenciador.nome}\r\n+  fill\r\n+  onError={() => setImagemErro(true)}\r\n+  unoptimized\r\n+  className=\"rounded-full object-cover border\"\r\n+/>\r\n+                <div\r\n+                  className=\"absolute inset-0 bg-black/50 rounded-full opacity-0 group-hover:opacity-100 flex items-center justify-center cursor-pointer transition\"\r\n+                  onClick={() => inputFileRef.current?.click()}\r\n+                >\r\n+                  <Pencil className=\"text-white w-5 h-5\" />\r\n+                </div>\r\n+                <input ref={inputFileRef} type=\"file\" accept=\"image/*\" onChange={handleImageChange} className=\"hidden\" />\r\n+              </div>\r\n+              <div className=\"space-y-4\">\r\n+                <div className=\"space-y-1.5\">\r\n+                  <Label htmlFor=\"nome\">Nome</Label>\r\n+                  <Input id=\"nome\" defaultValue={influenciador.nome} />\r\n+                </div>\r\n+                <div className=\"space-y-1.5\">\r\n+                  <Label htmlFor=\"instagram\">Instagram</Label>\r\n+                  <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n+\r\n+            <div className=\"space-y-1.5\">\r\n+              <Label htmlFor=\"cpf\">CPF</Label>\r\n+              <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n+            </div>\r\n+\r\n+            <div className=\"space-y-1.5\">\r\n+              <Label>Data de Cadastro</Label>\r\n+              <Input value={influenciador.dataCadastro} readOnly />\r\n+            </div>\r\n+\r\n+            <div className=\"space-y-1.5\">\r\n+              <Label>Status</Label>\r\n+              <div className=\"flex items-center gap-2\">\r\n+                <div className=\"w-[70%]\">\r\n+                  <ShadSelect value={status} onValueChange={setStatus}>\r\n+                    <SelectTrigger>\r\n+                      <SelectValue placeholder=\"Selecione o status\" />\r\n+                    </SelectTrigger>\r\n+                    <SelectContent>\r\n+                      <SelectItem value=\"lead\">Lead</SelectItem>\r\n+                      <SelectItem value=\"contato\">Em contato</SelectItem>\r\n+                      <SelectItem value=\"negociacao\">Em negociação</SelectItem>\r\n+                      <SelectItem value=\"ativo\">Ativo</SelectItem>\r\n+                      <SelectItem value=\"banido\">Banido</SelectItem>\r\n+                    </SelectContent>\r\n+                  </ShadSelect>\r\n+                </div>\r\n+                {status === \"banido\" && (\r\n+                  <Button type=\"button\" onClick={() => setOpenMotivo(true)} variant=\"ghost\" className=\"w-[30%] text-xs px-2 py-1 border border-destructive text-destructive hover:bg-destructive hover:text-white\">\r\n+                    <AlertCircle className=\"w-4 h-4 mr-1\" /> Motivo\r\n+                  </Button>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+\r\n+            <InnerDialog open={openMotivo} onOpenChange={setOpenMotivo}>\r\n+              <InnerContent>\r\n+                <div className=\"space-y-2\">\r\n+                  <Label>Motivo do Banimento</Label>\r\n+                  <Textarea value={motivoBanimento} onChange={(e) => setMotivoBanimento(e.target.value)} placeholder=\"Descreva o motivo...\" />\r\n+                </div>\r\n+              </InnerContent>\r\n+            </InnerDialog>\r\n+\r\n+            <div className=\"space-y-1.5\">\r\n+              <Label>Plataformas</Label>\r\n+              <Select\r\n+                isMulti\r\n+                closeMenuOnSelect={false}\r\n+                components={makeAnimated()}\r\n+                options={platformOptions}\r\n+                value={selectedOptions}\r\n+                onChange={(selected) => setPlataformasSelecionadas(selected.map((s) => s.value))}\r\n+              />\r\n+            </div>\r\n+          </div>\r\n+\r\n+          {/* Direita */}\r\n+          <Tabs defaultValue=\"ativas\" className=\"w-full\">\r\n+          <div className=\"flex items-center mb-4 space-x-2\">\r\n+          <Button\r\n+    variant=\"outline\"\r\n+    size=\"sm\"\r\n+    onClick={() => setRecargaModalOpen(true)}\r\n+    className=\"w-8 h-8 p-0 text-xl\"\r\n+    aria-label=\"Nova recarga\"\r\n+  >\r\n+    +\r\n+  </Button>\r\n+            <TabsList className=\"mb-4\">\r\n+              <TabsTrigger value=\"ativas\">Recargas  Ativas</TabsTrigger>\r\n+              <TabsTrigger value=\"historico\">Histórico</TabsTrigger>\r\n+            </TabsList>\r\n+          </div>\r\n+            <TabsContent value=\"ativas\">\r\n+  {recargasAtivas.length === 0 ? (\r\n+    <div className=\"flex items-center justify-center h-[300px] text-muted-foreground text-sm text-center\">\r\n+      Nenhuma recarga ativa no momento.\r\n+    </div>\r\n+  ) : (\r\n+    <ScrollArea className=\"max-h-[450px] pr-2\">\r\n+      {recargasAtivas.map((rec, index) => renderRecargaCard(rec, index))}\r\n+    </ScrollArea>\r\n+  )}\r\n+</TabsContent>\r\n+\r\n+            <TabsContent value=\"historico\">\r\n+              <ScrollArea className=\"max-h-[450px] pr-2\">\r\n+                {recargasHistorico.map((rec, index) => renderRecargaCard(rec, index))}\r\n+              </ScrollArea>\r\n+            </TabsContent>\r\n+          </Tabs>\r\n+        </div>\r\n+      </DialogContent>\r\n+    </Dialog>\r\n+  );\r\n+\r\n   function renderRecargaCard(rec: Influenciador[\"recargas\"][0], index: number) {\r\n     const plataforma = plataformas.find((p) => p.id === rec.plataformaId);\r\n     const statusLabel =\r\n       rec.meta === 0 && rec.atingido === 0\r\n@@ -388,6 +706,108 @@\n       </div>\r\n     );\r\n   }\r\n };\r\n+<RecargasModal\r\n+  open={recargaModalOpen}\r\n+  onClose={() => setRecargaModalOpen(false)}\r\n+  onSave={(novaRecarga) => {\r\n+    // Exemplo de como adicionar a recarga ao influenciador:\r\n+    const updated: Influenciador = {\r\n+      ...influenciador!,\r\n+      recargas: [\r\n+        ...influenciador!.recargas,\r\n+        {\r\n+          plataformaId: novaRecarga.plataformaId,\r\n+          valor: novaRecarga.valor,\r\n+          inicio: novaRecarga.inicio,\r\n+          termino: novaRecarga.termino,\r\n+          // você pode preencher meta, atingido, reembolso etc aqui\r\n+          meta: 0,\r\n+          atingido: 0,\r\n+          statusMeta: \"incompleto\",\r\n+          salario: novaRecarga.valor,\r\n+        },\r\n+      ],\r\n+    };\r\n+    onUpdate?.(updated);\r\n+    setRecargaModalOpen(false);\r\n+  }}\r\n+  influenciadores={[influenciador!]}\r\n+/>\r\n+export default InfluenciadorModal;\r\n \r\n+\r\n+  function renderRecargaCard(rec: Influenciador[\"recargas\"][0], index: number) {\r\n+    const plataforma = plataformas.find((p) => p.id === rec.plataformaId);\r\n+    const statusLabel =\r\n+      rec.meta === 0 && rec.atingido === 0\r\n+        ? \"Meta indefinida\"\r\n+        : rec.atingido >= rec.meta\r\n+        ? \"Meta Batida\"\r\n+        : \"Meta Pendente\";\r\n+    const statusClass =\r\n+      rec.meta === 0 && rec.atingido === 0\r\n+        ? \"bg-muted text-muted-foreground\"\r\n+        : rec.atingido >= rec.meta\r\n+        ? \"bg-green-500 text-white\"\r\n+        : \"bg-yellow-400 text-yellow-900\";\r\n+\r\n+    return (\r\n+      <div key={index} className=\"border border-muted rounded-md m-2 p-4 space-y-3\">\r\n+        <div className=\"flex items-center justify-between\">\r\n+          <div className=\"flex items-center gap-\">\r\n+            {plataforma?.imagem && (\r\n+              <Image src={plataforma.imagem} alt={plataforma.nome} width={48} height={48} className=\"rounded\" />\r\n+            )}\r\n+          </div>\r\n+          <div className={`px-3 py-1 rounded-full text-xs font-medium ${statusClass}`}>{statusLabel}</div>\r\n+        </div>\r\n+        <div className=\"grid grid-cols-6 gap-2 text-sm\">\r\n+  <div className=\"space-y-1.5\">\r\n+    <Label>Meta</Label>\r\n+    <InputGroup>\r\n+      <InputGroupText>R$</InputGroupText>\r\n+      <Input type=\"number\" defaultValue={rec.meta} />\r\n+    </InputGroup>\r\n+  </div>\r\n+\r\n+  <div className=\"space-y-1.5\">\r\n+    <Label>Atingido</Label>\r\n+    <InputGroup>\r\n+      <InputGroupText>R$</InputGroupText>\r\n+      <Input type=\"number\" defaultValue={rec.atingido} />\r\n+    </InputGroup>\r\n+  </div>\r\n+\r\n+  <div className=\"space-y-1.5\">\r\n+    <Label>Reembolso</Label>\r\n+    <InputGroup>\r\n+      <InputGroupText>R$</InputGroupText>\r\n+      <Input type=\"number\" defaultValue={rec.reembolso} />\r\n+    </InputGroup>\r\n+  </div>\r\n+\r\n+  <div className=\"space-y-1.5\">\r\n+    <Label>Salário</Label>\r\n+    <InputGroup>\r\n+      <InputGroupText>R$</InputGroupText>\r\n+      <Input type=\"number\" defaultValue={rec.salario} />\r\n+    </InputGroup>\r\n+  </div>\r\n+\r\n+  <div className=\"space-y-1.5\">\r\n+    <Label>Início</Label>\r\n+    <Input type=\"date\" defaultValue={rec.inicio} />\r\n+  </div>\r\n+\r\n+  <div className=\"space-y-1.5\">\r\n+    <Label>Término</Label>\r\n+    <Input type=\"date\" defaultValue={rec.termino} />\r\n+  </div>\r\n+</div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+};\r\n+\r\n export default InfluenciadorModal;\r\n"
                },
                {
                    "date": 1745468522872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -315,327 +315,34 @@\n         </div>\r\n       </DialogContent>\r\n     </Dialog>\r\n   );\r\n-  \"use client\";\r\n+  <RecargasModal\r\n+        open={recargaModalOpen}\r\n+        onClose={() => setRecargaModalOpen(false)}\r\n+        onSave={(novaRecarga) => {\r\n+          const updated: Influenciador = {\r\n+            ...influenciador!,\r\n+            recargas: [\r\n+              ...influenciador!.recargas,\r\n+              {\r\n+                plataformaId: novaRecarga.plataformaId,\r\n+                valor: novaRecarga.valor,\r\n+                inicio: novaRecarga.inicio,\r\n+                termino: novaRecarga.termino,\r\n+                meta: 0,\r\n+                atingido: 0,\r\n+                statusMeta: \"incompleto\",\r\n+                salario: novaRecarga.valor,\r\n+              },\r\n+            ],\r\n+          };\r\n+          onUpdate?.(updated);\r\n+          setRecargaModalOpen(false);\r\n+        }}\r\n+        influenciadores={[influenciador!]}\r\n+      />\r\n \r\n-import {\r\n-  Dialog,\r\n-  DialogContent,\r\n-  DialogHeader,\r\n-  DialogTitle,\r\n-} from \"@/components/ui/dialog\";\r\n-import { Input } from \"@/components/ui/input\";\r\n-import { Label } from \"@/components/ui/label\";\r\n-import {\r\n-  Select as ShadSelect,\r\n-  SelectContent,\r\n-  SelectItem,\r\n-  SelectTrigger,\r\n-  SelectValue,\r\n-} from \"@/components/ui/select\";\r\n-import { ScrollArea } from \"@/components/ui/scroll-area\";\r\n-import {\r\n-  Tabs,\r\n-  TabsContent,\r\n-  TabsList,\r\n-  TabsTrigger,\r\n-} from \"@/components/ui/tabs\";\r\n-import { Textarea } from \"@/components/ui/textarea\";\r\n-import { Button } from \"@/components/ui/button\";\r\n-\r\n-import Image from \"next/image\";\r\n-import { Pencil, AlertCircle } from \"lucide-react\";\r\n-import { useEffect, useRef, useState } from \"react\";\r\n-import Select from \"react-select\";\r\n-import makeAnimated from \"react-select/animated\";\r\n-import { Dialog as InnerDialog, DialogContent as InnerContent } from \"@/components/ui/dialog\";\r\n-import { plataformas } from \"@/lib/data\";\r\n-import { Influenciador } from \"@/lib/influenciadores\";\r\n-import { InputGroup, InputGroupText } from \"@/components/ui/input-group\";\r\n-import RecargasModal from \"@/components/RecargasModal\";\r\n-\r\n-\r\n-\r\n-interface OptionType {\r\n-  value: string;\r\n-  label: string;\r\n-  icon?: string;\r\n-}\r\n-\r\n-interface Props {\r\n-  open: boolean;\r\n-  onClose: () => void;\r\n-  influenciador: Influenciador | null;\r\n-  onUpdate?: (updated: Influenciador) => void;\r\n-}\r\n-\r\n-const InfluenciadorModal = ({ open, onClose, influenciador, onUpdate }: Props) => {\r\n-  if (!influenciador) return null;\r\n-\r\n-  const [plataformasSelecionadas, setPlataformasSelecionadas] = useState<string[]>([]);\r\n-  const [previewImage, setPreviewImage] = useState<string | undefined>();\r\n-  const [status, setStatus] = useState<Influenciador[\"status\"]>(\"lead\");\r\n-  const [motivoBanimento, setMotivoBanimento] = useState(\"\");\r\n-  const [openMotivo, setOpenMotivo] = useState(false);\r\n-  const inputFileRef = useRef<HTMLInputElement>(null);\r\n-\r\n-  const platformOptions: OptionType[] = plataformas.map((p) => ({\r\n-    value: p.id,\r\n-    label: p.nome,\r\n-  }));\r\n-  \r\n-  const [recargaModalOpen, setRecargaModalOpen] = useState(false);\r\n-\r\n-  const selectedOptions = platformOptions.filter((opt) =>\r\n-    plataformasSelecionadas.includes(opt.value)\r\n-  );\r\n-\r\n-  useEffect(() => {\r\n-    if (influenciador) {\r\n-      setPlataformasSelecionadas(influenciador.recargas.map((r) => r.plataformaId));\r\n-      setPreviewImage(influenciador.imagem);\r\n-      setStatus(influenciador.status);\r\n-      setMotivoBanimento(influenciador.motivoBanimento || \"\");\r\n-    }\r\n-  }, [influenciador]);\r\n-\r\n-  useEffect(() => {\r\n-    if (status === \"banido\") {\r\n-      setOpenMotivo(true);\r\n-    }\r\n-  }, [status]);\r\n-\r\n-  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n-    const file = e.target.files?.[0];\r\n-    if (file) {\r\n-      const reader = new FileReader();\r\n-      reader.onloadend = () => {\r\n-        setPreviewImage(reader.result as string);\r\n-      };\r\n-      reader.readAsDataURL(file);\r\n-    }\r\n-  };\r\n-\r\n-  const handleCloseAndUpdate = (openState: boolean) => {\r\n-    if (!openState && influenciador) {\r\n-      const updated: Influenciador = {\r\n-        ...influenciador,\r\n-        imagem: previewImage,\r\n-        status,\r\n-        motivoBanimento,\r\n-        recargas: influenciador.recargas,\r\n-      };\r\n-      onUpdate?.(updated);\r\n-      onClose();\r\n-    }\r\n-  };\r\n-  const [followersCount, setFollowersCount] = useState<number | null>(null);\r\n-  const [imagemErro, setImagemErro] = useState(false);\r\n-  useEffect(() => {\r\n-    setImagemErro(false);\r\n-  }, [influenciador]);\r\n-\r\n-  function isCacheValid(cached: any): boolean {\r\n-    if (!cached?.lastFetched) return false;\r\n-    const diffInDays = (Date.now() - cached.lastFetched) / (1000 * 60 * 60 * 24);\r\n-    return diffInDays < 30;\r\n-  }\r\n-  const fetchInstagramData = async (username: string, cacheKey: string) => {\r\n-    try {\r\n-      const response = await fetch(`/api/instagram/profile?username=${username}`);\r\n-      const data = await response.json();\r\n-  \r\n-      const profilePic = data.profile_pic_url_hd;\r\n-      const followers = data.edge_followed_by.count;\r\n-  \r\n-      setPreviewImage(profilePic);\r\n-      setFollowersCount(followers);\r\n-  \r\n-      localStorage.setItem(cacheKey, JSON.stringify({\r\n-        profile_pic_url_hd: profilePic,\r\n-        followers_count: followers,\r\n-        lastFetched: Date.now()\r\n-      }));\r\n-    } catch (error) {\r\n-      console.error('Erro ao buscar dados do Instagram:', error);\r\n-    }\r\n-  };\r\n-\r\n-  const hoje = new Date().toISOString().split(\"T\")[0];\r\n-  const hojeTimestamp = Date.parse(hoje);\r\n-\r\n-  const recargasAtivas = influenciador.recargas.filter((rec) => {\r\n-    const recTermino = Date.parse(rec.termino);\r\n-    return plataformasSelecionadas.includes(rec.plataformaId) && recTermino >= hojeTimestamp;\r\n-  });\r\n-\r\n-  const recargasHistorico = influenciador.recargas.filter((rec) => {\r\n-    const recTermino = Date.parse(rec.termino);\r\n-    return plataformasSelecionadas.includes(rec.plataformaId) && recTermino < hojeTimestamp;\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    const username = influenciador?.instagram?.replace(/\\/$/, \"\").split(\"/\").pop()?.replace(\"@\", \"\");\r\n-    if (!username) return;\r\n-\r\n-  const cacheKey = `insta_${username}`;\r\n-  const cached = JSON.parse(localStorage.getItem(cacheKey) || \"null\");\r\n-\r\n-  if (isCacheValid(cached)) {\r\n-    setPreviewImage(cached.profile_pic_url_hd);\r\n-    setFollowersCount(cached.followers_count);\r\n-    return;\r\n-  }\r\n-\r\n-  fetchInstagramData(username, cacheKey);\r\n-}, [influenciador]);\r\n-\r\n-// Gera uma imagem \"random\" baseada no nome (usando ui-avatars.com)\r\n-const fallbackImage = `https://ui-avatars.com/api/?name=${encodeURIComponent(\r\n-  influenciador.nome\r\n-)}&background=random&color=fff`;\r\n-  return (\r\n-    <Dialog open={open} onOpenChange={handleCloseAndUpdate}>\r\n-      <DialogContent size=\"full\">\r\n-        <DialogHeader>\r\n-          <DialogTitle>Editar Influenciador</DialogTitle>\r\n-        </DialogHeader>\r\n-\r\n-        <div className=\"grid grid-cols-[35%_1fr] gap-8\">\r\n-          {/* Esquerda */}\r\n-          <div className=\"space-y-4\">\r\n-            <div className=\"grid grid-cols-[auto_1fr] gap-4 items-start\">\r\n-              <div className=\"relative w-24 h-24 group\">\r\n-              <Image\r\n-  src={\r\n-    imagemErro\r\n-      ? \"/images/avatar/placeholder.png\"\r\n-      : previewImage || \"/images/avatar/placeholder.png\"\r\n-  }\r\n-  alt={influenciador.nome}\r\n-  fill\r\n-  onError={() => setImagemErro(true)}\r\n-  unoptimized\r\n-  className=\"rounded-full object-cover border\"\r\n-/>\r\n-                <div\r\n-                  className=\"absolute inset-0 bg-black/50 rounded-full opacity-0 group-hover:opacity-100 flex items-center justify-center cursor-pointer transition\"\r\n-                  onClick={() => inputFileRef.current?.click()}\r\n-                >\r\n-                  <Pencil className=\"text-white w-5 h-5\" />\r\n-                </div>\r\n-                <input ref={inputFileRef} type=\"file\" accept=\"image/*\" onChange={handleImageChange} className=\"hidden\" />\r\n-              </div>\r\n-              <div className=\"space-y-4\">\r\n-                <div className=\"space-y-1.5\">\r\n-                  <Label htmlFor=\"nome\">Nome</Label>\r\n-                  <Input id=\"nome\" defaultValue={influenciador.nome} />\r\n-                </div>\r\n-                <div className=\"space-y-1.5\">\r\n-                  <Label htmlFor=\"instagram\">Instagram</Label>\r\n-                  <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n-                </div>\r\n-              </div>\r\n-            </div>\r\n-\r\n-            <div className=\"space-y-1.5\">\r\n-              <Label htmlFor=\"cpf\">CPF</Label>\r\n-              <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n-            </div>\r\n-\r\n-            <div className=\"space-y-1.5\">\r\n-              <Label>Data de Cadastro</Label>\r\n-              <Input value={influenciador.dataCadastro} readOnly />\r\n-            </div>\r\n-\r\n-            <div className=\"space-y-1.5\">\r\n-              <Label>Status</Label>\r\n-              <div className=\"flex items-center gap-2\">\r\n-                <div className=\"w-[70%]\">\r\n-                  <ShadSelect value={status} onValueChange={setStatus}>\r\n-                    <SelectTrigger>\r\n-                      <SelectValue placeholder=\"Selecione o status\" />\r\n-                    </SelectTrigger>\r\n-                    <SelectContent>\r\n-                      <SelectItem value=\"lead\">Lead</SelectItem>\r\n-                      <SelectItem value=\"contato\">Em contato</SelectItem>\r\n-                      <SelectItem value=\"negociacao\">Em negociação</SelectItem>\r\n-                      <SelectItem value=\"ativo\">Ativo</SelectItem>\r\n-                      <SelectItem value=\"banido\">Banido</SelectItem>\r\n-                    </SelectContent>\r\n-                  </ShadSelect>\r\n-                </div>\r\n-                {status === \"banido\" && (\r\n-                  <Button type=\"button\" onClick={() => setOpenMotivo(true)} variant=\"ghost\" className=\"w-[30%] text-xs px-2 py-1 border border-destructive text-destructive hover:bg-destructive hover:text-white\">\r\n-                    <AlertCircle className=\"w-4 h-4 mr-1\" /> Motivo\r\n-                  </Button>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-\r\n-            <InnerDialog open={openMotivo} onOpenChange={setOpenMotivo}>\r\n-              <InnerContent>\r\n-                <div className=\"space-y-2\">\r\n-                  <Label>Motivo do Banimento</Label>\r\n-                  <Textarea value={motivoBanimento} onChange={(e) => setMotivoBanimento(e.target.value)} placeholder=\"Descreva o motivo...\" />\r\n-                </div>\r\n-              </InnerContent>\r\n-            </InnerDialog>\r\n-\r\n-            <div className=\"space-y-1.5\">\r\n-              <Label>Plataformas</Label>\r\n-              <Select\r\n-                isMulti\r\n-                closeMenuOnSelect={false}\r\n-                components={makeAnimated()}\r\n-                options={platformOptions}\r\n-                value={selectedOptions}\r\n-                onChange={(selected) => setPlataformasSelecionadas(selected.map((s) => s.value))}\r\n-              />\r\n-            </div>\r\n-          </div>\r\n-\r\n-          {/* Direita */}\r\n-          <Tabs defaultValue=\"ativas\" className=\"w-full\">\r\n-          <div className=\"flex items-center mb-4 space-x-2\">\r\n-          <Button\r\n-    variant=\"outline\"\r\n-    size=\"sm\"\r\n-    onClick={() => setRecargaModalOpen(true)}\r\n-    className=\"w-8 h-8 p-0 text-xl\"\r\n-    aria-label=\"Nova recarga\"\r\n-  >\r\n-    +\r\n-  </Button>\r\n-            <TabsList className=\"mb-4\">\r\n-              <TabsTrigger value=\"ativas\">Recargas  Ativas</TabsTrigger>\r\n-              <TabsTrigger value=\"historico\">Histórico</TabsTrigger>\r\n-            </TabsList>\r\n-          </div>\r\n-            <TabsContent value=\"ativas\">\r\n-  {recargasAtivas.length === 0 ? (\r\n-    <div className=\"flex items-center justify-center h-[300px] text-muted-foreground text-sm text-center\">\r\n-      Nenhuma recarga ativa no momento.\r\n-    </div>\r\n-  ) : (\r\n-    <ScrollArea className=\"max-h-[450px] pr-2\">\r\n-      {recargasAtivas.map((rec, index) => renderRecargaCard(rec, index))}\r\n-    </ScrollArea>\r\n-  )}\r\n-</TabsContent>\r\n-\r\n-            <TabsContent value=\"historico\">\r\n-              <ScrollArea className=\"max-h-[450px] pr-2\">\r\n-                {recargasHistorico.map((rec, index) => renderRecargaCard(rec, index))}\r\n-              </ScrollArea>\r\n-            </TabsContent>\r\n-          </Tabs>\r\n-        </div>\r\n-      </DialogContent>\r\n-    </Dialog>\r\n-  );\r\n-\r\n   function renderRecargaCard(rec: Influenciador[\"recargas\"][0], index: number) {\r\n     const plataforma = plataformas.find((p) => p.id === rec.plataformaId);\r\n     const statusLabel =\r\n       rec.meta === 0 && rec.atingido === 0\r\n@@ -706,108 +413,6 @@\n       </div>\r\n     );\r\n   }\r\n };\r\n-<RecargasModal\r\n-  open={recargaModalOpen}\r\n-  onClose={() => setRecargaModalOpen(false)}\r\n-  onSave={(novaRecarga) => {\r\n-    // Exemplo de como adicionar a recarga ao influenciador:\r\n-    const updated: Influenciador = {\r\n-      ...influenciador!,\r\n-      recargas: [\r\n-        ...influenciador!.recargas,\r\n-        {\r\n-          plataformaId: novaRecarga.plataformaId,\r\n-          valor: novaRecarga.valor,\r\n-          inicio: novaRecarga.inicio,\r\n-          termino: novaRecarga.termino,\r\n-          // você pode preencher meta, atingido, reembolso etc aqui\r\n-          meta: 0,\r\n-          atingido: 0,\r\n-          statusMeta: \"incompleto\",\r\n-          salario: novaRecarga.valor,\r\n-        },\r\n-      ],\r\n-    };\r\n-    onUpdate?.(updated);\r\n-    setRecargaModalOpen(false);\r\n-  }}\r\n-  influenciadores={[influenciador!]}\r\n-/>\r\n-export default InfluenciadorModal;\r\n \r\n-\r\n-  function renderRecargaCard(rec: Influenciador[\"recargas\"][0], index: number) {\r\n-    const plataforma = plataformas.find((p) => p.id === rec.plataformaId);\r\n-    const statusLabel =\r\n-      rec.meta === 0 && rec.atingido === 0\r\n-        ? \"Meta indefinida\"\r\n-        : rec.atingido >= rec.meta\r\n-        ? \"Meta Batida\"\r\n-        : \"Meta Pendente\";\r\n-    const statusClass =\r\n-      rec.meta === 0 && rec.atingido === 0\r\n-        ? \"bg-muted text-muted-foreground\"\r\n-        : rec.atingido >= rec.meta\r\n-        ? \"bg-green-500 text-white\"\r\n-        : \"bg-yellow-400 text-yellow-900\";\r\n-\r\n-    return (\r\n-      <div key={index} className=\"border border-muted rounded-md m-2 p-4 space-y-3\">\r\n-        <div className=\"flex items-center justify-between\">\r\n-          <div className=\"flex items-center gap-\">\r\n-            {plataforma?.imagem && (\r\n-              <Image src={plataforma.imagem} alt={plataforma.nome} width={48} height={48} className=\"rounded\" />\r\n-            )}\r\n-          </div>\r\n-          <div className={`px-3 py-1 rounded-full text-xs font-medium ${statusClass}`}>{statusLabel}</div>\r\n-        </div>\r\n-        <div className=\"grid grid-cols-6 gap-2 text-sm\">\r\n-  <div className=\"space-y-1.5\">\r\n-    <Label>Meta</Label>\r\n-    <InputGroup>\r\n-      <InputGroupText>R$</InputGroupText>\r\n-      <Input type=\"number\" defaultValue={rec.meta} />\r\n-    </InputGroup>\r\n-  </div>\r\n-\r\n-  <div className=\"space-y-1.5\">\r\n-    <Label>Atingido</Label>\r\n-    <InputGroup>\r\n-      <InputGroupText>R$</InputGroupText>\r\n-      <Input type=\"number\" defaultValue={rec.atingido} />\r\n-    </InputGroup>\r\n-  </div>\r\n-\r\n-  <div className=\"space-y-1.5\">\r\n-    <Label>Reembolso</Label>\r\n-    <InputGroup>\r\n-      <InputGroupText>R$</InputGroupText>\r\n-      <Input type=\"number\" defaultValue={rec.reembolso} />\r\n-    </InputGroup>\r\n-  </div>\r\n-\r\n-  <div className=\"space-y-1.5\">\r\n-    <Label>Salário</Label>\r\n-    <InputGroup>\r\n-      <InputGroupText>R$</InputGroupText>\r\n-      <Input type=\"number\" defaultValue={rec.salario} />\r\n-    </InputGroup>\r\n-  </div>\r\n-\r\n-  <div className=\"space-y-1.5\">\r\n-    <Label>Início</Label>\r\n-    <Input type=\"date\" defaultValue={rec.inicio} />\r\n-  </div>\r\n-\r\n-  <div className=\"space-y-1.5\">\r\n-    <Label>Término</Label>\r\n-    <Input type=\"date\" defaultValue={rec.termino} />\r\n-  </div>\r\n-</div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-};\r\n-\r\n export default InfluenciadorModal;\r\n"
                },
                {
                    "date": 1745468640915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,8 +176,9 @@\n const fallbackImage = `https://ui-avatars.com/api/?name=${encodeURIComponent(\r\n   influenciador.nome\r\n )}&background=random&color=fff`;\r\n   return (\r\n+    <>\r\n     <Dialog open={open} onOpenChange={handleCloseAndUpdate}>\r\n       <DialogContent size=\"full\">\r\n         <DialogHeader>\r\n           <DialogTitle>Editar Influenciador</DialogTitle>\r\n@@ -314,34 +315,37 @@\n           </Tabs>\r\n         </div>\r\n       </DialogContent>\r\n     </Dialog>\r\n+\r\n+      {/* 2) RecargasModal irmão do Dialog */}\r\n+      <RecargasModal\r\n+      open={recargaModalOpen}\r\n+      onClose={() => setRecargaModalOpen(false)}\r\n+      onSave={(novaRecarga) => {\r\n+        const updated: Influenciador = {\r\n+          ...influenciador!,\r\n+          recargas: [\r\n+            ...influenciador!.recargas,\r\n+            {\r\n+              plataformaId: novaRecarga.plataformaId,\r\n+              valor: novaRecarga.valor,\r\n+              inicio: novaRecarga.inicio,\r\n+              termino: novaRecarga.termino,\r\n+              meta: 0,\r\n+              atingido: 0,\r\n+              statusMeta: \"incompleto\",\r\n+              salario: novaRecarga.valor,\r\n+            },\r\n+          ],\r\n+        };\r\n+        onUpdate?.(updated);\r\n+        setRecargaModalOpen(false);\r\n+      }}\r\n+      influenciadores={[influenciador!]}\r\n+    />\r\n+  </>\r\n   );\r\n-  <RecargasModal\r\n-        open={recargaModalOpen}\r\n-        onClose={() => setRecargaModalOpen(false)}\r\n-        onSave={(novaRecarga) => {\r\n-          const updated: Influenciador = {\r\n-            ...influenciador!,\r\n-            recargas: [\r\n-              ...influenciador!.recargas,\r\n-              {\r\n-                plataformaId: novaRecarga.plataformaId,\r\n-                valor: novaRecarga.valor,\r\n-                inicio: novaRecarga.inicio,\r\n-                termino: novaRecarga.termino,\r\n-                meta: 0,\r\n-                atingido: 0,\r\n-                statusMeta: \"incompleto\",\r\n-                salario: novaRecarga.valor,\r\n-              },\r\n-            ],\r\n-          };\r\n-          onUpdate?.(updated);\r\n-          setRecargaModalOpen(false);\r\n-        }}\r\n-        influenciadores={[influenciador!]}\r\n-      />\r\n \r\n   function renderRecargaCard(rec: Influenciador[\"recargas\"][0], index: number) {\r\n     const plataforma = plataformas.find((p) => p.id === rec.plataformaId);\r\n     const statusLabel =\r\n"
                },
                {
                    "date": 1745468813194,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -281,13 +281,13 @@\n           {/* Direita */}\r\n           <Tabs defaultValue=\"ativas\" className=\"w-full\">\r\n           <div className=\"flex items-center mb-4 space-x-2\">\r\n           <Button\r\n-    variant=\"outline\"\r\n-    size=\"sm\"\r\n-    onClick={() => setRecargaModalOpen(true)}\r\n-    className=\"w-8 h-8 p-0 text-xl\"\r\n-    aria-label=\"Nova recarga\"\r\n+              variant=\"outline\"\r\n+              size=\"icon\"\r\n+              onClick={() => setRecargaModalOpen(true)}\r\n+              className=\"w-6 h-6 bg-transparent ring-offset-transparent hover:bg-transparent border border-default-200 text-default-600 hover:ring-0 hover:ring-transparent\"\r\n+              aria-label=\"Nova recarga\"\r\n   >\r\n     +\r\n   </Button>\r\n             <TabsList className=\"mb-4\">\r\n"
                },
                {
                    "date": 1745468829923,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -284,9 +284,9 @@\n           <Button\r\n               variant=\"outline\"\r\n               size=\"icon\"\r\n               onClick={() => setRecargaModalOpen(true)}\r\n-              className=\"w-6 h-6 bg-transparent ring-offset-transparent hover:bg-transparent border border-default-200 text-default-600 hover:ring-0 hover:ring-transparent\"\r\n+              className=\"w-6 h-6 bg-transparent ring-offset-transparent hover:bg-dark border border-default-200 text-default-600 hover:ring-0 hover:ring-transparent\"\r\n               aria-label=\"Nova recarga\"\r\n   >\r\n     +\r\n   </Button>\r\n"
                },
                {
                    "date": 1745468861742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -284,9 +284,9 @@\n           <Button\r\n               variant=\"outline\"\r\n               size=\"icon\"\r\n               onClick={() => setRecargaModalOpen(true)}\r\n-              className=\"w-6 h-6 bg-transparent ring-offset-transparent hover:bg-dark border border-default-200 text-default-600 hover:ring-0 hover:ring-transparent\"\r\n+              className=\"w-6 h-6 bg-transparent ring-offset-transparent hover:bg-transparent border border-default-200 text-default-600 hover:ring-0 \"\r\n               aria-label=\"Nova recarga\"\r\n   >\r\n     +\r\n   </Button>\r\n"
                },
                {
                    "date": 1745468871868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -284,9 +284,9 @@\n           <Button\r\n               variant=\"outline\"\r\n               size=\"icon\"\r\n               onClick={() => setRecargaModalOpen(true)}\r\n-              className=\"w-6 h-6 bg-transparent ring-offset-transparent hover:bg-transparent border border-default-200 text-default-600 hover:ring-0 \"\r\n+              className=\"w-6 h-6 bg-transparent ring-offset-transparent hover:bg-transparent border border-default-200\"\r\n               aria-label=\"Nova recarga\"\r\n   >\r\n     +\r\n   </Button>\r\n"
                },
                {
                    "date": 1745468903402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -284,9 +284,9 @@\n           <Button\r\n               variant=\"outline\"\r\n               size=\"icon\"\r\n               onClick={() => setRecargaModalOpen(true)}\r\n-              className=\"w-6 h-6 bg-transparent ring-offset-transparent hover:bg-transparent border border-default-200\"\r\n+              className=\"w-6 h-6 bg-transparent ring-offset-transparent hover:bg-transparent border border-default-200 hover:text-dark-300\"\r\n               aria-label=\"Nova recarga\"\r\n   >\r\n     +\r\n   </Button>\r\n"
                },
                {
                    "date": 1745468918189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -284,9 +284,9 @@\n           <Button\r\n               variant=\"outline\"\r\n               size=\"icon\"\r\n               onClick={() => setRecargaModalOpen(true)}\r\n-              className=\"w-6 h-6 bg-transparent ring-offset-transparent hover:bg-transparent border border-default-200 hover:text-dark-300\"\r\n+              className=\"w-6 h-6 bg-transparent ring-offset-transparent hover:bg-transparent border border-default-200 hover:text-gray-300\"\r\n               aria-label=\"Nova recarga\"\r\n   >\r\n     +\r\n   </Button>\r\n"
                },
                {
                    "date": 1745468924356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -284,9 +284,9 @@\n           <Button\r\n               variant=\"outline\"\r\n               size=\"icon\"\r\n               onClick={() => setRecargaModalOpen(true)}\r\n-              className=\"w-6 h-6 bg-transparent ring-offset-transparent hover:bg-transparent border border-default-200 hover:text-gray-300\"\r\n+              className=\"w-6 h-6 bg-transparent ring-offset-transparent hover:bg-transparent border border-default-200 hover:text-gray-100\"\r\n               aria-label=\"Nova recarga\"\r\n   >\r\n     +\r\n   </Button>\r\n"
                },
                {
                    "date": 1745468934677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -284,9 +284,9 @@\n           <Button\r\n               variant=\"outline\"\r\n               size=\"icon\"\r\n               onClick={() => setRecargaModalOpen(true)}\r\n-              className=\"w-6 h-6 bg-transparent ring-offset-transparent hover:bg-transparent border border-default-200 hover:text-gray-100\"\r\n+              className=\"w-6 h-6 bg-transparent ring-offset-transparent hover:bg-transparent border border-default-200 hover:text-gray-400\"\r\n               aria-label=\"Nova recarga\"\r\n   >\r\n     +\r\n   </Button>\r\n"
                },
                {
                    "date": 1745468948842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,9 +279,9 @@\n           </div>\r\n \r\n           {/* Direita */}\r\n           <Tabs defaultValue=\"ativas\" className=\"w-full\">\r\n-          <div className=\"flex items-center mb-4 space-x-2\">\r\n+          <div className=\"flex items-center justify-center mb-4 space-x-2\">\r\n           <Button\r\n               variant=\"outline\"\r\n               size=\"icon\"\r\n               onClick={() => setRecargaModalOpen(true)}\r\n"
                },
                {
                    "date": 1745468954395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,9 +279,9 @@\n           </div>\r\n \r\n           {/* Direita */}\r\n           <Tabs defaultValue=\"ativas\" className=\"w-full\">\r\n-          <div className=\"flex items-center justify-center mb-4 space-x-2\">\r\n+          <div className=\"flex items-center mb-4 space-x-2\">\r\n           <Button\r\n               variant=\"outline\"\r\n               size=\"icon\"\r\n               onClick={() => setRecargaModalOpen(true)}\r\n"
                },
                {
                    "date": 1745469072332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -289,9 +289,9 @@\n               aria-label=\"Nova recarga\"\r\n   >\r\n     +\r\n   </Button>\r\n-            <TabsList className=\"mb-4\">\r\n+            <TabsList className=\"flex items-center mb-4\">\r\n               <TabsTrigger value=\"ativas\">Recargas  Ativas</TabsTrigger>\r\n               <TabsTrigger value=\"historico\">Histórico</TabsTrigger>\r\n             </TabsList>\r\n           </div>\r\n"
                },
                {
                    "date": 1745469117075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -289,9 +289,9 @@\n               aria-label=\"Nova recarga\"\r\n   >\r\n     +\r\n   </Button>\r\n-            <TabsList className=\"flex items-center mb-4\">\r\n+            <TabsList className=\"\">\r\n               <TabsTrigger value=\"ativas\">Recargas  Ativas</TabsTrigger>\r\n               <TabsTrigger value=\"historico\">Histórico</TabsTrigger>\r\n             </TabsList>\r\n           </div>\r\n"
                },
                {
                    "date": 1745469127560,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,9 +279,9 @@\n           </div>\r\n \r\n           {/* Direita */}\r\n           <Tabs defaultValue=\"ativas\" className=\"w-full\">\r\n-          <div className=\"flex items-center mb-4 space-x-2\">\r\n+          <div className=\"flex items-center space-x-2\">\r\n           <Button\r\n               variant=\"outline\"\r\n               size=\"icon\"\r\n               onClick={() => setRecargaModalOpen(true)}\r\n"
                },
                {
                    "date": 1745471211891,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,9 +279,9 @@\n           </div>\r\n \r\n           {/* Direita */}\r\n           <Tabs defaultValue=\"ativas\" className=\"w-full\">\r\n-          <div className=\"flex items-center space-x-2\">\r\n+          <div className=\"flex items-center mb-4 space-x-2\">\r\n           <Button\r\n               variant=\"outline\"\r\n               size=\"icon\"\r\n               onClick={() => setRecargaModalOpen(true)}\r\n@@ -365,9 +365,9 @@\n       <div key={index} className=\"border border-muted rounded-md m-2 p-4 space-y-3\">\r\n         <div className=\"flex items-center justify-between\">\r\n           <div className=\"flex items-center gap-\">\r\n             {plataforma?.imagem && (\r\n-              <Image src={plataforma.imagem} alt={plataforma.nome} width={48} height={48} className=\"rounded\" />\r\n+              <Image src={plataforma.imagem} alt={plataforma.nome} width={64} height={32} className=\"rounded\" />\r\n             )}\r\n           </div>\r\n           <div className={`px-3 py-1 rounded-full text-xs font-medium ${statusClass}`}>{statusLabel}</div>\r\n         </div>\r\n"
                },
                {
                    "date": 1745471226848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -365,9 +365,9 @@\n       <div key={index} className=\"border border-muted rounded-md m-2 p-4 space-y-3\">\r\n         <div className=\"flex items-center justify-between\">\r\n           <div className=\"flex items-center gap-\">\r\n             {plataforma?.imagem && (\r\n-              <Image src={plataforma.imagem} alt={plataforma.nome} width={64} height={32} className=\"rounded\" />\r\n+              <Image src={plataforma.imagem} alt={plataforma.nome} width={64} height={32} className=\"\" />\r\n             )}\r\n           </div>\r\n           <div className={`px-3 py-1 rounded-full text-xs font-medium ${statusClass}`}>{statusLabel}</div>\r\n         </div>\r\n"
                },
                {
                    "date": 1745471236165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -365,9 +365,9 @@\n       <div key={index} className=\"border border-muted rounded-md m-2 p-4 space-y-3\">\r\n         <div className=\"flex items-center justify-between\">\r\n           <div className=\"flex items-center gap-\">\r\n             {plataforma?.imagem && (\r\n-              <Image src={plataforma.imagem} alt={plataforma.nome} width={64} height={32} className=\"\" />\r\n+              <Image src={plataforma.imagem} alt={plataforma.nome} width={64} height={32} className=\"h-32 w-64\" />\r\n             )}\r\n           </div>\r\n           <div className={`px-3 py-1 rounded-full text-xs font-medium ${statusClass}`}>{statusLabel}</div>\r\n         </div>\r\n"
                },
                {
                    "date": 1745471241374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -365,9 +365,9 @@\n       <div key={index} className=\"border border-muted rounded-md m-2 p-4 space-y-3\">\r\n         <div className=\"flex items-center justify-between\">\r\n           <div className=\"flex items-center gap-\">\r\n             {plataforma?.imagem && (\r\n-              <Image src={plataforma.imagem} alt={plataforma.nome} width={64} height={32} className=\"h-32 w-64\" />\r\n+              <Image src={plataforma.imagem} alt={plataforma.nome} width={64} height={32} className=\"h-32 w-32\" />\r\n             )}\r\n           </div>\r\n           <div className={`px-3 py-1 rounded-full text-xs font-medium ${statusClass}`}>{statusLabel}</div>\r\n         </div>\r\n"
                },
                {
                    "date": 1745471248995,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -365,9 +365,9 @@\n       <div key={index} className=\"border border-muted rounded-md m-2 p-4 space-y-3\">\r\n         <div className=\"flex items-center justify-between\">\r\n           <div className=\"flex items-center gap-\">\r\n             {plataforma?.imagem && (\r\n-              <Image src={plataforma.imagem} alt={plataforma.nome} width={64} height={32} className=\"h-32 w-32\" />\r\n+              <Image src={plataforma.imagem} alt={plataforma.nome} width={180} height={180} className=\"h-32 w-32\" />\r\n             )}\r\n           </div>\r\n           <div className={`px-3 py-1 rounded-full text-xs font-medium ${statusClass}`}>{statusLabel}</div>\r\n         </div>\r\n"
                },
                {
                    "date": 1745471258591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -365,9 +365,9 @@\n       <div key={index} className=\"border border-muted rounded-md m-2 p-4 space-y-3\">\r\n         <div className=\"flex items-center justify-between\">\r\n           <div className=\"flex items-center gap-\">\r\n             {plataforma?.imagem && (\r\n-              <Image src={plataforma.imagem} alt={plataforma.nome} width={180} height={180} className=\"h-32 w-32\" />\r\n+              <Image src={plataforma.imagem} alt={plataforma.nome} width={100} height={100} className=\"h-32 w-32\" />\r\n             )}\r\n           </div>\r\n           <div className={`px-3 py-1 rounded-full text-xs font-medium ${statusClass}`}>{statusLabel}</div>\r\n         </div>\r\n"
                },
                {
                    "date": 1745471269768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -365,9 +365,9 @@\n       <div key={index} className=\"border border-muted rounded-md m-2 p-4 space-y-3\">\r\n         <div className=\"flex items-center justify-between\">\r\n           <div className=\"flex items-center gap-\">\r\n             {plataforma?.imagem && (\r\n-              <Image src={plataforma.imagem} alt={plataforma.nome} width={100} height={100} className=\"h-32 w-32\" />\r\n+              <Image src={plataforma.imagem} alt={plataforma.nome} width={100} height={100} className=\"h-16 w-32\" />\r\n             )}\r\n           </div>\r\n           <div className={`px-3 py-1 rounded-full text-xs font-medium ${statusClass}`}>{statusLabel}</div>\r\n         </div>\r\n"
                },
                {
                    "date": 1745471276692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -365,9 +365,9 @@\n       <div key={index} className=\"border border-muted rounded-md m-2 p-4 space-y-3\">\r\n         <div className=\"flex items-center justify-between\">\r\n           <div className=\"flex items-center gap-\">\r\n             {plataforma?.imagem && (\r\n-              <Image src={plataforma.imagem} alt={plataforma.nome} width={100} height={100} className=\"h-16 w-32\" />\r\n+              <Image src={plataforma.imagem} alt={plataforma.nome} width={100} height={100} className=\"h-6 w-32\" />\r\n             )}\r\n           </div>\r\n           <div className={`px-3 py-1 rounded-full text-xs font-medium ${statusClass}`}>{statusLabel}</div>\r\n         </div>\r\n"
                },
                {
                    "date": 1745471290564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -365,9 +365,9 @@\n       <div key={index} className=\"border border-muted rounded-md m-2 p-4 space-y-3\">\r\n         <div className=\"flex items-center justify-between\">\r\n           <div className=\"flex items-center gap-\">\r\n             {plataforma?.imagem && (\r\n-              <Image src={plataforma.imagem} alt={plataforma.nome} width={100} height={100} className=\"h-6 w-32\" />\r\n+              <Image src={plataforma.imagem} alt={plataforma.nome} width={100} height={100} className=\"h-16 w-316\" />\r\n             )}\r\n           </div>\r\n           <div className={`px-3 py-1 rounded-full text-xs font-medium ${statusClass}`}>{statusLabel}</div>\r\n         </div>\r\n"
                },
                {
                    "date": 1745471315382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -365,9 +365,9 @@\n       <div key={index} className=\"border border-muted rounded-md m-2 p-4 space-y-3\">\r\n         <div className=\"flex items-center justify-between\">\r\n           <div className=\"flex items-center gap-\">\r\n             {plataforma?.imagem && (\r\n-              <Image src={plataforma.imagem} alt={plataforma.nome} width={100} height={100} className=\"h-16 w-316\" />\r\n+              <Image src={plataforma.imagem} alt={plataforma.nome} width={100} height={100} className=\"\" />\r\n             )}\r\n           </div>\r\n           <div className={`px-3 py-1 rounded-full text-xs font-medium ${statusClass}`}>{statusLabel}</div>\r\n         </div>\r\n"
                },
                {
                    "date": 1745471325031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -365,9 +365,9 @@\n       <div key={index} className=\"border border-muted rounded-md m-2 p-4 space-y-3\">\r\n         <div className=\"flex items-center justify-between\">\r\n           <div className=\"flex items-center gap-\">\r\n             {plataforma?.imagem && (\r\n-              <Image src={plataforma.imagem} alt={plataforma.nome} width={100} height={100} className=\"\" />\r\n+              <Image src={plataforma.imagem} alt={plataforma.nome} width={100} height={40} className=\"\" />\r\n             )}\r\n           </div>\r\n           <div className={`px-3 py-1 rounded-full text-xs font-medium ${statusClass}`}>{statusLabel}</div>\r\n         </div>\r\n"
                },
                {
                    "date": 1745471336162,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -365,9 +365,9 @@\n       <div key={index} className=\"border border-muted rounded-md m-2 p-4 space-y-3\">\r\n         <div className=\"flex items-center justify-between\">\r\n           <div className=\"flex items-center gap-\">\r\n             {plataforma?.imagem && (\r\n-              <Image src={plataforma.imagem} alt={plataforma.nome} width={100} height={40} className=\"\" />\r\n+              <Image src={plataforma.imagem} alt={plataforma.nome} width={100} height={100} className=\"\" />\r\n             )}\r\n           </div>\r\n           <div className={`px-3 py-1 rounded-full text-xs font-medium ${statusClass}`}>{statusLabel}</div>\r\n         </div>\r\n"
                },
                {
                    "date": 1745471342321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -365,9 +365,9 @@\n       <div key={index} className=\"border border-muted rounded-md m-2 p-4 space-y-3\">\r\n         <div className=\"flex items-center justify-between\">\r\n           <div className=\"flex items-center gap-\">\r\n             {plataforma?.imagem && (\r\n-              <Image src={plataforma.imagem} alt={plataforma.nome} width={100} height={100} className=\"\" />\r\n+              <Image src={plataforma.imagem} alt={plataforma.nome} width={24} height={24} className=\"\" />\r\n             )}\r\n           </div>\r\n           <div className={`px-3 py-1 rounded-full text-xs font-medium ${statusClass}`}>{statusLabel}</div>\r\n         </div>\r\n"
                },
                {
                    "date": 1745471347614,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -365,9 +365,9 @@\n       <div key={index} className=\"border border-muted rounded-md m-2 p-4 space-y-3\">\r\n         <div className=\"flex items-center justify-between\">\r\n           <div className=\"flex items-center gap-\">\r\n             {plataforma?.imagem && (\r\n-              <Image src={plataforma.imagem} alt={plataforma.nome} width={24} height={24} className=\"\" />\r\n+              <Image src={plataforma.imagem} alt={plataforma.nome} width={32} height={24} className=\"\" />\r\n             )}\r\n           </div>\r\n           <div className={`px-3 py-1 rounded-full text-xs font-medium ${statusClass}`}>{statusLabel}</div>\r\n         </div>\r\n"
                },
                {
                    "date": 1745471356605,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -365,9 +365,9 @@\n       <div key={index} className=\"border border-muted rounded-md m-2 p-4 space-y-3\">\r\n         <div className=\"flex items-center justify-between\">\r\n           <div className=\"flex items-center gap-\">\r\n             {plataforma?.imagem && (\r\n-              <Image src={plataforma.imagem} alt={plataforma.nome} width={32} height={24} className=\"\" />\r\n+              <Image src={plataforma.imagem} alt={plataforma.nome} width={64} height={32} className=\"\" />\r\n             )}\r\n           </div>\r\n           <div className={`px-3 py-1 rounded-full text-xs font-medium ${statusClass}`}>{statusLabel}</div>\r\n         </div>\r\n"
                },
                {
                    "date": 1745471364495,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -365,9 +365,9 @@\n       <div key={index} className=\"border border-muted rounded-md m-2 p-4 space-y-3\">\r\n         <div className=\"flex items-center justify-between\">\r\n           <div className=\"flex items-center gap-\">\r\n             {plataforma?.imagem && (\r\n-              <Image src={plataforma.imagem} alt={plataforma.nome} width={64} height={32} className=\"\" />\r\n+              <Image src={plataforma.imagem} alt={plataforma.nome} width={120} height={32} className=\"\" />\r\n             )}\r\n           </div>\r\n           <div className={`px-3 py-1 rounded-full text-xs font-medium ${statusClass}`}>{statusLabel}</div>\r\n         </div>\r\n"
                },
                {
                    "date": 1745471371008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -365,9 +365,9 @@\n       <div key={index} className=\"border border-muted rounded-md m-2 p-4 space-y-3\">\r\n         <div className=\"flex items-center justify-between\">\r\n           <div className=\"flex items-center gap-\">\r\n             {plataforma?.imagem && (\r\n-              <Image src={plataforma.imagem} alt={plataforma.nome} width={120} height={32} className=\"\" />\r\n+              <Image src={plataforma.imagem} alt={plataforma.nome} width={64} height={32} className=\"\" />\r\n             )}\r\n           </div>\r\n           <div className={`px-3 py-1 rounded-full text-xs font-medium ${statusClass}`}>{statusLabel}</div>\r\n         </div>\r\n"
                },
                {
                    "date": 1745520646498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,9 @@\n \r\n         <div className=\"grid grid-cols-[35%_1fr] gap-8\">\r\n           {/* Esquerda */}\r\n           <div className=\"space-y-4\">\r\n-            <div className=\"grid grid-cols-[auto_1fr] gap-4 items-start\">\r\n+            <div className=\"grid grid-cols-[auto_1fr] align-center gap-4 items-start\">\r\n               <div className=\"relative w-24 h-24 group\">\r\n               <Image\r\n   src={\r\n     imagemErro\r\n"
                },
                {
                    "date": 1745520695187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,9 @@\n \r\n         <div className=\"grid grid-cols-[35%_1fr] gap-8\">\r\n           {/* Esquerda */}\r\n           <div className=\"space-y-4\">\r\n-            <div className=\"grid grid-cols-[auto_1fr] align-center gap-4 items-start\">\r\n+            <div className=\"grid grid-cols-[auto_1fr] items-center gap-4 items-start\">\r\n               <div className=\"relative w-24 h-24 group\">\r\n               <Image\r\n   src={\r\n     imagemErro\r\n"
                },
                {
                    "date": 1745520723048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,9 +220,9 @@\n                 </div>\r\n               </div>\r\n             </div>\r\n \r\n-            <div className=\"space-y-1.5\">\r\n+            <div className=\"\">\r\n               <Label htmlFor=\"cpf\">CPF</Label>\r\n               <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n             </div>\r\n \r\n"
                },
                {
                    "date": 1745520732218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,9 +220,9 @@\n                 </div>\r\n               </div>\r\n             </div>\r\n \r\n-            <div className=\"\">\r\n+            <div className=\"space-y-1.5\">\r\n               <Label htmlFor=\"cpf\">CPF</Label>\r\n               <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n             </div>\r\n \r\n"
                },
                {
                    "date": 1745520747310,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -208,9 +208,9 @@\n                   <Pencil className=\"text-white w-5 h-5\" />\r\n                 </div>\r\n                 <input ref={inputFileRef} type=\"file\" accept=\"image/*\" onChange={handleImageChange} className=\"hidden\" />\r\n               </div>\r\n-              <div className=\"space-y-4\">\r\n+              <div className=\"\">\r\n                 <div className=\"space-y-1.5\">\r\n                   <Label htmlFor=\"nome\">Nome</Label>\r\n                   <Input id=\"nome\" defaultValue={influenciador.nome} />\r\n                 </div>\r\n"
                },
                {
                    "date": 1745520786606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -208,9 +208,9 @@\n                   <Pencil className=\"text-white w-5 h-5\" />\r\n                 </div>\r\n                 <input ref={inputFileRef} type=\"file\" accept=\"image/*\" onChange={handleImageChange} className=\"hidden\" />\r\n               </div>\r\n-              <div className=\"\">\r\n+              <div className=\"space-y-4\">\r\n                 <div className=\"space-y-1.5\">\r\n                   <Label htmlFor=\"nome\">Nome</Label>\r\n                   <Input id=\"nome\" defaultValue={influenciador.nome} />\r\n                 </div>\r\n@@ -220,9 +220,9 @@\n                 </div>\r\n               </div>\r\n             </div>\r\n \r\n-            <div className=\"space-y-1.5\">\r\n+            <div className=\"space-y-1.0\">\r\n               <Label htmlFor=\"cpf\">CPF</Label>\r\n               <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n             </div>\r\n \r\n"
                },
                {
                    "date": 1745520794153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,9 +220,9 @@\n                 </div>\r\n               </div>\r\n             </div>\r\n \r\n-            <div className=\"space-y-1.0\">\r\n+            <div className=\"space-y-2.5\">\r\n               <Label htmlFor=\"cpf\">CPF</Label>\r\n               <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n             </div>\r\n \r\n"
                },
                {
                    "date": 1745520821908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -208,9 +208,9 @@\n                   <Pencil className=\"text-white w-5 h-5\" />\r\n                 </div>\r\n                 <input ref={inputFileRef} type=\"file\" accept=\"image/*\" onChange={handleImageChange} className=\"hidden\" />\r\n               </div>\r\n-              <div className=\"space-y-4\">\r\n+              <div className=\"flex gap-2 space-y-4\">\r\n                 <div className=\"space-y-1.5\">\r\n                   <Label htmlFor=\"nome\">Nome</Label>\r\n                   <Input id=\"nome\" defaultValue={influenciador.nome} />\r\n                 </div>\r\n@@ -220,9 +220,9 @@\n                 </div>\r\n               </div>\r\n             </div>\r\n \r\n-            <div className=\"space-y-2.5\">\r\n+            <div className=\"space-y-1.5\">\r\n               <Label htmlFor=\"cpf\">CPF</Label>\r\n               <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n             </div>\r\n \r\n"
                },
                {
                    "date": 1745520839424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -208,9 +208,9 @@\n                   <Pencil className=\"text-white w-5 h-5\" />\r\n                 </div>\r\n                 <input ref={inputFileRef} type=\"file\" accept=\"image/*\" onChange={handleImageChange} className=\"hidden\" />\r\n               </div>\r\n-              <div className=\"flex gap-2 space-y-4\">\r\n+              <div className=\"flex gap-2\">\r\n                 <div className=\"space-y-1.5\">\r\n                   <Label htmlFor=\"nome\">Nome</Label>\r\n                   <Input id=\"nome\" defaultValue={influenciador.nome} />\r\n                 </div>\r\n"
                },
                {
                    "date": 1745520872968,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,8 +218,12 @@\n                   <Label htmlFor=\"instagram\">Instagram</Label>\r\n                   <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n                 </div>\r\n               </div>\r\n+              <div className=\"space-y-1.5\">\r\n+                  <Label htmlFor=\"instagram\">Instagram</Label>\r\n+                  <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n+                </div>\r\n             </div>\r\n \r\n             <div className=\"space-y-1.5\">\r\n               <Label htmlFor=\"cpf\">CPF</Label>\r\n"
                },
                {
                    "date": 1745520879666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,12 +218,8 @@\n                   <Label htmlFor=\"instagram\">Instagram</Label>\r\n                   <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n                 </div>\r\n               </div>\r\n-              <div className=\"space-y-1.5\">\r\n-                  <Label htmlFor=\"instagram\">Instagram</Label>\r\n-                  <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n-                </div>\r\n             </div>\r\n \r\n             <div className=\"space-y-1.5\">\r\n               <Label htmlFor=\"cpf\">CPF</Label>\r\n"
                },
                {
                    "date": 1745520901680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -204,9 +204,9 @@\n                 <div\r\n                   className=\"absolute inset-0 bg-black/50 rounded-full opacity-0 group-hover:opacity-100 flex items-center justify-center cursor-pointer transition\"\r\n                   onClick={() => inputFileRef.current?.click()}\r\n                 >\r\n-                  <Pencil className=\"text-white w-5 h-5\" />\r\n+                  <Pencil className=\"text-white w-3 h-3\" />\r\n                 </div>\r\n                 <input ref={inputFileRef} type=\"file\" accept=\"image/*\" onChange={handleImageChange} className=\"hidden\" />\r\n               </div>\r\n               <div className=\"flex gap-2\">\r\n"
                },
                {
                    "date": 1745520909349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -204,9 +204,9 @@\n                 <div\r\n                   className=\"absolute inset-0 bg-black/50 rounded-full opacity-0 group-hover:opacity-100 flex items-center justify-center cursor-pointer transition\"\r\n                   onClick={() => inputFileRef.current?.click()}\r\n                 >\r\n-                  <Pencil className=\"text-white w-3 h-3\" />\r\n+                  <Pencil className=\"text-white w-5 h-5\" />\r\n                 </div>\r\n                 <input ref={inputFileRef} type=\"file\" accept=\"image/*\" onChange={handleImageChange} className=\"hidden\" />\r\n               </div>\r\n               <div className=\"flex gap-2\">\r\n"
                },
                {
                    "date": 1745520944842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -187,9 +187,9 @@\n         <div className=\"grid grid-cols-[35%_1fr] gap-8\">\r\n           {/* Esquerda */}\r\n           <div className=\"space-y-4\">\r\n             <div className=\"grid grid-cols-[auto_1fr] items-center gap-4 items-start\">\r\n-              <div className=\"relative w-24 h-24 group\">\r\n+              <div className=\"relative w-16 h-16 group\">\r\n               <Image\r\n   src={\r\n     imagemErro\r\n       ? \"/images/avatar/placeholder.png\"\r\n"
                },
                {
                    "date": 1745520960692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -179,11 +179,8 @@\n   return (\r\n     <>\r\n     <Dialog open={open} onOpenChange={handleCloseAndUpdate}>\r\n       <DialogContent size=\"full\">\r\n-        <DialogHeader>\r\n-          <DialogTitle>Editar Influenciador</DialogTitle>\r\n-        </DialogHeader>\r\n \r\n         <div className=\"grid grid-cols-[35%_1fr] gap-8\">\r\n           {/* Esquerda */}\r\n           <div className=\"space-y-4\">\r\n"
                },
                {
                    "date": 1745520967689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -179,8 +179,11 @@\n   return (\r\n     <>\r\n     <Dialog open={open} onOpenChange={handleCloseAndUpdate}>\r\n       <DialogContent size=\"full\">\r\n+        <DialogHeader>\r\n+          <DialogTitle>Editar Influenciador</DialogTitle>\r\n+        </DialogHeader>\r\n \r\n         <div className=\"grid grid-cols-[35%_1fr] gap-8\">\r\n           {/* Esquerda */}\r\n           <div className=\"space-y-4\">\r\n"
                },
                {
                    "date": 1745521005506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -179,11 +179,8 @@\n   return (\r\n     <>\r\n     <Dialog open={open} onOpenChange={handleCloseAndUpdate}>\r\n       <DialogContent size=\"full\">\r\n-        <DialogHeader>\r\n-          <DialogTitle>Editar Influenciador</DialogTitle>\r\n-        </DialogHeader>\r\n \r\n         <div className=\"grid grid-cols-[35%_1fr] gap-8\">\r\n           {/* Esquerda */}\r\n           <div className=\"space-y-4\">\r\n@@ -224,10 +221,13 @@\n             <div className=\"space-y-1.5\">\r\n               <Label htmlFor=\"cpf\">CPF</Label>\r\n               <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n             </div>\r\n-\r\n             <div className=\"space-y-1.5\">\r\n+              <Label htmlFor=\"cpf\">Chave Pix</Label>\r\n+              <Input id=\"chavepix\" defaultValue={influenciador.cpf} />\r\n+            </div>\r\n+            <div className=\"space-y-1.5\">\r\n               <Label>Data de Cadastro</Label>\r\n               <Input value={influenciador.dataCadastro} readOnly />\r\n             </div>\r\n \r\n"
                },
                {
                    "date": 1745521042017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,18 +216,20 @@\n                   <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n                 </div>\r\n               </div>\r\n             </div>\r\n-\r\n-            <div className=\"space-y-1.5\">\r\n-              <Label htmlFor=\"cpf\">CPF</Label>\r\n+            <div className=\"flex gap-2\">\r\n+            <Label htmlFor=\"cpf\">CPF</Label>\r\n               <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n             </div>\r\n             <div className=\"space-y-1.5\">\r\n               <Label htmlFor=\"cpf\">Chave Pix</Label>\r\n               <Input id=\"chavepix\" defaultValue={influenciador.cpf} />\r\n             </div>\r\n+            </div>\r\n             <div className=\"space-y-1.5\">\r\n+\r\n+            <div className=\"space-y-1.5\">\r\n               <Label>Data de Cadastro</Label>\r\n               <Input value={influenciador.dataCadastro} readOnly />\r\n             </div>\r\n \r\n"
                },
                {
                    "date": 1745521055526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,9 +216,9 @@\n                   <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n                 </div>\r\n               </div>\r\n             </div>\r\n-            <div className=\"flex gap-2\">\r\n+            <div>\r\n             <Label htmlFor=\"cpf\">CPF</Label>\r\n               <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n             </div>\r\n             <div className=\"space-y-1.5\">\r\n"
                },
                {
                    "date": 1745521066422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,20 +216,18 @@\n                   <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n                 </div>\r\n               </div>\r\n             </div>\r\n-            <div>\r\n-            <Label htmlFor=\"cpf\">CPF</Label>\r\n+            <div></div>\r\n+            <div className=\"space-y-1.5\">\r\n+              <Label htmlFor=\"cpf\">CPF</Label>\r\n               <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n             </div>\r\n             <div className=\"space-y-1.5\">\r\n               <Label htmlFor=\"cpf\">Chave Pix</Label>\r\n               <Input id=\"chavepix\" defaultValue={influenciador.cpf} />\r\n             </div>\r\n-            </div>\r\n             <div className=\"space-y-1.5\">\r\n-\r\n-            <div className=\"space-y-1.5\">\r\n               <Label>Data de Cadastro</Label>\r\n               <Input value={influenciador.dataCadastro} readOnly />\r\n             </div>\r\n \r\n"
                },
                {
                    "date": 1745521095850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,18 +207,17 @@\n                 <input ref={inputFileRef} type=\"file\" accept=\"image/*\" onChange={handleImageChange} className=\"hidden\" />\r\n               </div>\r\n               <div className=\"flex gap-2\">\r\n                 <div className=\"space-y-1.5\">\r\n-                  <Label htmlFor=\"nome\">Nome</Label>\r\n+                  <Label htmlFor=\"nome\">Nome do Blogueiro</Label>\r\n                   <Input id=\"nome\" defaultValue={influenciador.nome} />\r\n                 </div>\r\n                 <div className=\"space-y-1.5\">\r\n                   <Label htmlFor=\"instagram\">Instagram</Label>\r\n                   <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n                 </div>\r\n               </div>\r\n             </div>\r\n-            <div></div>\r\n             <div className=\"space-y-1.5\">\r\n               <Label htmlFor=\"cpf\">CPF</Label>\r\n               <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n             </div>\r\n"
                },
                {
                    "date": 1745521123068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,8 +216,9 @@\n                   <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n                 </div>\r\n               </div>\r\n             </div>\r\n+            <div className=\"space-y-1.5\"></div>\r\n             <div className=\"space-y-1.5\">\r\n               <Label htmlFor=\"cpf\">CPF</Label>\r\n               <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n             </div>\r\n"
                },
                {
                    "date": 1745521134970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,9 +216,9 @@\n                   <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n                 </div>\r\n               </div>\r\n             </div>\r\n-            <div className=\"space-y-1.5\"></div>\r\n+            <div className=\"flex gap-2\"></div>\r\n             <div className=\"space-y-1.5\">\r\n               <Label htmlFor=\"cpf\">CPF</Label>\r\n               <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n             </div>\r\n"
                },
                {
                    "date": 1745521149165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,18 +216,27 @@\n                   <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n                 </div>\r\n               </div>\r\n             </div>\r\n-            <div className=\"flex gap-2\"></div>\r\n+            <div className=\"flex gap-2\">\r\n             <div className=\"space-y-1.5\">\r\n               <Label htmlFor=\"cpf\">CPF</Label>\r\n               <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n             </div>\r\n             <div className=\"space-y-1.5\">\r\n               <Label htmlFor=\"cpf\">Chave Pix</Label>\r\n               <Input id=\"chavepix\" defaultValue={influenciador.cpf} />\r\n             </div>\r\n+            </div>\r\n             <div className=\"space-y-1.5\">\r\n+              <Label htmlFor=\"cpf\">CPF</Label>\r\n+              <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n+            </div>\r\n+            <div className=\"space-y-1.5\">\r\n+              <Label htmlFor=\"cpf\">Chave Pix</Label>\r\n+              <Input id=\"chavepix\" defaultValue={influenciador.cpf} />\r\n+            </div>\r\n+            <div className=\"space-y-1.5\">\r\n               <Label>Data de Cadastro</Label>\r\n               <Input value={influenciador.dataCadastro} readOnly />\r\n             </div>\r\n \r\n"
                },
                {
                    "date": 1745521158386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -227,16 +227,8 @@\n               <Input id=\"chavepix\" defaultValue={influenciador.cpf} />\r\n             </div>\r\n             </div>\r\n             <div className=\"space-y-1.5\">\r\n-              <Label htmlFor=\"cpf\">CPF</Label>\r\n-              <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n-            </div>\r\n-            <div className=\"space-y-1.5\">\r\n-              <Label htmlFor=\"cpf\">Chave Pix</Label>\r\n-              <Input id=\"chavepix\" defaultValue={influenciador.cpf} />\r\n-            </div>\r\n-            <div className=\"space-y-1.5\">\r\n               <Label>Data de Cadastro</Label>\r\n               <Input value={influenciador.dataCadastro} readOnly />\r\n             </div>\r\n \r\n"
                },
                {
                    "date": 1745521189695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,9 +216,9 @@\n                   <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n                 </div>\r\n               </div>\r\n             </div>\r\n-            <div className=\"flex gap-2\">\r\n+            <div className=\"w-full flex gap-2\">\r\n             <div className=\"space-y-1.5\">\r\n               <Label htmlFor=\"cpf\">CPF</Label>\r\n               <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n             </div>\r\n"
                },
                {
                    "date": 1745521279472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,9 +216,9 @@\n                   <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n                 </div>\r\n               </div>\r\n             </div>\r\n-            <div className=\"w-full flex gap-2\">\r\n+            <div className=\"grid grid-cols-2 flex gap-2\">\r\n             <div className=\"space-y-1.5\">\r\n               <Label htmlFor=\"cpf\">CPF</Label>\r\n               <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n             </div>\r\n"
                },
                {
                    "date": 1745521285707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,9 +216,9 @@\n                   <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n                 </div>\r\n               </div>\r\n             </div>\r\n-            <div className=\"grid grid-cols-2 flex gap-2\">\r\n+            <div className=\"grid grid-cols flex gap-2\">\r\n             <div className=\"space-y-1.5\">\r\n               <Label htmlFor=\"cpf\">CPF</Label>\r\n               <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n             </div>\r\n"
                },
                {
                    "date": 1745521292060,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,9 +216,9 @@\n                   <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n                 </div>\r\n               </div>\r\n             </div>\r\n-            <div className=\"grid grid-cols flex gap-2\">\r\n+            <div className=\"grid grid-cols-2 flex gap-2\">\r\n             <div className=\"space-y-1.5\">\r\n               <Label htmlFor=\"cpf\">CPF</Label>\r\n               <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n             </div>\r\n"
                },
                {
                    "date": 1745521310609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -205,9 +205,9 @@\n                   <Pencil className=\"text-white w-5 h-5\" />\r\n                 </div>\r\n                 <input ref={inputFileRef} type=\"file\" accept=\"image/*\" onChange={handleImageChange} className=\"hidden\" />\r\n               </div>\r\n-              <div className=\"flex gap-2\">\r\n+              <div className=\"grid grid-cols-2 flex gap-2\">\r\n                 <div className=\"space-y-1.5\">\r\n                   <Label htmlFor=\"nome\">Nome do Blogueiro</Label>\r\n                   <Input id=\"nome\" defaultValue={influenciador.nome} />\r\n                 </div>\r\n"
                },
                {
                    "date": 1745521330000,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -205,9 +205,9 @@\n                   <Pencil className=\"text-white w-5 h-5\" />\r\n                 </div>\r\n                 <input ref={inputFileRef} type=\"file\" accept=\"image/*\" onChange={handleImageChange} className=\"hidden\" />\r\n               </div>\r\n-              <div className=\"grid grid-cols-2 flex gap-2\">\r\n+              <div className=\"grid grid-cols-[35%_1fr] flex gap-2\">\r\n                 <div className=\"space-y-1.5\">\r\n                   <Label htmlFor=\"nome\">Nome do Blogueiro</Label>\r\n                   <Input id=\"nome\" defaultValue={influenciador.nome} />\r\n                 </div>\r\n"
                },
                {
                    "date": 1745521335690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -205,9 +205,9 @@\n                   <Pencil className=\"text-white w-5 h-5\" />\r\n                 </div>\r\n                 <input ref={inputFileRef} type=\"file\" accept=\"image/*\" onChange={handleImageChange} className=\"hidden\" />\r\n               </div>\r\n-              <div className=\"grid grid-cols-[35%_1fr] flex gap-2\">\r\n+              <div className=\"grid grid-cols-2 flex gap-2\">\r\n                 <div className=\"space-y-1.5\">\r\n                   <Label htmlFor=\"nome\">Nome do Blogueiro</Label>\r\n                   <Input id=\"nome\" defaultValue={influenciador.nome} />\r\n                 </div>\r\n"
                },
                {
                    "date": 1745521345494,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,9 +216,9 @@\n                   <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n                 </div>\r\n               </div>\r\n             </div>\r\n-            <div className=\"grid grid-cols-2 flex gap-2\">\r\n+            <div className=\"grid grid-cols-[35%_1fr] flex gap-2\">\r\n             <div className=\"space-y-1.5\">\r\n               <Label htmlFor=\"cpf\">CPF</Label>\r\n               <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n             </div>\r\n"
                },
                {
                    "date": 1745521359435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,9 +216,9 @@\n                   <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n                 </div>\r\n               </div>\r\n             </div>\r\n-            <div className=\"grid grid-cols-[35%_1fr] flex gap-2\">\r\n+            <div className=\"grid grid-cols-[15%_1fr] flex gap-2\">\r\n             <div className=\"space-y-1.5\">\r\n               <Label htmlFor=\"cpf\">CPF</Label>\r\n               <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n             </div>\r\n"
                },
                {
                    "date": 1745521364862,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,9 +216,9 @@\n                   <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n                 </div>\r\n               </div>\r\n             </div>\r\n-            <div className=\"grid grid-cols-[15%_1fr] flex gap-2\">\r\n+            <div className=\"grid grid-cols-[65%_1fr] flex gap-2\">\r\n             <div className=\"space-y-1.5\">\r\n               <Label htmlFor=\"cpf\">CPF</Label>\r\n               <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n             </div>\r\n"
                },
                {
                    "date": 1745521373946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,9 +216,9 @@\n                   <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n                 </div>\r\n               </div>\r\n             </div>\r\n-            <div className=\"grid grid-cols-[65%_1fr] flex gap-2\">\r\n+            <div className=\"grid grid-cols-[50%_1fr] flex gap-2\">\r\n             <div className=\"space-y-1.5\">\r\n               <Label htmlFor=\"cpf\">CPF</Label>\r\n               <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n             </div>\r\n"
                },
                {
                    "date": 1745521383910,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,9 +216,9 @@\n                   <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n                 </div>\r\n               </div>\r\n             </div>\r\n-            <div className=\"grid grid-cols-[50%_1fr] flex gap-2\">\r\n+            <div className=\"grid grid-cols-[58%_1fr] flex gap-2\">\r\n             <div className=\"space-y-1.5\">\r\n               <Label htmlFor=\"cpf\">CPF</Label>\r\n               <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n             </div>\r\n"
                },
                {
                    "date": 1745521604014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -211,14 +211,16 @@\n                   <Label htmlFor=\"nome\">Nome do Blogueiro</Label>\r\n                   <Input id=\"nome\" defaultValue={influenciador.nome} />\r\n                 </div>\r\n                 <div className=\"space-y-1.5\">\r\n-                  <Label htmlFor=\"instagram\">Instagram</Label>\r\n-                  <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n+                  <InputGroup>\r\n+                      <InputGroupText>@</InputGroupText>\r\n+                      <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n+                  </InputGroup>\r\n                 </div>\r\n               </div>\r\n             </div>\r\n-            <div className=\"grid grid-cols-[58%_1fr] flex gap-2\">\r\n+            <div className=\"grid grid-cols-[57%_1fr] flex gap-2\">\r\n             <div className=\"space-y-1.5\">\r\n               <Label htmlFor=\"cpf\">CPF</Label>\r\n               <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n             </div>\r\n"
                },
                {
                    "date": 1745521622126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -211,12 +211,13 @@\n                   <Label htmlFor=\"nome\">Nome do Blogueiro</Label>\r\n                   <Input id=\"nome\" defaultValue={influenciador.nome} />\r\n                 </div>\r\n                 <div className=\"space-y-1.5\">\r\n+                  <Label htmlFor=\"instagram\">Instagram</Label>\r\n                   <InputGroup>\r\n-                      <InputGroupText>@</InputGroupText>\r\n-                      <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n-                  </InputGroup>\r\n+        <InputGroupText>@</InputGroupText>\r\n+      <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n+    </InputGroup>\r\n                 </div>\r\n               </div>\r\n             </div>\r\n             <div className=\"grid grid-cols-[57%_1fr] flex gap-2\">\r\n"
                },
                {
                    "date": 1745521631765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -213,11 +213,11 @@\n                 </div>\r\n                 <div className=\"space-y-1.5\">\r\n                   <Label htmlFor=\"instagram\">Instagram</Label>\r\n                   <InputGroup>\r\n-        <InputGroupText>@</InputGroupText>\r\n-      <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n-    </InputGroup>\r\n+                  <InputGroupText>@</InputGroupText>\r\n+                    <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n+                    </InputGroup>\r\n                 </div>\r\n               </div>\r\n             </div>\r\n             <div className=\"grid grid-cols-[57%_1fr] flex gap-2\">\r\n"
                },
                {
                    "date": 1745522170227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,8 +34,11 @@\n import { plataformas } from \"@/lib/data\";\r\n import { Influenciador } from \"@/lib/influenciadores\";\r\n import { InputGroup, InputGroupText } from \"@/components/ui/input-group\";\r\n import RecargasModal from \"@/components/RecargasModal\";\r\n+import { ChevronLeft, ChevronRight } from 'lucide-react'\r\n+import { Button } from '@/components/ui/button'\r\n+import { useMemo, useState } from 'react'\r\n \r\n \r\n \r\n interface OptionType {\r\n@@ -175,8 +178,32 @@\n // Gera uma imagem \"random\" baseada no nome (usando ui-avatars.com)\r\n const fallbackImage = `https://ui-avatars.com/api/?name=${encodeURIComponent(\r\n   influenciador.nome\r\n )}&background=random&color=fff`;\r\n+\r\n+const pageSize = 4  // quantos cards por página\r\n+const [pageAtivas, setPageAtivas] = useState(0)\r\n+const [pageHistorico, setPageHistorico] = useState(0)\r\n+\r\n+const pageCountAtivas = Math.ceil(recargasAtivas.length / pageSize)\r\n+const pageCountHistorico = Math.ceil(recargasHistorico.length / pageSize)\r\n+const atuaisPag = useMemo(\r\n+  () =>\r\n+    recargasAtivas.slice(\r\n+      pageAtivas * pageSize,\r\n+      pageAtivas * pageSize + pageSize\r\n+    ),\r\n+  [recargasAtivas, pageAtivas]\r\n+)\r\n+\r\n+const historicoPag = useMemo(\r\n+  () =>\r\n+    recargasHistorico.slice(\r\n+      pageHistorico * pageSize,\r\n+      pageHistorico * pageSize + pageSize\r\n+    ),\r\n+  [recargasHistorico, pageHistorico]\r\n+)\r\n   return (\r\n     <>\r\n     <Dialog open={open} onOpenChange={handleCloseAndUpdate}>\r\n       <DialogContent size=\"full\">\r\n"
                },
                {
                    "date": 1745522215457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -325,25 +325,114 @@\n               <TabsTrigger value=\"ativas\">Recargas  Ativas</TabsTrigger>\r\n               <TabsTrigger value=\"historico\">Histórico</TabsTrigger>\r\n             </TabsList>\r\n           </div>\r\n-            <TabsContent value=\"ativas\">\r\n+          <TabsContent value=\"ativas\">\r\n   {recargasAtivas.length === 0 ? (\r\n     <div className=\"flex items-center justify-center h-[300px] text-muted-foreground text-sm text-center\">\r\n       Nenhuma recarga ativa no momento.\r\n     </div>\r\n   ) : (\r\n-    <ScrollArea className=\"max-h-[450px] pr-2\">\r\n-      {recargasAtivas.map((rec, index) => renderRecargaCard(rec, index))}\r\n-    </ScrollArea>\r\n+    <>\r\n+      {/* container fixo, sem scroll */}\r\n+      <div className=\"h-[450px] overflow-hidden\">\r\n+        {atuaisPag.map((rec, idx) =>\r\n+          // você pode garantir altura fixa no card:\r\n+          <div key={idx} className=\"border border-muted rounded-md m-2 p-4 space-y-3 h-40\">\r\n+            {renderRecargaCard(rec, idx)}\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+\r\n+      {/* controles de paginação */}\r\n+      <div className=\"flex items-center justify-center gap-2 py-4\">\r\n+        <Button\r\n+          variant=\"outline\"\r\n+          size=\"icon\"\r\n+          onClick={() => setPageAtivas(old => Math.max(old - 1, 0))}\r\n+          disabled={pageAtivas === 0}\r\n+          className=\"w-8 h-8\"\r\n+        >\r\n+          <ChevronLeft className=\"w-4 h-4\" />\r\n+        </Button>\r\n+\r\n+        {/* botões de página */}\r\n+        {Array.from({ length: pageCountAtivas }).map((_, i) => (\r\n+          <Button\r\n+            key={i}\r\n+            size=\"icon\"\r\n+            variant={i === pageAtivas ? 'default' : 'outline'}\r\n+            onClick={() => setPageAtivas(i)}\r\n+            className=\"w-8 h-8\"\r\n+          >\r\n+            {i + 1}\r\n+          </Button>\r\n+        ))}\r\n+\r\n+        <Button\r\n+          variant=\"outline\"\r\n+          size=\"icon\"\r\n+          onClick={() => setPageAtivas(old => Math.min(old + 1, pageCountAtivas - 1))}\r\n+          disabled={pageAtivas >= pageCountAtivas - 1}\r\n+          className=\"w-8 h-8\"\r\n+        >\r\n+          <ChevronRight className=\"w-4 h-4\" />\r\n+        </Button>\r\n+      </div>\r\n+    </>\r\n   )}\r\n </TabsContent>\r\n \r\n-            <TabsContent value=\"historico\">\r\n-              <ScrollArea className=\"max-h-[450px] pr-2\">\r\n-                {recargasHistorico.map((rec, index) => renderRecargaCard(rec, index))}\r\n-              </ScrollArea>\r\n-            </TabsContent>\r\n+<TabsContent value=\"historico\">\r\n+  {recargasHistorico.length === 0 ? (\r\n+    <div className=\"flex items-center justify-center h-[300px] text-muted-foreground text-sm text-center\">\r\n+      Nenhuma recarga no histórico.\r\n+    </div>\r\n+  ) : (\r\n+    <>\r\n+      <div className=\"h-[450px] overflow-hidden\">\r\n+        {historicoPag.map((rec, idx) =>\r\n+          <div key={idx} className=\"border border-muted rounded-md m-2 p-4 space-y-3 h-40\">\r\n+            {renderRecargaCard(rec, idx)}\r\n+          </div>\r\n+        )}\r\n+      </div>\r\n+\r\n+      <div className=\"flex items-center justify-center gap-2 py-4\">\r\n+        <Button\r\n+          variant=\"outline\"\r\n+          size=\"icon\"\r\n+          onClick={() => setPageHistorico(old => Math.max(old - 1, 0))}\r\n+          disabled={pageHistorico === 0}\r\n+          className=\"w-8 h-8\"\r\n+        >\r\n+          <ChevronLeft className=\"w-4 h-4\" />\r\n+        </Button>\r\n+        {Array.from({ length: pageCountHistorico }).map((_, i) => (\r\n+          <Button\r\n+            key={i}\r\n+            size=\"icon\"\r\n+            variant={i === pageHistorico ? 'default' : 'outline'}\r\n+            onClick={() => setPageHistorico(i)}\r\n+            className=\"w-8 h-8\"\r\n+          >\r\n+            {i + 1}\r\n+          </Button>\r\n+        ))}\r\n+        <Button\r\n+          variant=\"outline\"\r\n+          size=\"icon\"\r\n+          onClick={() => setPageHistorico(old => Math.min(old + 1, pageCountHistorico - 1))}\r\n+          disabled={pageHistorico >= pageCountHistorico - 1}\r\n+          className=\"w-8 h-8\"\r\n+        >\r\n+          <ChevronRight className=\"w-4 h-4\" />\r\n+        </Button>\r\n+      </div>\r\n+    </>\r\n+  )}\r\n+</TabsContent>\r\n+\r\n           </Tabs>\r\n         </div>\r\n       </DialogContent>\r\n     </Dialog>\r\n"
                },
                {
                    "date": 1745522247276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,10 +35,9 @@\n import { Influenciador } from \"@/lib/influenciadores\";\r\n import { InputGroup, InputGroupText } from \"@/components/ui/input-group\";\r\n import RecargasModal from \"@/components/RecargasModal\";\r\n import { ChevronLeft, ChevronRight } from 'lucide-react'\r\n-import { Button } from '@/components/ui/button'\r\n-import { useMemo, useState } from 'react'\r\n+import { useMemo } from 'react'\r\n \r\n \r\n \r\n interface OptionType {\r\n"
                },
                {
                    "date": 1745522337285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -178,9 +178,9 @@\n const fallbackImage = `https://ui-avatars.com/api/?name=${encodeURIComponent(\r\n   influenciador.nome\r\n )}&background=random&color=fff`;\r\n \r\n-const pageSize = 4  // quantos cards por página\r\n+const pageSize = 2  // quantos cards por página\r\n const [pageAtivas, setPageAtivas] = useState(0)\r\n const [pageHistorico, setPageHistorico] = useState(0)\r\n \r\n const pageCountAtivas = Math.ceil(recargasAtivas.length / pageSize)\r\n"
                },
                {
                    "date": 1745522393475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -157,8 +157,39 @@\n     const recTermino = Date.parse(rec.termino);\r\n     return plataformasSelecionadas.includes(rec.plataformaId) && recTermino < hojeTimestamp;\r\n   });\r\n \r\n+// quantos cards por página\r\n+const pageSize = 2;\r\n+\r\n+// controle de página atual\r\n+const [pageAtivas, setPageAtivas] = useState(0);\r\n+const [pageHistorico, setPageHistorico] = useState(0);\r\n+\r\n+// quantas páginas existem\r\n+const pageCountAtivas = Math.ceil(recargasAtivas.length / pageSize);\r\n+const pageCountHistorico = Math.ceil(recargasHistorico.length / pageSize);\r\n+\r\n+// fatias paginadas\r\n+const atuaisPag = useMemo(\r\n+  () =>\r\n+    recargasAtivas.slice(\r\n+      pageAtivas * pageSize,\r\n+      pageAtivas * pageSize + pageSize\r\n+    ),\r\n+  [recargasAtivas, pageAtivas]\r\n+);\r\n+const historicoPag = useMemo(\r\n+  () =>\r\n+    recargasHistorico.slice(\r\n+      pageHistorico * pageSize,\r\n+      pageHistorico * pageSize + pageSize\r\n+    ),\r\n+  [recargasHistorico, pageHistorico]\r\n+);\r\n+\r\n+\r\n+\r\n   useEffect(() => {\r\n     const username = influenciador?.instagram?.replace(/\\/$/, \"\").split(\"/\").pop()?.replace(\"@\", \"\");\r\n     if (!username) return;\r\n \r\n@@ -178,31 +209,8 @@\n const fallbackImage = `https://ui-avatars.com/api/?name=${encodeURIComponent(\r\n   influenciador.nome\r\n )}&background=random&color=fff`;\r\n \r\n-const pageSize = 2  // quantos cards por página\r\n-const [pageAtivas, setPageAtivas] = useState(0)\r\n-const [pageHistorico, setPageHistorico] = useState(0)\r\n-\r\n-const pageCountAtivas = Math.ceil(recargasAtivas.length / pageSize)\r\n-const pageCountHistorico = Math.ceil(recargasHistorico.length / pageSize)\r\n-const atuaisPag = useMemo(\r\n-  () =>\r\n-    recargasAtivas.slice(\r\n-      pageAtivas * pageSize,\r\n-      pageAtivas * pageSize + pageSize\r\n-    ),\r\n-  [recargasAtivas, pageAtivas]\r\n-)\r\n-\r\n-const historicoPag = useMemo(\r\n-  () =>\r\n-    recargasHistorico.slice(\r\n-      pageHistorico * pageSize,\r\n-      pageHistorico * pageSize + pageSize\r\n-    ),\r\n-  [recargasHistorico, pageHistorico]\r\n-)\r\n   return (\r\n     <>\r\n     <Dialog open={open} onOpenChange={handleCloseAndUpdate}>\r\n       <DialogContent size=\"full\">\r\n"
                },
                {
                    "date": 1745522453197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,8 @@\n   SelectItem,\r\n   SelectTrigger,\r\n   SelectValue,\r\n } from \"@/components/ui/select\";\r\n-import { ScrollArea } from \"@/components/ui/scroll-area\";\r\n import {\r\n   Tabs,\r\n   TabsContent,\r\n   TabsList,\r\n"
                },
                {
                    "date": 1745522590518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -155,9 +155,16 @@\n   const recargasHistorico = influenciador.recargas.filter((rec) => {\r\n     const recTermino = Date.parse(rec.termino);\r\n     return plataformasSelecionadas.includes(rec.plataformaId) && recTermino < hojeTimestamp;\r\n   });\r\n+  useEffect(() => {\r\n+    setPageAtivas(0);\r\n+  }, [recargasAtivas]);\r\n \r\n+  useEffect(() => {\r\n+    setPageHistorico(0);\r\n+  }, [recargasHistorico]);\r\n+\r\n // quantos cards por página\r\n const pageSize = 2;\r\n \r\n // controle de página atual\r\n"
                },
                {
                    "date": 1745522622717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -347,15 +347,12 @@\n   ) : (\r\n     <>\r\n       {/* container fixo, sem scroll */}\r\n       <div className=\"h-[450px] overflow-hidden\">\r\n-        {atuaisPag.map((rec, idx) =>\r\n-          // você pode garantir altura fixa no card:\r\n-          <div key={idx} className=\"border border-muted rounded-md m-2 p-4 space-y-3 h-40\">\r\n-            {renderRecargaCard(rec, idx)}\r\n-          </div>\r\n-        )}\r\n-      </div>\r\n+    {atuaisPag.map((rec, idx) =>\r\n+      renderRecargaCard(rec, idx)\r\n+    )}\r\n+  </div\r\n \r\n       {/* controles de paginação */}\r\n       <div className=\"flex items-center justify-center gap-2 py-4\">\r\n         <Button\r\n"
                },
                {
                    "date": 1745522628814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -350,9 +350,9 @@\n       <div className=\"h-[450px] overflow-hidden\">\r\n     {atuaisPag.map((rec, idx) =>\r\n       renderRecargaCard(rec, idx)\r\n     )}\r\n-  </div\r\n+  </div>\r\n \r\n       {/* controles de paginação */}\r\n       <div className=\"flex items-center justify-center gap-2 py-4\">\r\n         <Button\r\n"
                },
                {
                    "date": 1745522796142,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -400,12 +400,10 @@\n   ) : (\r\n     <>\r\n       <div className=\"h-[450px] overflow-hidden\">\r\n         {historicoPag.map((rec, idx) =>\r\n-          <div key={idx} className=\"border border-muted rounded-md m-2 p-4 space-y-3 h-40\">\r\n-            {renderRecargaCard(rec, idx)}\r\n-          </div>\r\n-        )}\r\n+            renderRecargaCard(rec, idx)\r\n+          )}\r\n       </div>\r\n \r\n       <div className=\"flex items-center justify-center gap-2 py-4\">\r\n         <Button\r\n@@ -491,9 +489,9 @@\n         ? \"bg-green-500 text-white\"\r\n         : \"bg-yellow-400 text-yellow-900\";\r\n \r\n     return (\r\n-      <div key={index} className=\"border border-muted rounded-md m-2 p-4 space-y-3\">\r\n+      <div key={index} className=\"border border-muted rounded-md m-2 p-4 space-y-3 h-40\">\r\n         <div className=\"flex items-center justify-between\">\r\n           <div className=\"flex items-center gap-\">\r\n             {plataforma?.imagem && (\r\n               <Image src={plataforma.imagem} alt={plataforma.nome} width={64} height={32} className=\"\" />\r\n"
                },
                {
                    "date": 1745522889729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -155,8 +155,36 @@\n   const recargasHistorico = influenciador.recargas.filter((rec) => {\r\n     const recTermino = Date.parse(rec.termino);\r\n     return plataformasSelecionadas.includes(rec.plataformaId) && recTermino < hojeTimestamp;\r\n   });\r\n+  const pageSize = 2;\r\n+\r\n+  // controle de página atual\r\n+  const [pageAtivas, setPageAtivas] = useState(0);\r\n+  const [pageHistorico, setPageHistorico] = useState(0);\r\n+  \r\n+  // quantas páginas existem\r\n+  const pageCountAtivas = Math.ceil(recargasAtivas.length / pageSize);\r\n+  const pageCountHistorico = Math.ceil(recargasHistorico.length / pageSize);\r\n+  \r\n+  // fatias paginadas\r\n+  const atuaisPag = useMemo(\r\n+    () =>\r\n+      recargasAtivas.slice(\r\n+        pageAtivas * pageSize,\r\n+        pageAtivas * pageSize + pageSize\r\n+      ),\r\n+    [recargasAtivas, pageAtivas]\r\n+  );\r\n+  const historicoPag = useMemo(\r\n+    () =>\r\n+      recargasHistorico.slice(\r\n+        pageHistorico * pageSize,\r\n+        pageHistorico * pageSize + pageSize\r\n+      ),\r\n+    [recargasHistorico, pageHistorico]\r\n+  );\r\n+\r\n   useEffect(() => {\r\n     setPageAtivas(0);\r\n   }, [recargasAtivas]);\r\n \r\n@@ -164,38 +192,12 @@\n     setPageHistorico(0);\r\n   }, [recargasHistorico]);\r\n \r\n // quantos cards por página\r\n-const pageSize = 2;\r\n \r\n-// controle de página atual\r\n-const [pageAtivas, setPageAtivas] = useState(0);\r\n-const [pageHistorico, setPageHistorico] = useState(0);\r\n \r\n-// quantas páginas existem\r\n-const pageCountAtivas = Math.ceil(recargasAtivas.length / pageSize);\r\n-const pageCountHistorico = Math.ceil(recargasHistorico.length / pageSize);\r\n \r\n-// fatias paginadas\r\n-const atuaisPag = useMemo(\r\n-  () =>\r\n-    recargasAtivas.slice(\r\n-      pageAtivas * pageSize,\r\n-      pageAtivas * pageSize + pageSize\r\n-    ),\r\n-  [recargasAtivas, pageAtivas]\r\n-);\r\n-const historicoPag = useMemo(\r\n-  () =>\r\n-    recargasHistorico.slice(\r\n-      pageHistorico * pageSize,\r\n-      pageHistorico * pageSize + pageSize\r\n-    ),\r\n-  [recargasHistorico, pageHistorico]\r\n-);\r\n \r\n-\r\n-\r\n   useEffect(() => {\r\n     const username = influenciador?.instagram?.replace(/\\/$/, \"\").split(\"/\").pop()?.replace(\"@\", \"\");\r\n     if (!username) return;\r\n \r\n"
                },
                {
                    "date": 1745522933979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -155,49 +155,49 @@\n   const recargasHistorico = influenciador.recargas.filter((rec) => {\r\n     const recTermino = Date.parse(rec.termino);\r\n     return plataformasSelecionadas.includes(rec.plataformaId) && recTermino < hojeTimestamp;\r\n   });\r\n-  const pageSize = 2;\r\n+// —————— A PARTIR DAQUI ——————\r\n+// quantos cards por página\r\n+const pageSize = 2;\r\n \r\n-  // controle de página atual\r\n-  const [pageAtivas, setPageAtivas] = useState(0);\r\n-  const [pageHistorico, setPageHistorico] = useState(0);\r\n-  \r\n-  // quantas páginas existem\r\n-  const pageCountAtivas = Math.ceil(recargasAtivas.length / pageSize);\r\n-  const pageCountHistorico = Math.ceil(recargasHistorico.length / pageSize);\r\n-  \r\n-  // fatias paginadas\r\n-  const atuaisPag = useMemo(\r\n-    () =>\r\n-      recargasAtivas.slice(\r\n-        pageAtivas * pageSize,\r\n-        pageAtivas * pageSize + pageSize\r\n-      ),\r\n-    [recargasAtivas, pageAtivas]\r\n-  );\r\n-  const historicoPag = useMemo(\r\n-    () =>\r\n-      recargasHistorico.slice(\r\n-        pageHistorico * pageSize,\r\n-        pageHistorico * pageSize + pageSize\r\n-      ),\r\n-    [recargasHistorico, pageHistorico]\r\n-  );\r\n+// controle de página atual\r\n+const [pageAtivas, setPageAtivas] = useState(0);\r\n+const [pageHistorico, setPageHistorico] = useState(0);\r\n \r\n-  useEffect(() => {\r\n-    setPageAtivas(0);\r\n-  }, [recargasAtivas]);\r\n+// quantas páginas existem\r\n+const pageCountAtivas = Math.ceil(recargasAtivas.length / pageSize);\r\n+const pageCountHistorico = Math.ceil(recargasHistorico.length / pageSize);\r\n \r\n-  useEffect(() => {\r\n-    setPageHistorico(0);\r\n-  }, [recargasHistorico]);\r\n+// fatias paginadas\r\n+const atuaisPag = useMemo(() =>\r\n+  recargasAtivas.slice(\r\n+    pageAtivas * pageSize,\r\n+    pageAtivas * pageSize + pageSize\r\n+  ),\r\n+  [recargasAtivas, pageAtivas]\r\n+);\r\n+const historicoPag = useMemo(() =>\r\n+  recargasHistorico.slice(\r\n+    pageHistorico * pageSize,\r\n+    pageHistorico * pageSize + pageSize\r\n+  ),\r\n+  [recargasHistorico, pageHistorico]\r\n+);\r\n+// —————— ATÉ AQUI ——————\r\n \r\n-// quantos cards por página\r\n+// agora sim você pode resetar\r\n+useEffect(() => {\r\n+  setPageAtivas(0);\r\n+}, [recargasAtivas]);\r\n \r\n+useEffect(() => {\r\n+  setPageHistorico(0);\r\n+}, [recargasHistorico]);\r\n \r\n \r\n \r\n+\r\n   useEffect(() => {\r\n     const username = influenciador?.instagram?.replace(/\\/$/, \"\").split(\"/\").pop()?.replace(\"@\", \"\");\r\n     if (!username) return;\r\n \r\n"
                },
                {
                    "date": 1745522997436,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -187,13 +187,13 @@\n \r\n // agora sim você pode resetar\r\n useEffect(() => {\r\n   setPageAtivas(0);\r\n-}, [recargasAtivas]);\r\n+}, [recargasAtivas.length]);\r\n \r\n useEffect(() => {\r\n   setPageHistorico(0);\r\n-}, [recargasHistorico]);\r\n+}, [recargasHistorico.length]);\r\n \r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1745523121947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -250,27 +250,27 @@\n               </div>\r\n               <div className=\"grid grid-cols-2 flex gap-2\">\r\n                 <div className=\"space-y-1.5\">\r\n                   <Label htmlFor=\"nome\">Nome do Blogueiro</Label>\r\n-                  <Input id=\"nome\" defaultValue={influenciador.nome} />\r\n+                  <Input id=\"nome\" value={influenciador.nome} />\r\n                 </div>\r\n                 <div className=\"space-y-1.5\">\r\n                   <Label htmlFor=\"instagram\">Instagram</Label>\r\n                   <InputGroup>\r\n                   <InputGroupText>@</InputGroupText>\r\n-                    <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n+                    <Input id=\"instagram\" value={influenciador.instagram} />\r\n                     </InputGroup>\r\n                 </div>\r\n               </div>\r\n             </div>\r\n             <div className=\"grid grid-cols-[57%_1fr] flex gap-2\">\r\n             <div className=\"space-y-1.5\">\r\n               <Label htmlFor=\"cpf\">CPF</Label>\r\n-              <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n+              <Input id=\"cpf\" value={influenciador.cpf} />\r\n             </div>\r\n             <div className=\"space-y-1.5\">\r\n               <Label htmlFor=\"cpf\">Chave Pix</Label>\r\n-              <Input id=\"chavepix\" defaultValue={influenciador.cpf} />\r\n+              <Input id=\"chavepix\" value={influenciador.cpf} />\r\n             </div>\r\n             </div>\r\n             <div className=\"space-y-1.5\">\r\n               <Label>Data de Cadastro</Label>\r\n@@ -505,44 +505,44 @@\n   <div className=\"space-y-1.5\">\r\n     <Label>Meta</Label>\r\n     <InputGroup>\r\n       <InputGroupText>R$</InputGroupText>\r\n-      <Input type=\"number\" defaultValue={rec.meta} />\r\n+      <Input type=\"number\" value={rec.meta} />\r\n     </InputGroup>\r\n   </div>\r\n \r\n   <div className=\"space-y-1.5\">\r\n     <Label>Atingido</Label>\r\n     <InputGroup>\r\n       <InputGroupText>R$</InputGroupText>\r\n-      <Input type=\"number\" defaultValue={rec.atingido} />\r\n+      <Input type=\"number\" value={rec.atingido} />\r\n     </InputGroup>\r\n   </div>\r\n \r\n   <div className=\"space-y-1.5\">\r\n     <Label>Reembolso</Label>\r\n     <InputGroup>\r\n       <InputGroupText>R$</InputGroupText>\r\n-      <Input type=\"number\" defaultValue={rec.reembolso} />\r\n+      <Input type=\"number\" value={rec.reembolso} />\r\n     </InputGroup>\r\n   </div>\r\n \r\n   <div className=\"space-y-1.5\">\r\n     <Label>Salário</Label>\r\n     <InputGroup>\r\n       <InputGroupText>R$</InputGroupText>\r\n-      <Input type=\"number\" defaultValue={rec.salario} />\r\n+      <Input type=\"number\" value={rec.salario} />\r\n     </InputGroup>\r\n   </div>\r\n \r\n   <div className=\"space-y-1.5\">\r\n     <Label>Início</Label>\r\n-    <Input type=\"date\" defaultValue={rec.inicio} />\r\n+    <Input type=\"date\" value={rec.inicio} />\r\n   </div>\r\n \r\n   <div className=\"space-y-1.5\">\r\n     <Label>Término</Label>\r\n-    <Input type=\"date\" defaultValue={rec.termino} />\r\n+    <Input type=\"date\" value={rec.termino} />\r\n   </div>\r\n </div>\r\n       </div>\r\n     );\r\n"
                }
            ],
            "date": 1745343733644,
            "name": "Commit-0",
            "content": "\"use client\";\r\n\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport {\r\n  Select as ShadSelect,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/ui/select\";\r\nimport { plataformas } from \"@/lib/data\";\r\nimport Image from \"next/image\";\r\nimport { Influenciador } from \"@/lib/influenciadores\";\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { Pencil } from \"lucide-react\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport { components, OptionProps, GroupBase } from \"react-select\";\r\nimport { AlertCircle } from \"lucide-react\";\r\nimport { Dialog as InnerDialog, DialogContent as InnerContent } from \"@/components/ui/dialog\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\n\r\n\r\ninterface OptionType {\r\n  value: string;\r\n  label: string;\r\n  icon?: string; // futuro uso\r\n}\r\n\r\ntype Props = {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    influenciador: Influenciador | null;\r\n    onUpdate?: (updated: Influenciador) => void;\r\n  };\r\n\r\n  const InfluenciadorModal = ({ open, onClose, influenciador, onUpdate }: Props) => {\r\n    if (!influenciador) return null;\r\n\r\n  const [plataformasSelecionadas, setPlataformasSelecionadas] = useState<string[]>(\r\n    influenciador.relacoes.map((rel) => rel.plataformaId)\r\n  );\r\n\r\n  const platformOptions: OptionType[] = plataformas.map((p) => ({\r\n    value: p.id,\r\n    label: p.nome,\r\n  }));\r\n\r\n  const selectedOptions = platformOptions.filter((opt) =>\r\n    plataformasSelecionadas.includes(opt.value)\r\n  );\r\n\r\n  const [previewImage, setPreviewImage] = useState(influenciador.imagem);\r\n  const inputFileRef = useRef<HTMLInputElement>(null);\r\n\r\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setPreviewImage(reader.result as string);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n  // Estado novo\r\nconst [status, setStatus] = useState(influenciador.status);\r\nconst [motivoBanimento, setMotivoBanimento] = useState(influenciador.motivoBanimento || \"\");\r\nconst [openMotivo, setOpenMotivo] = useState(false);\r\n\r\n// Abre automaticamente se o status for alterado para \"banido\"\r\nuseEffect(() => {\r\n  if (status === \"banido\") {\r\n    setOpenMotivo(true);\r\n  }\r\n}, [status]);\r\nconst handleCloseAndUpdate = (openState: boolean) => {\r\n    if (!openState) {\r\n      if (!influenciador) return;\r\n  \r\n      const updated: Influenciador = {\r\n        ...influenciador,\r\n        status,\r\n        motivoBanimento,\r\n        imagem: previewImage,\r\n        relacoes: influenciador.relacoes,\r\n      };\r\n  \r\n      onUpdate?.(updated);\r\n      onClose(); // fecha modal\r\n    }\r\n  };\r\n  return (\r\n<Dialog open={open} onOpenChange={handleCloseAndUpdate}>\r\n<DialogContent size=\"full\">\r\n        <DialogHeader>\r\n          <DialogTitle>Editar Influenciador</DialogTitle>\r\n        </DialogHeader>\r\n\r\n        <div className=\"grid grid-cols-[35%_1fr] gap-8\">\r\n          {/* 🔹 Coluna Esquerda */}\r\n          <div className=\"space-y-4\">\r\n            {/* Imagem + Nome/Instagram */}\r\n            <div className=\"grid grid-cols-[auto_1fr] gap-4 items-start\">\r\n              <div className=\"relative w-24 h-24 group\">\r\n                <Image\r\n                  src={previewImage || \"/images/avatar/avatar-default.png\"}\r\n                  alt={influenciador.nome}\r\n                  fill\r\n                  className=\"rounded-full object-cover border\"\r\n                />\r\n                <div\r\n                  className=\"absolute inset-0 bg-black/50 rounded-full opacity-0 group-hover:opacity-100 flex items-center justify-center cursor-pointer transition\"\r\n                  onClick={() => inputFileRef.current?.click()}\r\n                >\r\n                  <Pencil className=\"text-white w-5 h-5\" />\r\n                </div>\r\n                <input\r\n                  ref={inputFileRef}\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  onChange={handleImageChange}\r\n                  className=\"hidden\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"space-y-4\">\r\n                <div className=\"space-y-1.5\">\r\n                  <Label htmlFor=\"nome\">Nome</Label>\r\n                  <Input id=\"nome\" defaultValue={influenciador.nome} />\r\n                </div>\r\n                <div className=\"space-y-1.5\">\r\n                  <Label htmlFor=\"instagram\">Instagram</Label>\r\n                  <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Campos adicionais */}\r\n            <div className=\"space-y-1.5\">\r\n              <Label htmlFor=\"cpf\">CPF</Label>\r\n              <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n            </div>\r\n\r\n            <div className=\"space-y-1.5\">\r\n              <Label>Data de Cadastro</Label>\r\n              <Input value={influenciador.dataCadastro} readOnly />\r\n            </div>\r\n\r\n            <div className=\"space-y-1.5\">\r\n  <Label>Status</Label>\r\n  <div className=\"flex items-center gap-2\">\r\n    <div className=\"w-[70%]\">\r\n      <ShadSelect defaultValue={status} onValueChange={setStatus}>\r\n        <SelectTrigger>\r\n          <SelectValue placeholder=\"Selecione o status\" />\r\n        </SelectTrigger>\r\n        <SelectContent>\r\n          <SelectItem value=\"lead\">Lead</SelectItem>\r\n          <SelectItem value=\"contato\">Em contato</SelectItem>\r\n          <SelectItem value=\"negociacao\">Em negociação</SelectItem>\r\n          <SelectItem value=\"ativo\">Ativo</SelectItem>\r\n          <SelectItem value=\"banido\">Banido</SelectItem>\r\n        </SelectContent>\r\n      </ShadSelect>\r\n    </div>\r\n\r\n    {status === \"banido\" && (\r\n      <Button\r\n        type=\"button\"\r\n        onClick={() => setOpenMotivo(true)}\r\n        variant=\"ghost\"\r\n        className=\"w-[30%] text-xs px-2 py-1 border border-destructive text-destructive hover:bg-destructive hover:text-white transition\"\r\n>\r\n        <AlertCircle className=\"w-4 h-4 mr-1\" />\r\n        Motivo\r\n      </Button>\r\n    )}\r\n  </div>\r\n</div>\r\n\r\n{/* Modal interno para motivo do banimento */}\r\n<InnerDialog open={openMotivo} onOpenChange={setOpenMotivo}>\r\n  <InnerContent>\r\n    <div className=\"space-y-2\">\r\n      <Label>Motivo do Banimento</Label>\r\n      <Textarea\r\n        placeholder=\"Descreva o motivo...\"\r\n        value={motivoBanimento}\r\n        onChange={(e) => setMotivoBanimento(e.target.value)}\r\n      />\r\n    </div>\r\n  </InnerContent>\r\n</InnerDialog>\r\n\r\n            {/* Novo campo com react-select estilizado */}\r\n            <div className=\"space-y-1.5\">\r\n              <Label>Plataformas Ativas</Label>\r\n              <Select\r\n                isMulti\r\n                closeMenuOnSelect={false}\r\n                components={makeAnimated()}\r\n                options={platformOptions}\r\n                value={selectedOptions}\r\n                onChange={(selected) =>\r\n                  setPlataformasSelecionadas(selected.map((opt) => opt.value))\r\n                }\r\n                className=\"react-select\"\r\n                classNamePrefix=\"select\"\r\n                styles={{\r\n                  option: (provided) => ({ ...provided, fontSize: \"14px\" }),\r\n                  multiValueLabel: (base) => ({ ...base, fontWeight: 500 }),\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* 🔸 Coluna Direita - Plataformas */}\r\n          <ScrollArea className=\"max-h-[450px] pr-2\">\r\n            <div className=\"flex flex-col gap-4\">\r\n              {influenciador.relacoes\r\n                .filter((rel) => plataformasSelecionadas.includes(rel.plataformaId))\r\n                .map((rel) => {\r\n                  const plataforma = plataformas.find((p) => p.id === rel.plataformaId);\r\n\r\n                  const statusLabel =\r\n                    rel.meta === 0 && rel.atingido === 0\r\n                      ? \"Meta indefinida\"\r\n                      : rel.atingido >= rel.meta\r\n                      ? \"Meta Batida\"\r\n                      : \"Meta Pendente\";\r\n\r\n                  const statusClass =\r\n                    rel.meta === 0 && rel.atingido === 0\r\n                      ? \"bg-muted text-muted-foreground\"\r\n                      : rel.atingido >= rel.meta\r\n                      ? \"bg-green-500 text-white\"\r\n                      : \"bg-yellow-400 text-yellow-900\";\r\n\r\n                  return (\r\n                    <div\r\n                      key={rel.plataformaId}\r\n                      className=\"border border-muted rounded-md p-4 space-y-3\"\r\n                    >\r\n                      {/* 🔹 Logo e status */}\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <div className=\"flex items-center gap-2\">\r\n                          {plataforma?.imagem && (\r\n                            <Image\r\n                              src={plataforma.imagem}\r\n                              alt={plataforma.nome}\r\n                              width={40}\r\n                              height={40}\r\n                              className=\"rounded\"\r\n                            />\r\n                          )}\r\n                        </div>\r\n                        <div\r\n                          className={`px-3 py-1 rounded-full text-xs font-medium whitespace-nowrap ${statusClass}`}\r\n                        >\r\n                          {statusLabel}\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* 🔸 Campos */}\r\n                      <div className=\"grid grid-cols-3 gap-4 text-sm\">\r\n                        <div className=\"space-y-1.5\">\r\n                          <Label>Meta</Label>\r\n                          <Input type=\"number\" defaultValue={rel.meta} />\r\n                        </div>\r\n                        <div className=\"space-y-1.5\">\r\n                          <Label>Atingido</Label>\r\n                          <Input type=\"number\" defaultValue={rel.atingido} />\r\n                        </div>\r\n                        <div className=\"space-y-1.5\">\r\n                          <Label>Reembolso</Label>\r\n                          <Input type=\"number\" defaultValue={rel.reembolso} />\r\n                        </div>\r\n                        <div className=\"space-y-1.5\">\r\n                          <Label>Salário (R$)</Label>\r\n                          <Input type=\"number\" defaultValue={rel.salario} />\r\n                        </div>\r\n                        <div className=\"space-y-1.5\">\r\n                          <Label>Início</Label>\r\n                          <Input type=\"date\" defaultValue={rel.inicio} />\r\n                        </div>\r\n                        <div className=\"space-y-1.5\">\r\n                          <Label>Término</Label>\r\n                          <Input type=\"date\" defaultValue={rel.fim} />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n          </ScrollArea>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default InfluenciadorModal;\r\n"
        }
    ]
}