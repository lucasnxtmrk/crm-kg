{
    "sourceFile": "components/InfluenciadorModal.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1745343733644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1745343733644,
            "name": "Commit-0",
            "content": "\"use client\";\r\n\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport {\r\n  Select as ShadSelect,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/ui/select\";\r\nimport { plataformas } from \"@/lib/data\";\r\nimport Image from \"next/image\";\r\nimport { Influenciador } from \"@/lib/influenciadores\";\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { Pencil } from \"lucide-react\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport { components, OptionProps, GroupBase } from \"react-select\";\r\nimport { AlertCircle } from \"lucide-react\";\r\nimport { Dialog as InnerDialog, DialogContent as InnerContent } from \"@/components/ui/dialog\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\n\r\n\r\ninterface OptionType {\r\n  value: string;\r\n  label: string;\r\n  icon?: string; // futuro uso\r\n}\r\n\r\ntype Props = {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    influenciador: Influenciador | null;\r\n    onUpdate?: (updated: Influenciador) => void;\r\n  };\r\n\r\n  const InfluenciadorModal = ({ open, onClose, influenciador, onUpdate }: Props) => {\r\n    if (!influenciador) return null;\r\n\r\n  const [plataformasSelecionadas, setPlataformasSelecionadas] = useState<string[]>(\r\n    influenciador.relacoes.map((rel) => rel.plataformaId)\r\n  );\r\n\r\n  const platformOptions: OptionType[] = plataformas.map((p) => ({\r\n    value: p.id,\r\n    label: p.nome,\r\n  }));\r\n\r\n  const selectedOptions = platformOptions.filter((opt) =>\r\n    plataformasSelecionadas.includes(opt.value)\r\n  );\r\n\r\n  const [previewImage, setPreviewImage] = useState(influenciador.imagem);\r\n  const inputFileRef = useRef<HTMLInputElement>(null);\r\n\r\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setPreviewImage(reader.result as string);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n  // Estado novo\r\nconst [status, setStatus] = useState(influenciador.status);\r\nconst [motivoBanimento, setMotivoBanimento] = useState(influenciador.motivoBanimento || \"\");\r\nconst [openMotivo, setOpenMotivo] = useState(false);\r\n\r\n// Abre automaticamente se o status for alterado para \"banido\"\r\nuseEffect(() => {\r\n  if (status === \"banido\") {\r\n    setOpenMotivo(true);\r\n  }\r\n}, [status]);\r\nconst handleCloseAndUpdate = (openState: boolean) => {\r\n    if (!openState) {\r\n      if (!influenciador) return;\r\n  \r\n      const updated: Influenciador = {\r\n        ...influenciador,\r\n        status,\r\n        motivoBanimento,\r\n        imagem: previewImage,\r\n        relacoes: influenciador.relacoes,\r\n      };\r\n  \r\n      onUpdate?.(updated);\r\n      onClose(); // fecha modal\r\n    }\r\n  };\r\n  return (\r\n<Dialog open={open} onOpenChange={handleCloseAndUpdate}>\r\n<DialogContent size=\"full\">\r\n        <DialogHeader>\r\n          <DialogTitle>Editar Influenciador</DialogTitle>\r\n        </DialogHeader>\r\n\r\n        <div className=\"grid grid-cols-[35%_1fr] gap-8\">\r\n          {/* ðŸ”¹ Coluna Esquerda */}\r\n          <div className=\"space-y-4\">\r\n            {/* Imagem + Nome/Instagram */}\r\n            <div className=\"grid grid-cols-[auto_1fr] gap-4 items-start\">\r\n              <div className=\"relative w-24 h-24 group\">\r\n                <Image\r\n                  src={previewImage || \"/images/avatar/avatar-default.png\"}\r\n                  alt={influenciador.nome}\r\n                  fill\r\n                  className=\"rounded-full object-cover border\"\r\n                />\r\n                <div\r\n                  className=\"absolute inset-0 bg-black/50 rounded-full opacity-0 group-hover:opacity-100 flex items-center justify-center cursor-pointer transition\"\r\n                  onClick={() => inputFileRef.current?.click()}\r\n                >\r\n                  <Pencil className=\"text-white w-5 h-5\" />\r\n                </div>\r\n                <input\r\n                  ref={inputFileRef}\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  onChange={handleImageChange}\r\n                  className=\"hidden\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"space-y-4\">\r\n                <div className=\"space-y-1.5\">\r\n                  <Label htmlFor=\"nome\">Nome</Label>\r\n                  <Input id=\"nome\" defaultValue={influenciador.nome} />\r\n                </div>\r\n                <div className=\"space-y-1.5\">\r\n                  <Label htmlFor=\"instagram\">Instagram</Label>\r\n                  <Input id=\"instagram\" defaultValue={influenciador.instagram} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Campos adicionais */}\r\n            <div className=\"space-y-1.5\">\r\n              <Label htmlFor=\"cpf\">CPF</Label>\r\n              <Input id=\"cpf\" defaultValue={influenciador.cpf} />\r\n            </div>\r\n\r\n            <div className=\"space-y-1.5\">\r\n              <Label>Data de Cadastro</Label>\r\n              <Input value={influenciador.dataCadastro} readOnly />\r\n            </div>\r\n\r\n            <div className=\"space-y-1.5\">\r\n  <Label>Status</Label>\r\n  <div className=\"flex items-center gap-2\">\r\n    <div className=\"w-[70%]\">\r\n      <ShadSelect defaultValue={status} onValueChange={setStatus}>\r\n        <SelectTrigger>\r\n          <SelectValue placeholder=\"Selecione o status\" />\r\n        </SelectTrigger>\r\n        <SelectContent>\r\n          <SelectItem value=\"lead\">Lead</SelectItem>\r\n          <SelectItem value=\"contato\">Em contato</SelectItem>\r\n          <SelectItem value=\"negociacao\">Em negociaÃ§Ã£o</SelectItem>\r\n          <SelectItem value=\"ativo\">Ativo</SelectItem>\r\n          <SelectItem value=\"banido\">Banido</SelectItem>\r\n        </SelectContent>\r\n      </ShadSelect>\r\n    </div>\r\n\r\n    {status === \"banido\" && (\r\n      <Button\r\n        type=\"button\"\r\n        onClick={() => setOpenMotivo(true)}\r\n        variant=\"ghost\"\r\n        className=\"w-[30%] text-xs px-2 py-1 border border-destructive text-destructive hover:bg-destructive hover:text-white transition\"\r\n>\r\n        <AlertCircle className=\"w-4 h-4 mr-1\" />\r\n        Motivo\r\n      </Button>\r\n    )}\r\n  </div>\r\n</div>\r\n\r\n{/* Modal interno para motivo do banimento */}\r\n<InnerDialog open={openMotivo} onOpenChange={setOpenMotivo}>\r\n  <InnerContent>\r\n    <div className=\"space-y-2\">\r\n      <Label>Motivo do Banimento</Label>\r\n      <Textarea\r\n        placeholder=\"Descreva o motivo...\"\r\n        value={motivoBanimento}\r\n        onChange={(e) => setMotivoBanimento(e.target.value)}\r\n      />\r\n    </div>\r\n  </InnerContent>\r\n</InnerDialog>\r\n\r\n            {/* Novo campo com react-select estilizado */}\r\n            <div className=\"space-y-1.5\">\r\n              <Label>Plataformas Ativas</Label>\r\n              <Select\r\n                isMulti\r\n                closeMenuOnSelect={false}\r\n                components={makeAnimated()}\r\n                options={platformOptions}\r\n                value={selectedOptions}\r\n                onChange={(selected) =>\r\n                  setPlataformasSelecionadas(selected.map((opt) => opt.value))\r\n                }\r\n                className=\"react-select\"\r\n                classNamePrefix=\"select\"\r\n                styles={{\r\n                  option: (provided) => ({ ...provided, fontSize: \"14px\" }),\r\n                  multiValueLabel: (base) => ({ ...base, fontWeight: 500 }),\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* ðŸ”¸ Coluna Direita - Plataformas */}\r\n          <ScrollArea className=\"max-h-[450px] pr-2\">\r\n            <div className=\"flex flex-col gap-4\">\r\n              {influenciador.relacoes\r\n                .filter((rel) => plataformasSelecionadas.includes(rel.plataformaId))\r\n                .map((rel) => {\r\n                  const plataforma = plataformas.find((p) => p.id === rel.plataformaId);\r\n\r\n                  const statusLabel =\r\n                    rel.meta === 0 && rel.atingido === 0\r\n                      ? \"Meta indefinida\"\r\n                      : rel.atingido >= rel.meta\r\n                      ? \"Meta Batida\"\r\n                      : \"Meta Pendente\";\r\n\r\n                  const statusClass =\r\n                    rel.meta === 0 && rel.atingido === 0\r\n                      ? \"bg-muted text-muted-foreground\"\r\n                      : rel.atingido >= rel.meta\r\n                      ? \"bg-green-500 text-white\"\r\n                      : \"bg-yellow-400 text-yellow-900\";\r\n\r\n                  return (\r\n                    <div\r\n                      key={rel.plataformaId}\r\n                      className=\"border border-muted rounded-md p-4 space-y-3\"\r\n                    >\r\n                      {/* ðŸ”¹ Logo e status */}\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <div className=\"flex items-center gap-2\">\r\n                          {plataforma?.imagem && (\r\n                            <Image\r\n                              src={plataforma.imagem}\r\n                              alt={plataforma.nome}\r\n                              width={40}\r\n                              height={40}\r\n                              className=\"rounded\"\r\n                            />\r\n                          )}\r\n                        </div>\r\n                        <div\r\n                          className={`px-3 py-1 rounded-full text-xs font-medium whitespace-nowrap ${statusClass}`}\r\n                        >\r\n                          {statusLabel}\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* ðŸ”¸ Campos */}\r\n                      <div className=\"grid grid-cols-3 gap-4 text-sm\">\r\n                        <div className=\"space-y-1.5\">\r\n                          <Label>Meta</Label>\r\n                          <Input type=\"number\" defaultValue={rel.meta} />\r\n                        </div>\r\n                        <div className=\"space-y-1.5\">\r\n                          <Label>Atingido</Label>\r\n                          <Input type=\"number\" defaultValue={rel.atingido} />\r\n                        </div>\r\n                        <div className=\"space-y-1.5\">\r\n                          <Label>Reembolso</Label>\r\n                          <Input type=\"number\" defaultValue={rel.reembolso} />\r\n                        </div>\r\n                        <div className=\"space-y-1.5\">\r\n                          <Label>SalÃ¡rio (R$)</Label>\r\n                          <Input type=\"number\" defaultValue={rel.salario} />\r\n                        </div>\r\n                        <div className=\"space-y-1.5\">\r\n                          <Label>InÃ­cio</Label>\r\n                          <Input type=\"date\" defaultValue={rel.inicio} />\r\n                        </div>\r\n                        <div className=\"space-y-1.5\">\r\n                          <Label>TÃ©rmino</Label>\r\n                          <Input type=\"date\" defaultValue={rel.fim} />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n          </ScrollArea>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default InfluenciadorModal;\r\n"
        }
    ]
}