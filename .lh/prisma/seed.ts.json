{
    "sourceFile": "prisma/seed.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746573357738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746573357738,
            "name": "Commit-0",
            "content": "const { PrismaClient } = require(\"@prisma/client\");\r\nconst { faker } = require(\"@faker-js/faker\");\r\nconst { v4: uuidv4 } = require(\"uuid\");\r\n\r\nconst prisma = new PrismaClient();\r\n\r\nconst grupos = [\r\n  { id: uuidv4(), nome: \"Top Influencers\", imagem: \"/images/grupos/top1.png\" },\r\n  { id: uuidv4(), nome: \"Esportes\", imagem: \"/images/grupos/esportes.png\" },\r\n];\r\n\r\nconst plataformas = [\r\n  { id: \"genio777\", nome: \"Gênio777\", imagem: \"/images/plataformas/genio777.png\", cor: \"#3B82F6\", grupoId: grupos[0].id },\r\n  { id: \"pgcoelho\", nome: \"PG-COELHO\", imagem: \"/images/plataformas/pgcoelho.png\", cor: \"#8B5CF6\", grupoId: grupos[0].id },\r\n  { id: \"piupiu\", nome: \"PiuPiu\", imagem: \"/images/plataformas/piupiu.png\", cor: \"#22C55E\", grupoId: grupos[1].id },\r\n  { id: \"sergipeboi\", nome: \"Sergipe Boi\", imagem: \"/images/plataformas/sergipeboi.png\", cor: \"#F97316\", grupoId: grupos[1].id },\r\n];\r\n\r\nconst eventos = [\r\n  { id: uuidv4(), nome: \"Campanha Março\", plataformaIds: [\"genio777\", \"pgcoelho\"] },\r\n  { id: uuidv4(), nome: \"Campanha Abril\", plataformaIds: [\"piupiu\", \"sergipeboi\"] },\r\n];\r\n\r\nasync function main() {\r\n  console.log(\"Resetando dados...\");\r\n  await prisma.participanteEvento.deleteMany();\r\n  await prisma.salarios_mensais.deleteMany();\r\n  await prisma.recargas.deleteMany();\r\n  await prisma.cadastros_influenciadores.deleteMany();\r\n  await prisma.influenciadores.deleteMany();\r\n  await prisma.eventoPlataforma.deleteMany();\r\n  await prisma.eventos.deleteMany();\r\n  await prisma.plataformas.deleteMany();\r\n  await prisma.grupos.deleteMany();\r\n\r\n  await prisma.grupos.createMany({ data: grupos });\r\n  await prisma.plataformas.createMany({ data: plataformas });\r\n\r\n  for (const evento of eventos) {\r\n    await prisma.eventos.create({\r\n      data: {\r\n        id: evento.id,\r\n        nome: evento.nome,\r\n        data_evento: faker.date.recent(),\r\n        plataformas: {\r\n          create: evento.plataformaIds.map((pid) => ({ plataformaId: pid })),\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  for (let i = 0; i < 10; i++) {\r\n    const nome = faker.person.fullName();\r\n    const influenciador = await prisma.influenciadores.create({\r\n      data: {\r\n        id: uuidv4(),\r\n        nome,\r\n        imagem: \"/images/avatar/avatar.png\",\r\n        instagram: `@${nome.split(\" \")[0].toLowerCase()}official`,\r\n        email: faker.internet.email(),\r\n        telefone: faker.phone.number(\"## #####-####\"),\r\n        data_cadastro: faker.date.past(),\r\n        cpf: faker.string.numeric(11),\r\n        chavepix: faker.internet.email(),\r\n        status: faker.helpers.arrayElement([\"diamante\", \"ouro\", \"prata\"]),\r\n        contratado: true,\r\n        salario_fixo: faker.datatype.boolean(),\r\n      },\r\n    });\r\n\r\n    const plataforma = faker.helpers.arrayElement(plataformas);\r\n    const cadastro = await prisma.cadastros_influenciadores.create({\r\n      data: {\r\n        id: uuidv4(),\r\n        influenciador_id: influenciador.id,\r\n        plataforma_id: plataforma.id,\r\n        influenciador_plataforma_id: influenciador.instagram.replace(\"@\", \"\").toUpperCase(),\r\n      },\r\n    });\r\n\r\n    const salario = parseFloat(faker.finance.amount(1500, 3000, 2));\r\n    const meta = parseFloat(faker.finance.amount(5000, 9000, 2));\r\n    const atingido = parseFloat(faker.finance.amount(meta * 0.6, meta * 1.2, 2));\r\n\r\n    await prisma.recargas.create({\r\n      data: {\r\n        id: uuidv4(),\r\n        cadastro_id: cadastro.id,\r\n        inicio: faker.date.recent(),\r\n        termino: faker.date.soon(),\r\n        salario,\r\n        meta,\r\n        atingido,\r\n        reembolso: faker.number.int({ min: 0, max: 500 }),\r\n        depositantes_meta: faker.number.int({ min: 50, max: 100 }),\r\n        depositantes_atingido: faker.number.int({ min: 30, max: 80 }),\r\n        tipo: \"valor\",\r\n        status_meta: atingido >= meta ? \"completo\" : \"incompleto\",\r\n        reembolso_status: atingido >= meta ? \"pago\" : \"pendente\",\r\n      },\r\n    });\r\n\r\n    for (let m = 1; m <= 4; m++) {\r\n      await prisma.salarios_mensais.create({\r\n        data: {\r\n          id: uuidv4(),\r\n          influenciador_id: influenciador.id,\r\n          ano: 2025,\r\n          mes: m,\r\n          valor: faker.number.float({ min: 1800, max: 3200, precision: 0.01 }),\r\n        },\r\n      });\r\n    }\r\n\r\n    await prisma.participanteEvento.create({\r\n      data: {\r\n        id: uuidv4(),\r\n        evento_id: eventos[0].id,\r\n        influencer_id: influenciador.id,\r\n        meta: Math.floor(meta),\r\n        atingido: Math.floor(atingido),\r\n      },\r\n    });\r\n  }\r\n\r\n  console.log(\"✅ Seed completo com dados realistas!\");\r\n}\r\n\r\nmain()\r\n  .catch((e) => {\r\n    console.error(e);\r\n    process.exit(1);\r\n  })\r\n  .finally(async () => {\r\n    await prisma.$disconnect();\r\n  });\r\n"
        }
    ]
}