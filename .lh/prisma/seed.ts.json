{
    "sourceFile": "prisma/seed.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1746294985458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746295329418,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,81 +1,71 @@\n-const { PrismaClient } = require(\"@prisma/client\");\r\n-const { faker } = require(\"@faker-js/faker\");\r\n-const { v4: uuidv4 } = require(\"uuid\");\r\n+import { PrismaClient } from \"@prisma/client\";\r\n+import { faker } from \"@faker-js/faker\";\r\n+import { v4 as uuidv4 } from \"uuid\";\r\n \r\n const prisma = new PrismaClient();\r\n \r\n+const grupos = [\r\n+  { id: uuidv4(), nome: \"Top Influencers\", imagem: \"/images/grupos/top1.png\" },\r\n+  { id: uuidv4(), nome: \"Esportes\", imagem: \"/images/grupos/esportes.png\" },\r\n+];\r\n+\r\n+const plataformas = [\r\n+  { id: \"genio777\", nome: \"Gênio777\", imagem: \"/images/plataformas/genio777.png\", cor: \"#3B82F6\", grupoId: grupos[0].id },\r\n+  { id: \"pgcoelho\", nome: \"PG-COELHO\", imagem: \"/images/plataformas/pgcoelho.png\", cor: \"#8B5CF6\", grupoId: grupos[1].id },\r\n+];\r\n+\r\n+const eventos = [\r\n+  { id: uuidv4(), nome: \"Lançamento Março\", plataforma_id: \"genio777\" },\r\n+  { id: uuidv4(), nome: \"Especial Copa\", plataforma_id: \"pgcoelho\" },\r\n+];\r\n+\r\n const influenciadoresFamosos = [\r\n   { nome: \"Neymar Jr\", instagram: \"neymarjr\", imagem: \"/images/avatar/neymar.png\" },\r\n   { nome: \"Anitta\", instagram: \"anitta\", imagem: \"/images/avatar/anitta.png\" },\r\n-  { nome: \"Reginaldo Rossi\", instagram: \"reginaldorossi\", imagem: \"/images/avatar/reginaldorossi.png\" },\r\n-  { nome: \"Gusttavo Lima\", instagram: \"gusttavolima\", imagem: \"/images/avatar/gusttavolima.png\" },\r\n-  { nome: \"Gisele Bündchen\", instagram: \"giselebundchen\", imagem: \"/images/avatar/gisele.png\" },\r\n-  { nome: \"Larissa Manoela\", instagram: \"larissamanoela\", imagem: \"/images/avatar/larissa.png\" },\r\n-  { nome: \"Whindersson Nunes\", instagram: \"whinderssonnunes\", imagem: \"/images/avatar/whindersson.png\" },\r\n-  {\r\n-    nome: \"Joaquim Almeida\",\r\n-    instagram: \"exemplo_insta\",\r\n-    imagem: \"/images/avatar/exemplo.png\",\r\n-    email: \"mirella96@ig.com.br\",\r\n-    telefone: faker.phone.number(\"(##) #####-####\"),\r\n-    cpf: \"96540577080\",\r\n-    chavepix: \"davi85@gmail.com\",\r\n-    status: \"bronze\",\r\n-    motivo_banimento: \"Não cumpriu metas consecutivamente\",\r\n-    contratado: true,\r\n-    salario_fixo: true,\r\n-    data_cadastro: new Date(\"2025-03-09\")\r\n-  }\r\n ];\r\n \r\n-const plataformas = [\r\n-  { id: \"genio777\", nome: \"Gênio777\", imagem: \"/images/plataformas/genio777.png\", cor: \"#3B82F6\" },\r\n-  { id: \"pgcoelho\", nome: \"PG-COELHO\", imagem: \"/images/plataformas/pgcoelho.png\", cor: \"#8B5CF6\" },\r\n-  { id: \"piupiu\", nome: \"Piu-piu PQ\", imagem: \"/images/plataformas/piupiu.png\", cor: \"#FBBF24\" },\r\n-  { id: \"sergipeboi\", nome: \"Sergipe Boi\", imagem: \"/images/plataformas/sergipeboi.png\", cor: \"#F97316\" },\r\n-];\r\n-\r\n async function main() {\r\n-  console.log(\"Resetando banco...\");\r\n+  console.log(\"Resetando dados...\");\r\n \r\n+  await prisma.participanteEvento.deleteMany();\r\n+  await prisma.eventos.deleteMany();\r\n   await prisma.recargas.deleteMany();\r\n-  await prisma.salarios_mensais.deleteMany();\r\n   await prisma.cadastros_influenciadores.deleteMany();\r\n   await prisma.influenciadores.deleteMany();\r\n   await prisma.plataformas.deleteMany();\r\n+  await prisma.grupos.deleteMany();\r\n \r\n-  console.log(\"Criando plataformas...\");\r\n+  console.log(\"Inserindo grupos e plataformas...\");\r\n+  await prisma.grupos.createMany({ data: grupos });\r\n   await prisma.plataformas.createMany({ data: plataformas });\r\n+  await prisma.eventos.createMany({ data: eventos });\r\n \r\n-  const todasPlataformas = await prisma.plataformas.findMany();\r\n-\r\n   for (const famoso of influenciadoresFamosos) {\r\n     const novoInfluenciador = await prisma.influenciadores.create({\r\n       data: {\r\n         id: uuidv4(),\r\n         nome: famoso.nome,\r\n         imagem: famoso.imagem,\r\n         instagram: `@${famoso.instagram}`,\r\n-        email: famoso.email || faker.internet.email(),\r\n-        telefone: famoso.telefone || faker.phone.number(\"(##) #####-####\"),\r\n-        data_cadastro: famoso.data_cadastro || faker.date.recent({ days: 90 }),\r\n-        cpf: famoso.cpf || faker.number.int({ min: 10000000000, max: 99999999999 }).toString(),\r\n-        chavepix: famoso.chavepix || faker.internet.email(),\r\n-        status: famoso.status || faker.helpers.arrayElement([\"bronze\", \"prata\", \"ouro\", \"diamante\"]),\r\n-        motivo_banimento: famoso.motivo_banimento || null,\r\n-        contratado: famoso.contratado || false,\r\n-        salario_fixo: famoso.salario_fixo || false,\r\n+        email: faker.internet.email(),\r\n+        telefone: faker.phone.number(\"## #####-####\"),\r\n+        data_cadastro: faker.date.recent(),\r\n+        cpf: faker.string.numeric(11),\r\n+        chavepix: faker.internet.email(),\r\n+        status: \"ativo\",\r\n+        contratado: faker.datatype.boolean(),\r\n+        salario_fixo: faker.datatype.boolean(),\r\n       },\r\n     });\r\n \r\n-    const plataformaAleatoria = faker.helpers.arrayElement(todasPlataformas);\r\n+    const plataformaRandom = faker.helpers.arrayElement(plataformas);\r\n \r\n     const cadastro = await prisma.cadastros_influenciadores.create({\r\n       data: {\r\n         id: uuidv4(),\r\n         influenciador_id: novoInfluenciador.id,\r\n-        plataforma_id: plataformaAleatoria.id,\r\n+        plataforma_id: plataformaRandom.id,\r\n         influenciador_plataforma_id: famoso.instagram.toUpperCase(),\r\n       },\r\n     });\r\n \r\n@@ -84,34 +74,30 @@\n         id: uuidv4(),\r\n         cadastro_id: cadastro.id,\r\n         inicio: faker.date.past(),\r\n         termino: faker.date.future(),\r\n-        salario: faker.number.float({ min: 2000, max: 5000, precision: 0.01 }),\r\n-        meta: faker.number.float({ min: 3000, max: 8000, precision: 0.01 }),\r\n-        atingido: faker.number.float({ min: 1000, max: 7000, precision: 0.01 }),\r\n-        reembolso: faker.number.float({ min: 0, max: 500, precision: 0.01 }),\r\n-        depositantes_meta: faker.number.int({ min: 20, max: 100 }),\r\n-        depositantes_atingido: faker.number.int({ min: 10, max: 90 }),\r\n-        tipo: faker.helpers.arrayElement([\"valor\", \"depositantes\"]),\r\n-        status_meta: faker.helpers.arrayElement([\"completo\", \"incompleto\"]),\r\n-        reembolso_status: faker.helpers.arrayElement([\"pendente\", \"pago\"]),\r\n+        salario: 2500,\r\n+        meta: 5000,\r\n+        atingido: 3500,\r\n+        reembolso: 300,\r\n+        depositantes_meta: 80,\r\n+        depositantes_atingido: 45,\r\n+        tipo: \"valor\",\r\n+        status_meta: \"incompleto\",\r\n+        reembolso_status: \"pendente\",\r\n       },\r\n     });\r\n \r\n-    if (famoso.salario_fixo) {\r\n-      const anoAtual = new Date().getFullYear();\r\n-      for (let mes = 1; mes <= 12; mes++) {\r\n-        await prisma.salarios_mensais.create({\r\n-          data: {\r\n-            id: uuidv4(),\r\n-            influenciador_id: novoInfluenciador.id,\r\n-            ano: anoAtual,\r\n-            mes,\r\n-            valor: faker.number.float({ min: 1500, max: 2500, precision: 0.01 }),\r\n-          },\r\n-        });\r\n-      }\r\n-    }\r\n+    // Adiciona o influenciador em um evento com metas\r\n+    await prisma.participanteEvento.create({\r\n+      data: {\r\n+        id: uuidv4(),\r\n+        evento_id: eventos[0].id,\r\n+        influencer_id: novoInfluenciador.id,\r\n+        meta: 10000,\r\n+        atingido: faker.number.int({ min: 4000, max: 9000 }),\r\n+      },\r\n+    });\r\n   }\r\n \r\n   console.log(\"Seed concluído com sucesso!\");\r\n }\r\n"
                },
                {
                    "date": 1746295556211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,10 @@\n-import { PrismaClient } from \"@prisma/client\";\r\n-import { faker } from \"@faker-js/faker\";\r\n-import { v4 as uuidv4 } from \"uuid\";\r\n+// prisma/seed.ts\r\n+const { PrismaClient } = require(\"@prisma/client\");\r\n+const { faker } = require(\"@faker-js/faker\");\r\n+const { v4: uuidv4 } = require(\"uuid\");\r\n \r\n+\r\n const prisma = new PrismaClient();\r\n \r\n const grupos = [\r\n   { id: uuidv4(), nome: \"Top Influencers\", imagem: \"/images/grupos/top1.png\" },\r\n"
                },
                {
                    "date": 1746295815835,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,87 +28,87 @@\n \r\n async function main() {\r\n   console.log(\"Resetando dados...\");\r\n \r\n-  await prisma.participanteEvento.deleteMany();\r\n-  await prisma.eventos.deleteMany();\r\n-  await prisma.recargas.deleteMany();\r\n-  await prisma.cadastros_influenciadores.deleteMany();\r\n-  await prisma.influenciadores.deleteMany();\r\n-  await prisma.plataformas.deleteMany();\r\n-  await prisma.grupos.deleteMany();\r\n+//   await prisma.participanteEvento.deleteMany();\r\n+//   await prisma.eventos.deleteMany();\r\n+//   await prisma.recargas.deleteMany();\r\n+//   await prisma.cadastros_influenciadores.deleteMany();\r\n+//   await prisma.influenciadores.deleteMany();\r\n+//   await prisma.plataformas.deleteMany();\r\n+//   await prisma.grupos.deleteMany();\r\n \r\n-  console.log(\"Inserindo grupos e plataformas...\");\r\n-  await prisma.grupos.createMany({ data: grupos });\r\n-  await prisma.plataformas.createMany({ data: plataformas });\r\n-  await prisma.eventos.createMany({ data: eventos });\r\n+//   console.log(\"Inserindo grupos e plataformas...\");\r\n+//   await prisma.grupos.createMany({ data: grupos });\r\n+//   await prisma.plataformas.createMany({ data: plataformas });\r\n+//   await prisma.eventos.createMany({ data: eventos });\r\n \r\n-  for (const famoso of influenciadoresFamosos) {\r\n-    const novoInfluenciador = await prisma.influenciadores.create({\r\n-      data: {\r\n-        id: uuidv4(),\r\n-        nome: famoso.nome,\r\n-        imagem: famoso.imagem,\r\n-        instagram: `@${famoso.instagram}`,\r\n-        email: faker.internet.email(),\r\n-        telefone: faker.phone.number(\"## #####-####\"),\r\n-        data_cadastro: faker.date.recent(),\r\n-        cpf: faker.string.numeric(11),\r\n-        chavepix: faker.internet.email(),\r\n-        status: \"ativo\",\r\n-        contratado: faker.datatype.boolean(),\r\n-        salario_fixo: faker.datatype.boolean(),\r\n-      },\r\n-    });\r\n+//   for (const famoso of influenciadoresFamosos) {\r\n+//     const novoInfluenciador = await prisma.influenciadores.create({\r\n+//       data: {\r\n+//         id: uuidv4(),\r\n+//         nome: famoso.nome,\r\n+//         imagem: famoso.imagem,\r\n+//         instagram: `@${famoso.instagram}`,\r\n+//         email: faker.internet.email(),\r\n+//         telefone: faker.phone.number(\"## #####-####\"),\r\n+//         data_cadastro: faker.date.recent(),\r\n+//         cpf: faker.string.numeric(11),\r\n+//         chavepix: faker.internet.email(),\r\n+//         status: \"ativo\",\r\n+//         contratado: faker.datatype.boolean(),\r\n+//         salario_fixo: faker.datatype.boolean(),\r\n+//       },\r\n+//     });\r\n \r\n-    const plataformaRandom = faker.helpers.arrayElement(plataformas);\r\n+//     const plataformaRandom = faker.helpers.arrayElement(plataformas);\r\n \r\n-    const cadastro = await prisma.cadastros_influenciadores.create({\r\n-      data: {\r\n-        id: uuidv4(),\r\n-        influenciador_id: novoInfluenciador.id,\r\n-        plataforma_id: plataformaRandom.id,\r\n-        influenciador_plataforma_id: famoso.instagram.toUpperCase(),\r\n-      },\r\n-    });\r\n+//     const cadastro = await prisma.cadastros_influenciadores.create({\r\n+//       data: {\r\n+//         id: uuidv4(),\r\n+//         influenciador_id: novoInfluenciador.id,\r\n+//         plataforma_id: plataformaRandom.id,\r\n+//         influenciador_plataforma_id: famoso.instagram.toUpperCase(),\r\n+//       },\r\n+//     });\r\n \r\n-    await prisma.recargas.create({\r\n-      data: {\r\n-        id: uuidv4(),\r\n-        cadastro_id: cadastro.id,\r\n-        inicio: faker.date.past(),\r\n-        termino: faker.date.future(),\r\n-        salario: 2500,\r\n-        meta: 5000,\r\n-        atingido: 3500,\r\n-        reembolso: 300,\r\n-        depositantes_meta: 80,\r\n-        depositantes_atingido: 45,\r\n-        tipo: \"valor\",\r\n-        status_meta: \"incompleto\",\r\n-        reembolso_status: \"pendente\",\r\n-      },\r\n-    });\r\n+//     await prisma.recargas.create({\r\n+//       data: {\r\n+//         id: uuidv4(),\r\n+//         cadastro_id: cadastro.id,\r\n+//         inicio: faker.date.past(),\r\n+//         termino: faker.date.future(),\r\n+//         salario: 2500,\r\n+//         meta: 5000,\r\n+//         atingido: 3500,\r\n+//         reembolso: 300,\r\n+//         depositantes_meta: 80,\r\n+//         depositantes_atingido: 45,\r\n+//         tipo: \"valor\",\r\n+//         status_meta: \"incompleto\",\r\n+//         reembolso_status: \"pendente\",\r\n+//       },\r\n+//     });\r\n \r\n-    // Adiciona o influenciador em um evento com metas\r\n-    await prisma.participanteEvento.create({\r\n-      data: {\r\n-        id: uuidv4(),\r\n-        evento_id: eventos[0].id,\r\n-        influencer_id: novoInfluenciador.id,\r\n-        meta: 10000,\r\n-        atingido: faker.number.int({ min: 4000, max: 9000 }),\r\n-      },\r\n-    });\r\n-  }\r\n+//     // Adiciona o influenciador em um evento com metas\r\n+//     await prisma.participanteEvento.create({\r\n+//       data: {\r\n+//         id: uuidv4(),\r\n+//         evento_id: eventos[0].id,\r\n+//         influencer_id: novoInfluenciador.id,\r\n+//         meta: 10000,\r\n+//         atingido: faker.number.int({ min: 4000, max: 9000 }),\r\n+//       },\r\n+//     });\r\n+//   }\r\n \r\n-  console.log(\"Seed concluído com sucesso!\");\r\n-}\r\n+//   console.log(\"Seed concluído com sucesso!\");\r\n+// }\r\n \r\n-main()\r\n-  .catch((e) => {\r\n-    console.error(e);\r\n-    process.exit(1);\r\n-  })\r\n-  .finally(async () => {\r\n-    await prisma.$disconnect();\r\n-  });\r\n+// main()\r\n+//   .catch((e) => {\r\n+//     console.error(e);\r\n+//     process.exit(1);\r\n+//   })\r\n+//   .finally(async () => {\r\n+//     await prisma.$disconnect();\r\n+//   });\r\n"
                },
                {
                    "date": 1746295866944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,8 @@\n const { PrismaClient } = require(\"@prisma/client\");\r\n const { faker } = require(\"@faker-js/faker\");\r\n const { v4: uuidv4 } = require(\"uuid\");\r\n \r\n-\r\n const prisma = new PrismaClient();\r\n \r\n const grupos = [\r\n   { id: uuidv4(), nome: \"Top Influencers\", imagem: \"/images/grupos/top1.png\" },\r\n@@ -28,87 +27,88 @@\n \r\n async function main() {\r\n   console.log(\"Resetando dados...\");\r\n \r\n-//   await prisma.participanteEvento.deleteMany();\r\n-//   await prisma.eventos.deleteMany();\r\n-//   await prisma.recargas.deleteMany();\r\n-//   await prisma.cadastros_influenciadores.deleteMany();\r\n-//   await prisma.influenciadores.deleteMany();\r\n-//   await prisma.plataformas.deleteMany();\r\n-//   await prisma.grupos.deleteMany();\r\n+  // Deleta dados se as tabelas existirem\r\n+  try { await prisma.participanteEvento.deleteMany(); } catch { console.log(\"Tabela participanteEvento ainda não existe.\"); }\r\n+  try { await prisma.eventos.deleteMany(); } catch {}\r\n+  try { await prisma.recargas.deleteMany(); } catch {}\r\n+  try { await prisma.cadastros_influenciadores.deleteMany(); } catch {}\r\n+  try { await prisma.influenciadores.deleteMany(); } catch {}\r\n+  try { await prisma.plataformas.deleteMany(); } catch {}\r\n+  try { await prisma.grupos.deleteMany(); } catch {}\r\n \r\n-//   console.log(\"Inserindo grupos e plataformas...\");\r\n-//   await prisma.grupos.createMany({ data: grupos });\r\n-//   await prisma.plataformas.createMany({ data: plataformas });\r\n-//   await prisma.eventos.createMany({ data: eventos });\r\n+  console.log(\"Inserindo grupos e plataformas...\");\r\n+  await prisma.grupos.createMany({ data: grupos });\r\n+  await prisma.plataformas.createMany({ data: plataformas });\r\n+  await prisma.eventos.createMany({ data: eventos });\r\n \r\n-//   for (const famoso of influenciadoresFamosos) {\r\n-//     const novoInfluenciador = await prisma.influenciadores.create({\r\n-//       data: {\r\n-//         id: uuidv4(),\r\n-//         nome: famoso.nome,\r\n-//         imagem: famoso.imagem,\r\n-//         instagram: `@${famoso.instagram}`,\r\n-//         email: faker.internet.email(),\r\n-//         telefone: faker.phone.number(\"## #####-####\"),\r\n-//         data_cadastro: faker.date.recent(),\r\n-//         cpf: faker.string.numeric(11),\r\n-//         chavepix: faker.internet.email(),\r\n-//         status: \"ativo\",\r\n-//         contratado: faker.datatype.boolean(),\r\n-//         salario_fixo: faker.datatype.boolean(),\r\n-//       },\r\n-//     });\r\n+  for (const famoso of influenciadoresFamosos) {\r\n+    const novoInfluenciador = await prisma.influenciadores.create({\r\n+      data: {\r\n+        id: uuidv4(),\r\n+        nome: famoso.nome,\r\n+        imagem: famoso.imagem,\r\n+        instagram: `@${famoso.instagram}`,\r\n+        email: faker.internet.email(),\r\n+        telefone: faker.phone.number(\"## #####-####\"),\r\n+        data_cadastro: faker.date.recent(),\r\n+        cpf: faker.string.numeric(11),\r\n+        chavepix: faker.internet.email(),\r\n+        status: \"ativo\",\r\n+        contratado: faker.datatype.boolean(),\r\n+        salario_fixo: faker.datatype.boolean(),\r\n+      },\r\n+    });\r\n \r\n-//     const plataformaRandom = faker.helpers.arrayElement(plataformas);\r\n+    const plataformaRandom = faker.helpers.arrayElement(plataformas);\r\n \r\n-//     const cadastro = await prisma.cadastros_influenciadores.create({\r\n-//       data: {\r\n-//         id: uuidv4(),\r\n-//         influenciador_id: novoInfluenciador.id,\r\n-//         plataforma_id: plataformaRandom.id,\r\n-//         influenciador_plataforma_id: famoso.instagram.toUpperCase(),\r\n-//       },\r\n-//     });\r\n+    const cadastro = await prisma.cadastros_influenciadores.create({\r\n+      data: {\r\n+        id: uuidv4(),\r\n+        influenciador_id: novoInfluenciador.id,\r\n+        plataforma_id: plataformaRandom.id,\r\n+        influenciador_plataforma_id: famoso.instagram.toUpperCase(),\r\n+      },\r\n+    });\r\n \r\n-//     await prisma.recargas.create({\r\n-//       data: {\r\n-//         id: uuidv4(),\r\n-//         cadastro_id: cadastro.id,\r\n-//         inicio: faker.date.past(),\r\n-//         termino: faker.date.future(),\r\n-//         salario: 2500,\r\n-//         meta: 5000,\r\n-//         atingido: 3500,\r\n-//         reembolso: 300,\r\n-//         depositantes_meta: 80,\r\n-//         depositantes_atingido: 45,\r\n-//         tipo: \"valor\",\r\n-//         status_meta: \"incompleto\",\r\n-//         reembolso_status: \"pendente\",\r\n-//       },\r\n-//     });\r\n+    await prisma.recargas.create({\r\n+      data: {\r\n+        id: uuidv4(),\r\n+        cadastro_id: cadastro.id,\r\n+        inicio: faker.date.past(),\r\n+        termino: faker.date.future(),\r\n+        salario: 2500,\r\n+        meta: 5000,\r\n+        atingido: 3500,\r\n+        reembolso: 300,\r\n+        depositantes_meta: 80,\r\n+        depositantes_atingido: 45,\r\n+        tipo: \"valor\",\r\n+        status_meta: \"incompleto\",\r\n+        reembolso_status: \"pendente\",\r\n+      },\r\n+    });\r\n \r\n-//     // Adiciona o influenciador em um evento com metas\r\n-//     await prisma.participanteEvento.create({\r\n-//       data: {\r\n-//         id: uuidv4(),\r\n-//         evento_id: eventos[0].id,\r\n-//         influencer_id: novoInfluenciador.id,\r\n-//         meta: 10000,\r\n-//         atingido: faker.number.int({ min: 4000, max: 9000 }),\r\n-//       },\r\n-//     });\r\n-//   }\r\n+    // Adiciona o influenciador no evento\r\n+    await prisma.participanteEvento.create({\r\n+      data: {\r\n+        id: uuidv4(),\r\n+        evento_id: eventos[0].id,\r\n+        influencer_id: novoInfluenciador.id,\r\n+        meta: 10000,\r\n+        atingido: faker.number.int({ min: 4000, max: 9000 }),\r\n+      },\r\n+    });\r\n+  }\r\n \r\n-//   console.log(\"Seed concluído com sucesso!\");\r\n-// }\r\n+  console.log(\"✅ Seed concluído com sucesso!\");\r\n+}\r\n \r\n-// main()\r\n-//   .catch((e) => {\r\n-//     console.error(e);\r\n-//     process.exit(1);\r\n-//   })\r\n-//   .finally(async () => {\r\n-//     await prisma.$disconnect();\r\n-//   });\r\n+main()\r\n+  .catch((e) => {\r\n+    console.error(e);\r\n+    process.exit(1);\r\n+  })\r\n+  .finally(async () => {\r\n+    await prisma.$disconnect();\r\n+  });\r\n"
                },
                {
                    "date": 1746296198323,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n         telefone: faker.phone.number(\"## #####-####\"),\r\n         data_cadastro: faker.date.recent(),\r\n         cpf: faker.string.numeric(11),\r\n         chavepix: faker.internet.email(),\r\n-        status: \"ativo\",\r\n+        status: \"diamante\",\r\n         contratado: faker.datatype.boolean(),\r\n         salario_fixo: faker.datatype.boolean(),\r\n       },\r\n     });\r\n"
                }
            ],
            "date": 1746294985458,
            "name": "Commit-0",
            "content": "const { PrismaClient } = require(\"@prisma/client\");\r\nconst { faker } = require(\"@faker-js/faker\");\r\nconst { v4: uuidv4 } = require(\"uuid\");\r\n\r\nconst prisma = new PrismaClient();\r\n\r\nconst influenciadoresFamosos = [\r\n  { nome: \"Neymar Jr\", instagram: \"neymarjr\", imagem: \"/images/avatar/neymar.png\" },\r\n  { nome: \"Anitta\", instagram: \"anitta\", imagem: \"/images/avatar/anitta.png\" },\r\n  { nome: \"Reginaldo Rossi\", instagram: \"reginaldorossi\", imagem: \"/images/avatar/reginaldorossi.png\" },\r\n  { nome: \"Gusttavo Lima\", instagram: \"gusttavolima\", imagem: \"/images/avatar/gusttavolima.png\" },\r\n  { nome: \"Gisele Bündchen\", instagram: \"giselebundchen\", imagem: \"/images/avatar/gisele.png\" },\r\n  { nome: \"Larissa Manoela\", instagram: \"larissamanoela\", imagem: \"/images/avatar/larissa.png\" },\r\n  { nome: \"Whindersson Nunes\", instagram: \"whinderssonnunes\", imagem: \"/images/avatar/whindersson.png\" },\r\n  {\r\n    nome: \"Joaquim Almeida\",\r\n    instagram: \"exemplo_insta\",\r\n    imagem: \"/images/avatar/exemplo.png\",\r\n    email: \"mirella96@ig.com.br\",\r\n    telefone: faker.phone.number(\"(##) #####-####\"),\r\n    cpf: \"96540577080\",\r\n    chavepix: \"davi85@gmail.com\",\r\n    status: \"bronze\",\r\n    motivo_banimento: \"Não cumpriu metas consecutivamente\",\r\n    contratado: true,\r\n    salario_fixo: true,\r\n    data_cadastro: new Date(\"2025-03-09\")\r\n  }\r\n];\r\n\r\nconst plataformas = [\r\n  { id: \"genio777\", nome: \"Gênio777\", imagem: \"/images/plataformas/genio777.png\", cor: \"#3B82F6\" },\r\n  { id: \"pgcoelho\", nome: \"PG-COELHO\", imagem: \"/images/plataformas/pgcoelho.png\", cor: \"#8B5CF6\" },\r\n  { id: \"piupiu\", nome: \"Piu-piu PQ\", imagem: \"/images/plataformas/piupiu.png\", cor: \"#FBBF24\" },\r\n  { id: \"sergipeboi\", nome: \"Sergipe Boi\", imagem: \"/images/plataformas/sergipeboi.png\", cor: \"#F97316\" },\r\n];\r\n\r\nasync function main() {\r\n  console.log(\"Resetando banco...\");\r\n\r\n  await prisma.recargas.deleteMany();\r\n  await prisma.salarios_mensais.deleteMany();\r\n  await prisma.cadastros_influenciadores.deleteMany();\r\n  await prisma.influenciadores.deleteMany();\r\n  await prisma.plataformas.deleteMany();\r\n\r\n  console.log(\"Criando plataformas...\");\r\n  await prisma.plataformas.createMany({ data: plataformas });\r\n\r\n  const todasPlataformas = await prisma.plataformas.findMany();\r\n\r\n  for (const famoso of influenciadoresFamosos) {\r\n    const novoInfluenciador = await prisma.influenciadores.create({\r\n      data: {\r\n        id: uuidv4(),\r\n        nome: famoso.nome,\r\n        imagem: famoso.imagem,\r\n        instagram: `@${famoso.instagram}`,\r\n        email: famoso.email || faker.internet.email(),\r\n        telefone: famoso.telefone || faker.phone.number(\"(##) #####-####\"),\r\n        data_cadastro: famoso.data_cadastro || faker.date.recent({ days: 90 }),\r\n        cpf: famoso.cpf || faker.number.int({ min: 10000000000, max: 99999999999 }).toString(),\r\n        chavepix: famoso.chavepix || faker.internet.email(),\r\n        status: famoso.status || faker.helpers.arrayElement([\"bronze\", \"prata\", \"ouro\", \"diamante\"]),\r\n        motivo_banimento: famoso.motivo_banimento || null,\r\n        contratado: famoso.contratado || false,\r\n        salario_fixo: famoso.salario_fixo || false,\r\n      },\r\n    });\r\n\r\n    const plataformaAleatoria = faker.helpers.arrayElement(todasPlataformas);\r\n\r\n    const cadastro = await prisma.cadastros_influenciadores.create({\r\n      data: {\r\n        id: uuidv4(),\r\n        influenciador_id: novoInfluenciador.id,\r\n        plataforma_id: plataformaAleatoria.id,\r\n        influenciador_plataforma_id: famoso.instagram.toUpperCase(),\r\n      },\r\n    });\r\n\r\n    await prisma.recargas.create({\r\n      data: {\r\n        id: uuidv4(),\r\n        cadastro_id: cadastro.id,\r\n        inicio: faker.date.past(),\r\n        termino: faker.date.future(),\r\n        salario: faker.number.float({ min: 2000, max: 5000, precision: 0.01 }),\r\n        meta: faker.number.float({ min: 3000, max: 8000, precision: 0.01 }),\r\n        atingido: faker.number.float({ min: 1000, max: 7000, precision: 0.01 }),\r\n        reembolso: faker.number.float({ min: 0, max: 500, precision: 0.01 }),\r\n        depositantes_meta: faker.number.int({ min: 20, max: 100 }),\r\n        depositantes_atingido: faker.number.int({ min: 10, max: 90 }),\r\n        tipo: faker.helpers.arrayElement([\"valor\", \"depositantes\"]),\r\n        status_meta: faker.helpers.arrayElement([\"completo\", \"incompleto\"]),\r\n        reembolso_status: faker.helpers.arrayElement([\"pendente\", \"pago\"]),\r\n      },\r\n    });\r\n\r\n    if (famoso.salario_fixo) {\r\n      const anoAtual = new Date().getFullYear();\r\n      for (let mes = 1; mes <= 12; mes++) {\r\n        await prisma.salarios_mensais.create({\r\n          data: {\r\n            id: uuidv4(),\r\n            influenciador_id: novoInfluenciador.id,\r\n            ano: anoAtual,\r\n            mes,\r\n            valor: faker.number.float({ min: 1500, max: 2500, precision: 0.01 }),\r\n          },\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  console.log(\"Seed concluído com sucesso!\");\r\n}\r\n\r\nmain()\r\n  .catch((e) => {\r\n    console.error(e);\r\n    process.exit(1);\r\n  })\r\n  .finally(async () => {\r\n    await prisma.$disconnect();\r\n  });\r\n"
        }
    ]
}