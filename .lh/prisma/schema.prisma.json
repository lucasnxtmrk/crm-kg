{
    "sourceFile": "prisma/schema.prisma",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1746833345910,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746833449719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,23 +7,23 @@\n   url      = env(\"DATABASE_URL\")\n }\n \n model usuarios {\n-  id       String   @id @default(uuid()) @db.Uuid\n-  nome     String   @db.VarChar(100)\n-  email    String   @unique @db.VarChar(255)\n-  senha    String   @db.VarChar(255)\n-  role     Role     @default(USER)\n-  criadoEm DateTime @default(now())\n+  id        String   @id @default(uuid()) @db.Uuid\n+  nome      String   @db.VarChar(255)\n+  email     String   @unique @db.VarChar(255)\n+  senha     String   @db.VarChar(255)\n+  role      Role     @default(ADMIN) // ðŸ‘ˆ enum que define se Ã© admin ou superadmin\n+  ativo     Boolean  @default(true)\n+  criadoEm  DateTime @default(now())\n   atualizadoEm DateTime @updatedAt\n \n   @@map(\"usuarios\")\n }\n \n enum Role {\n+  ADMIN\n   SUPERADMIN\n-  ADMIN\n-  USER\n }\n \n model cadastros_influenciadores {\n   id                          String @id @db.Uuid\n"
                }
            ],
            "date": 1746833345910,
            "name": "Commit-0",
            "content": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel usuarios {\n  id       String   @id @default(uuid()) @db.Uuid\n  nome     String   @db.VarChar(100)\n  email    String   @unique @db.VarChar(255)\n  senha    String   @db.VarChar(255)\n  role     Role     @default(USER)\n  criadoEm DateTime @default(now())\n  atualizadoEm DateTime @updatedAt\n\n  @@map(\"usuarios\")\n}\n\nenum Role {\n  SUPERADMIN\n  ADMIN\n  USER\n}\n\nmodel cadastros_influenciadores {\n  id                          String @id @db.Uuid\n  influenciador_id            String @db.Uuid\n  plataforma_id               String @db.VarChar(50)\n  influenciador_plataforma_id String @db.VarChar(100)\n\n  influenciadores influenciadores @relation(fields: [influenciador_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  plataformas     plataformas     @relation(fields: [plataforma_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  recargas        recargas[]\n\n  @@map(\"cadastros_influenciadores\")\n}\n\nmodel influenciadores {\n  id               String   @id @db.Uuid\n  nome             String   @db.VarChar(255)\n  imagem           String?\n  instagram        String   @db.VarChar(100)\n  email            String?  @db.VarChar(255)\n  telefone         String?  @db.VarChar(20)\n  data_cadastro    DateTime @db.Date\n  cpf              String   @unique @db.VarChar(20)\n  chavepix         String?  @db.VarChar(255)\n  status           String   @db.VarChar(20)\n  motivo_banimento String?\n\n  contratado   Boolean @default(false)\n  salario_fixo Boolean @default(false)\n\n  cadastros_influenciadores cadastros_influenciadores[]\n  salarios_mensais          salarios_mensais[]\n  participacoes             ParticipanteEvento[]\n\n  @@map(\"influenciadores\")\n}\n\nmodel grupos {\n  id          String        @id @default(uuid()) @db.Uuid\n  nome        String        @db.VarChar(100)\n  imagem      String?\n  plataformas plataformas[]\n}\n\nmodel plataformas {\n  id               String  @id @db.VarChar(50)\n  nome             String  @db.VarChar(255)\n  imagem           String?\n  cor              String\n  grupoId          String? @db.Uuid\n  grupo            grupos? @relation(fields: [grupoId], references: [id])\n\n  cadastros_influenciadores cadastros_influenciadores[]\n  eventosPlataforma         EventoPlataforma[]\n\n  @@map(\"plataformas\")\n}\n\nmodel recargas {\n  id                    String   @id @db.Uuid\n  cadastro_id           String   @db.Uuid\n  inicio                DateTime @db.Date\n  termino               DateTime @db.Date\n  salario               Decimal  @db.Decimal(10, 2)\n  meta                  Decimal  @db.Decimal(10, 2)\n  atingido              Decimal  @db.Decimal(10, 2)\n  reembolso             Decimal  @db.Decimal(10, 2)\n  depositantes_meta     Int\n  depositantes_atingido Int\n\n  tipo String @db.VarChar(20)\n\n  status_meta      String @db.VarChar(20)\n  reembolso_status String @db.VarChar(20)\n\n  cadastros_influenciadores cadastros_influenciadores @relation(fields: [cadastro_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@map(\"recargas\")\n}\n\nmodel salarios_mensais {\n  id               String  @id @default(uuid()) @db.Uuid\n  influenciador_id String  @db.Uuid\n  ano              Int\n  mes              Int\n  valor            Decimal @db.Decimal(10, 2)\n\n  influenciador influenciadores @relation(fields: [influenciador_id], references: [id], onDelete: Cascade)\n\n  @@unique([influenciador_id, ano, mes])\n  @@map(\"salarios_mensais\")\n}\n\nmodel eventos {\n  id            String               @id @default(uuid()) @db.Uuid\n  nome          String\n  plataformas   EventoPlataforma[]\n  participantes ParticipanteEvento[]\n  data_evento   DateTime?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @default(now()) @updatedAt\n}\n\nmodel ParticipanteEvento {\n  id            String @id @default(uuid())\n  evento_id     String @db.Uuid\n  influencer_id String @db.Uuid\n  meta          Int\n  atingido      Int\n\n  evento        eventos         @relation(fields: [evento_id], references: [id])\n  influenciador influenciadores @relation(fields: [influencer_id], references: [id])\n}\n\nmodel EventoPlataforma {\n  id           String       @id @default(cuid())\n  eventoId     String       @db.Uuid\n  plataformaId String       @db.VarChar(50)\n\n  evento       eventos      @relation(fields: [eventoId], references: [id])\n  plataforma   plataformas  @relation(fields: [plataformaId], references: [id])\n\n  @@unique([eventoId, plataformaId])\n}\n"
        }
    ]
}