{
    "sourceFile": "app/api/recargas/[id]/route.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1745871846261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1745871846261,
            "name": "Commit-0",
            "content": "import { prisma } from \"@/lib/prisma\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\n// Atualizar uma recarga existente\r\nexport async function PUT(\r\n  req: Request,\r\n  { params }: { params: { id: string } }\r\n) {\r\n  const { id } = params;\r\n  const data = await req.json();\r\n\r\n  const recargaAtualizada = await prisma.recargas.update({\r\n    where: { id },\r\n    data: {\r\n      inicio: new Date(data.inicio),\r\n      termino: new Date(data.termino),\r\n      salario: data.salario,\r\n      meta: data.meta,\r\n      atingido: data.atingido,\r\n      reembolso: data.reembolso,\r\n      depositantes_meta: data.depositantes_meta,\r\n      depositantes_atingido: data.depositantes_atingido,\r\n      tipo: data.tipo,\r\n      status_meta: data.status_meta,\r\n      reembolso_status: data.reembolso_status,\r\n    },\r\n  });\r\n\r\n  return NextResponse.json(recargaAtualizada);\r\n}\r\n\r\n// Deletar uma recarga\r\nexport async function DELETE(\r\n  req: Request,\r\n  { params }: { params: { id: string } }\r\n) {\r\n  const { id } = params;\r\n\r\n  await prisma.recargas.delete({\r\n    where: { id },\r\n  });\r\n\r\n  return NextResponse.json({ message: \"Recarga deletada com sucesso!\" });\r\n}\r\n\r\nexport async function PATCH(\r\n  req: Request,\r\n  { params }: { params: { id: string } }\r\n) {\r\n  const { id } = params;\r\n  const data = await req.json();\r\n\r\n  if (!data.reembolso_status) {\r\n    return NextResponse.json({ error: \"reembolso_status é obrigatório\" }, { status: 400 });\r\n  }\r\n\r\n  const recargaAtualizada = await prisma.recargas.update({\r\n    where: { id },\r\n    data: {\r\n      reembolso_status: data.reembolso_status,\r\n    },\r\n  });\r\n\r\n  return NextResponse.json(recargaAtualizada);\r\n}"
        }
    ]
}