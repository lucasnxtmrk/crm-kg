{
    "sourceFile": "app/api/eventos/[id]/route.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746646282592,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746646282592,
            "name": "Commit-0",
            "content": "// /app/api/eventos/[id]/route.ts\r\nimport { prisma } from \"@/lib/prisma\";\r\n\r\nexport async function GET(\r\n  req: Request,\r\n  { params }: { params: { id: string } }\r\n) {\r\n  const id = params.id;\r\n\r\n  try {\r\n    const evento = await prisma.eventos.findUnique({\r\n      where: { id },\r\n      include: {\r\n        participantes: {\r\n          include: { influenciador: true },\r\n        },\r\n        plataformas: {\r\n          include: {\r\n            plataforma: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    if (!evento) {\r\n      return new Response(\"Evento nÃ£o encontrado\", { status: 404 });\r\n    }\r\n\r\n    return Response.json(evento);\r\n  } catch (error) {\r\n    console.error(\"Erro ao buscar evento:\", error);\r\n    return new Response(\"Erro ao buscar evento\", { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function PATCH(req: Request, { params }: { params: { id: string } }) {\r\n  const id = params.id;\r\n  const body = await req.json();\r\n\r\n  try {\r\n    const eventoAtualizado = await prisma.eventos.update({\r\n      where: { id },\r\n      data: {\r\n        nome: body.nome,\r\n        data_evento: new Date(body.data),\r\n        plataformas: {\r\n          deleteMany: {}, // remove as atuais\r\n          create: body.plataformaIds.map((plataformaId: string) => ({\r\n            plataforma: { connect: { id: plataformaId } }\r\n          }))\r\n        }\r\n      },\r\n      include: {\r\n        plataformas: {\r\n          include: {\r\n            plataforma: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    return Response.json(eventoAtualizado);\r\n  } catch (error) {\r\n    console.error(\"Erro ao atualizar evento:\", error);\r\n    return new Response(\"Erro ao atualizar evento\", { status: 500 });\r\n  }\r\n}"
        }
    ]
}