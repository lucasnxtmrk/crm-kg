{
    "sourceFile": "app/api/eventos/[id]/participantes/route.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746297657718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746297657718,
            "name": "Commit-0",
            "content": "// /app/api/eventos/[id]/participantes/route.ts\r\nimport { prisma } from \"@/lib/prisma\";\r\n\r\nexport async function GET(\r\n  req: Request,\r\n  { params }: { params: { id: string } }\r\n) {\r\n  const id = params.id;\r\n\r\n  try {\r\n    const participantes = await prisma.participanteEvento.findMany({\r\n      where: { evento_id: id },\r\n      include: { influenciador: true },\r\n    });\r\n\r\n    return Response.json(participantes);\r\n  } catch (error) {\r\n    console.error(\"Erro ao buscar participantes:\", error);\r\n    return new Response(\"Erro ao buscar participantes\", { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function POST(\r\n  req: Request,\r\n  { params }: { params: { id: string } }\r\n) {\r\n  const data = await req.json(); // { influencer_id, meta, atingido }\r\n\r\n  try {\r\n    const participante = await prisma.participanteEvento.create({\r\n      data: {\r\n        evento_id: params.id,\r\n        influencer_id: data.influencer_id,\r\n        meta: data.meta,\r\n        atingido: data.atingido,\r\n      },\r\n    });\r\n\r\n    return Response.json(participante);\r\n  } catch (error) {\r\n    console.error(\"Erro ao adicionar participante:\", error);\r\n    return new Response(\"Erro ao adicionar participante\", { status: 500 });\r\n  }\r\n}\r\n"
        }
    ]
}