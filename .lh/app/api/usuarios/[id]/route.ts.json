{
    "sourceFile": "app/api/usuarios/[id]/route.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1746912880627,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746913230474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n \r\n type Params = { params: { id: string } };\r\n \r\n export async function GET(_: NextRequest, { params }: Params) {\r\n-  const usuario = await prisma.usuario.findUnique({\r\n+  const usuario = await prisma.usuarios.findUnique({\r\n     where: { id: params.id },\r\n   });\r\n \r\n   if (!usuario) return new NextResponse('Usuário não encontrado', { status: 404 });\r\n@@ -16,9 +16,9 @@\n export async function PATCH(req: NextRequest, { params }: Params) {\r\n   try {\r\n     const body = await req.json();\r\n \r\n-    const usuarioAtualizado = await prisma.usuario.update({\r\n+    const usuarioAtualizado = await prisma.usuarios.update({\r\n       where: { id: params.id },\r\n       data: body,\r\n     });\r\n \r\n@@ -30,9 +30,9 @@\n }\r\n \r\n export async function DELETE(_: NextRequest, { params }: Params) {\r\n   try {\r\n-    await prisma.usuario.delete({ where: { id: params.id } });\r\n+    await prisma.usuarios.delete({ where: { id: params.id } });\r\n     return new NextResponse(null, { status: 204 });\r\n   } catch (error) {\r\n     console.error(error);\r\n     return new NextResponse('Erro ao excluir usuário', { status: 500 });\r\n"
                }
            ],
            "date": 1746912880627,
            "name": "Commit-0",
            "content": "import { NextRequest, NextResponse } from 'next/server';\r\nimport { prisma } from '@/lib/prisma';\r\n\r\ntype Params = { params: { id: string } };\r\n\r\nexport async function GET(_: NextRequest, { params }: Params) {\r\n  const usuario = await prisma.usuario.findUnique({\r\n    where: { id: params.id },\r\n  });\r\n\r\n  if (!usuario) return new NextResponse('Usuário não encontrado', { status: 404 });\r\n\r\n  return NextResponse.json(usuario);\r\n}\r\n\r\nexport async function PATCH(req: NextRequest, { params }: Params) {\r\n  try {\r\n    const body = await req.json();\r\n\r\n    const usuarioAtualizado = await prisma.usuario.update({\r\n      where: { id: params.id },\r\n      data: body,\r\n    });\r\n\r\n    return NextResponse.json(usuarioAtualizado);\r\n  } catch (error) {\r\n    console.error(error);\r\n    return new NextResponse('Erro ao atualizar usuário', { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function DELETE(_: NextRequest, { params }: Params) {\r\n  try {\r\n    await prisma.usuario.delete({ where: { id: params.id } });\r\n    return new NextResponse(null, { status: 204 });\r\n  } catch (error) {\r\n    console.error(error);\r\n    return new NextResponse('Erro ao excluir usuário', { status: 500 });\r\n  }\r\n}\r\n"
        }
    ]
}