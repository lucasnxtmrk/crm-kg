{
    "sourceFile": "app/api/usuarios/route.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1746912867483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746912914634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,15 @@\n import { NextRequest, NextResponse } from 'next/server';\r\n import { prisma } from '@/lib/prisma';\r\n \r\n export async function GET() {\r\n-  const usuarios = await prisma.usuario.findMany({\r\n-    orderBy: { createdAt: 'desc' },\r\n+  const usuarios = await prisma.usuarios.findMany({\r\n+    orderBy: { nome : 'desc' },\r\n     select: {\r\n       id: true,\r\n       nome: true,\r\n       email: true,\r\n       role: true,\r\n-      createdAt: true,\r\n     },\r\n   });\r\n   return NextResponse.json(usuarios);\r\n }\r\n@@ -22,9 +21,9 @@\n     if (!nome || !email || !senha) {\r\n       return new NextResponse('Campos obrigatórios faltando', { status: 400 });\r\n     }\r\n \r\n-    const novoUsuario = await prisma.usuario.create({\r\n+    const novoUsuario = await prisma.usuarios.create({\r\n       data: { nome, email, senha, role: role || 'ADMIN' },\r\n     });\r\n \r\n     return NextResponse.json(novoUsuario, { status: 201 });\r\n"
                }
            ],
            "date": 1746912867483,
            "name": "Commit-0",
            "content": "import { NextRequest, NextResponse } from 'next/server';\r\nimport { prisma } from '@/lib/prisma';\r\n\r\nexport async function GET() {\r\n  const usuarios = await prisma.usuario.findMany({\r\n    orderBy: { createdAt: 'desc' },\r\n    select: {\r\n      id: true,\r\n      nome: true,\r\n      email: true,\r\n      role: true,\r\n      createdAt: true,\r\n    },\r\n  });\r\n  return NextResponse.json(usuarios);\r\n}\r\n\r\nexport async function POST(req: NextRequest) {\r\n  try {\r\n    const { nome, email, senha, role } = await req.json();\r\n\r\n    if (!nome || !email || !senha) {\r\n      return new NextResponse('Campos obrigatórios faltando', { status: 400 });\r\n    }\r\n\r\n    const novoUsuario = await prisma.usuario.create({\r\n      data: { nome, email, senha, role: role || 'ADMIN' },\r\n    });\r\n\r\n    return NextResponse.json(novoUsuario, { status: 201 });\r\n  } catch (error) {\r\n    console.error(error);\r\n    return new NextResponse('Erro ao criar usuário', { status: 500 });\r\n  }\r\n}\r\n"
        }
    ]
}