{
    "sourceFile": "app/[locale]/layout.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1746133816130,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746134017786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,55 +1,49 @@\n import type { Metadata } from \"next\";\r\n import { Inter } from \"next/font/google\";\r\n import \"./globals.css\";\r\n-import \"./theme.css\";\r\n-\r\n+import \"./theme.css\"\r\n import { ThemeProvider } from \"@/providers/theme-provider\";\r\n import MountedProvider from \"@/providers/mounted.provider\";\r\n-import { Toaster } from '@/components/ui/toaster';\r\n-import { Toaster as SonnerToaster } from \"@/components/ui/sonner\";\r\n-\r\n+import { Toaster } from '@/components/ui/toaster'\r\n+import { Toaster as SonnerToaster } from \"@/components/ui/sonner\"\r\n+const inter = Inter({ subsets: [\"latin\"] });\r\n+// language \r\n import { getLangDir } from 'rtl-detect';\r\n import { NextIntlClientProvider } from 'next-intl';\r\n import { getMessages } from 'next-intl/server';\r\n import DirectionProvider from \"@/providers/direction-provider\";\r\n import AuthProvider from \"@/providers/auth.provider\";\r\n-import { notFound } from \"next/navigation\";\r\n \r\n-const inter = Inter({ subsets: [\"latin\"] });\r\n-\r\n export const metadata: Metadata = {\r\n   title: \"KG Slots admin Template\",\r\n   description: \"created by codeshaper\",\r\n };\r\n \r\n export default async function RootLayout({\r\n   children,\r\n   params: { locale },\r\n-}: {\r\n+}: Readonly<{\r\n   children: React.ReactNode;\r\n   params: { locale: string };\r\n-}) {\r\n-  let messages;\r\n+}>) {\r\n \r\n-  try {\r\n-    messages = await getMessages({ locale });\r\n-  } catch (error) {\r\n-    notFound(); // dispara a tela de 404 se locale for inválido ou não encontrado\r\n-  }\r\n-\r\n+  const messages = await getMessages();\r\n   const direction = getLangDir(locale);\r\n-\r\n   return (\r\n     <html lang={locale} dir={direction}>\r\n       <body className={`${inter.className} dashcode-app`}>\r\n-        <NextIntlClientProvider locale={locale} messages={messages}>\r\n+        <NextIntlClientProvider messages={messages} locale={locale}>\r\n           <AuthProvider>\r\n-            <ThemeProvider attribute=\"class\" defaultTheme=\"light\">\r\n+            <ThemeProvider attribute=\"class\"\r\n+\r\n+              defaultTheme=\"light\">\r\n               <MountedProvider>\r\n+\r\n                 <DirectionProvider direction={direction}>\r\n                   {children}\r\n                 </DirectionProvider>\r\n+\r\n               </MountedProvider>\r\n               <Toaster />\r\n               <SonnerToaster />\r\n             </ThemeProvider>\r\n"
                }
            ],
            "date": 1746133816130,
            "name": "Commit-0",
            "content": "import type { Metadata } from \"next\";\r\nimport { Inter } from \"next/font/google\";\r\nimport \"./globals.css\";\r\nimport \"./theme.css\";\r\n\r\nimport { ThemeProvider } from \"@/providers/theme-provider\";\r\nimport MountedProvider from \"@/providers/mounted.provider\";\r\nimport { Toaster } from '@/components/ui/toaster';\r\nimport { Toaster as SonnerToaster } from \"@/components/ui/sonner\";\r\n\r\nimport { getLangDir } from 'rtl-detect';\r\nimport { NextIntlClientProvider } from 'next-intl';\r\nimport { getMessages } from 'next-intl/server';\r\nimport DirectionProvider from \"@/providers/direction-provider\";\r\nimport AuthProvider from \"@/providers/auth.provider\";\r\nimport { notFound } from \"next/navigation\";\r\n\r\nconst inter = Inter({ subsets: [\"latin\"] });\r\n\r\nexport const metadata: Metadata = {\r\n  title: \"KG Slots admin Template\",\r\n  description: \"created by codeshaper\",\r\n};\r\n\r\nexport default async function RootLayout({\r\n  children,\r\n  params: { locale },\r\n}: {\r\n  children: React.ReactNode;\r\n  params: { locale: string };\r\n}) {\r\n  let messages;\r\n\r\n  try {\r\n    messages = await getMessages({ locale });\r\n  } catch (error) {\r\n    notFound(); // dispara a tela de 404 se locale for inválido ou não encontrado\r\n  }\r\n\r\n  const direction = getLangDir(locale);\r\n\r\n  return (\r\n    <html lang={locale} dir={direction}>\r\n      <body className={`${inter.className} dashcode-app`}>\r\n        <NextIntlClientProvider locale={locale} messages={messages}>\r\n          <AuthProvider>\r\n            <ThemeProvider attribute=\"class\" defaultTheme=\"light\">\r\n              <MountedProvider>\r\n                <DirectionProvider direction={direction}>\r\n                  {children}\r\n                </DirectionProvider>\r\n              </MountedProvider>\r\n              <Toaster />\r\n              <SonnerToaster />\r\n            </ThemeProvider>\r\n          </AuthProvider>\r\n        </NextIntlClientProvider>\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n"
        }
    ]
}