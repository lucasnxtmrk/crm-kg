{
    "sourceFile": "app/[locale]/(protected)/dashboard/components/tableInfluencers/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 11,
            "patches": [
                {
                    "date": 1746648480784,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746648571942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n 'use client'\r\n import { useEffect, useState } from 'react'\r\n+import { Avatar, AvatarImage, AvatarFallback } from '@/components/ui/avatar'\r\n \r\n type Influenciador = {\r\n   nome: string\r\n   imagem?: string\r\n@@ -18,13 +19,13 @@\n         const comMetaBatida = data\r\n           .filter((r: any) => Number(r.atingido) >= Number(r.meta))\r\n           .map((r: any) => ({\r\n             nome: r.cadastros_influenciadores?.influenciadores?.nome || 'Sem nome',\r\n-            imagem: r.cadastros_influenciadores?.influenciadores?.imagem || '/images/avatar/avatar.png',\r\n+            imagem: r.cadastros_influenciadores?.influenciadores?.imagem || '',\r\n             meta: Number(r.meta),\r\n             atingido: Number(r.atingido),\r\n           }))\r\n-          .sort((a: { meta: number }, b: { meta: number }) => b.meta - a.meta) // ou b.atingido - a.atingido\r\n+          .sort((a, b) => b.meta - a.meta)\r\n \r\n         setInfluenciadores(comMetaBatida)\r\n       })\r\n   }, [])\r\n@@ -37,17 +38,17 @@\n           <div\r\n             key={idx}\r\n             className=\"flex items-center gap-4 bg-muted/30 rounded-xl p-4 shadow-sm border\"\r\n           >\r\n-            <img\r\n-              src={inf.imagem}\r\n-              alt={inf.nome}\r\n-              className=\"w-12 h-12 rounded-full object-cover\"\r\n-            />\r\n+            <Avatar className=\"w-10 h-10\">\r\n+              <AvatarImage src={inf.imagem} />\r\n+              <AvatarFallback>{inf.nome.charAt(0)}</AvatarFallback>\r\n+            </Avatar>\r\n             <div className=\"flex-1\">\r\n               <p className=\"font-semibold text-sm\">{inf.nome}</p>\r\n               <p className=\"text-xs text-muted-foreground\">\r\n-                Meta: <strong>R$ {inf.meta.toLocaleString('pt-BR')}</strong> ‚Äî Atingido: <strong className=\"text-green-600\">R$ {inf.atingido.toLocaleString('pt-BR')}</strong>\r\n+                Meta: <strong>R$ {inf.meta.toLocaleString('pt-BR')}</strong> ‚Äî Atingido:{' '}\r\n+                <strong className=\"text-green-600\">R$ {inf.atingido.toLocaleString('pt-BR')}</strong>\r\n               </p>\r\n             </div>\r\n           </div>\r\n         ))}\r\n"
                },
                {
                    "date": 1746648668809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,35 +1,32 @@\n 'use client'\r\n import { useEffect, useState } from 'react'\r\n import { Avatar, AvatarImage, AvatarFallback } from '@/components/ui/avatar'\r\n+import { DateRange } from \"react-day-picker\"\r\n \r\n-type Influenciador = {\r\n-  nome: string\r\n-  imagem?: string\r\n-  meta: number\r\n-  atingido: number\r\n+interface Props {\r\n+  intervalo?: DateRange\r\n }\r\n \r\n-export default function ListaInfluencers() {\r\n-  const [influenciadores, setInfluenciadores] = useState<Influenciador[]>([])\r\n+export default function ListaInfluencers({ intervalo }: Props) {\r\n+  const [influenciadores, setInfluenciadores] = useState<Influencer[]>([])\r\n \r\n   useEffect(() => {\r\n     fetch('/api/recargas')\r\n       .then(res => res.json())\r\n-      .then(data => {\r\n-        const comMetaBatida = data\r\n-          .filter((r: any) => Number(r.atingido) >= Number(r.meta))\r\n-          .map((r: any) => ({\r\n-            nome: r.cadastros_influenciadores?.influenciadores?.nome || 'Sem nome',\r\n-            imagem: r.cadastros_influenciadores?.influenciadores?.imagem || '',\r\n-            meta: Number(r.meta),\r\n-            atingido: Number(r.atingido),\r\n-          }))\r\n-          .sort((a, b) => b.meta - a.meta)\r\n+      .then((data) => {\r\n+        const filtrados = data\r\n+          .filter((rec: any) => {\r\n+            if (!intervalo?.from || !intervalo?.to) return true\r\n+            const dataInicio = new Date(rec.inicio)\r\n+            return dataInicio >= new Date(intervalo.from) && dataInicio <= new Date(intervalo.to)\r\n+          })\r\n+          .filter((rec: any) => Number(rec.atingido) >= Number(rec.meta)) // meta batida\r\n+          .sort((a: any, b: any) => Number(b.meta) - Number(a.meta))       // maior meta primeiro\r\n \r\n-        setInfluenciadores(comMetaBatida)\r\n+        setInfluenciadores(filtrados)\r\n       })\r\n-  }, [])\r\n+  }, [intervalo])\r\n \r\n   return (\r\n     <div className=\"p-6\">\r\n       <h3 className=\"text-xl font-semibold mb-4\">üèÜ Influenciadores com Meta Batida</h3>\r\n"
                },
                {
                    "date": 1746648685912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,12 +35,12 @@\n           <div\r\n             key={idx}\r\n             className=\"flex items-center gap-4 bg-muted/30 rounded-xl p-4 shadow-sm border\"\r\n           >\r\n-            <Avatar className=\"w-10 h-10\">\r\n-              <AvatarImage src={inf.imagem} />\r\n-              <AvatarFallback>{inf.nome.charAt(0)}</AvatarFallback>\r\n-            </Avatar>\r\n+            <Avatar className=\"h-10 w-10\">\r\n+  <AvatarImage src={inf.cadastros_influenciadores?.influenciadores?.imagem} />\r\n+  <AvatarFallback>{inf.cadastros_influenciadores?.influenciadores?.nome?.charAt(0)}</AvatarFallback>\r\n+</Avatar>\r\n             <div className=\"flex-1\">\r\n               <p className=\"font-semibold text-sm\">{inf.nome}</p>\r\n               <p className=\"text-xs text-muted-foreground\">\r\n                 Meta: <strong>R$ {inf.meta.toLocaleString('pt-BR')}</strong> ‚Äî Atingido:{' '}\r\n"
                },
                {
                    "date": 1746648697790,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,12 +35,12 @@\n           <div\r\n             key={idx}\r\n             className=\"flex items-center gap-4 bg-muted/30 rounded-xl p-4 shadow-sm border\"\r\n           >\r\n-            <Avatar className=\"h-10 w-10\">\r\n-  <AvatarImage src={inf.cadastros_influenciadores?.influenciadores?.imagem} />\r\n-  <AvatarFallback>{inf.cadastros_influenciadores?.influenciadores?.nome?.charAt(0)}</AvatarFallback>\r\n-</Avatar>\r\n+            <Avatar className=\"w-10 h-10\">\r\n+              <AvatarImage src={inf.imagem} />\r\n+              <AvatarFallback>{inf.nome.charAt(0)}</AvatarFallback>\r\n+            </Avatar>\r\n             <div className=\"flex-1\">\r\n               <p className=\"font-semibold text-sm\">{inf.nome}</p>\r\n               <p className=\"text-xs text-muted-foreground\">\r\n                 Meta: <strong>R$ {inf.meta.toLocaleString('pt-BR')}</strong> ‚Äî Atingido:{' '}\r\n"
                },
                {
                    "date": 1746648703625,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n             className=\"flex items-center gap-4 bg-muted/30 rounded-xl p-4 shadow-sm border\"\r\n           >\r\n             <Avatar className=\"w-10 h-10\">\r\n               <AvatarImage src={inf.imagem} />\r\n-              <AvatarFallback>{inf.nome.charAt(0)}</AvatarFallback>\r\n+              <AvatarFallback>{inf.nome.charAt(1)}</AvatarFallback>\r\n             </Avatar>\r\n             <div className=\"flex-1\">\r\n               <p className=\"font-semibold text-sm\">{inf.nome}</p>\r\n               <p className=\"text-xs text-muted-foreground\">\r\n"
                },
                {
                    "date": 1746648731995,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,12 +35,12 @@\n           <div\r\n             key={idx}\r\n             className=\"flex items-center gap-4 bg-muted/30 rounded-xl p-4 shadow-sm border\"\r\n           >\r\n-            <Avatar className=\"w-10 h-10\">\r\n-              <AvatarImage src={inf.imagem} />\r\n-              <AvatarFallback>{inf.nome.charAt(1)}</AvatarFallback>\r\n-            </Avatar>\r\n+            <Avatar className=\"h-10 w-10\">\r\n+  <AvatarImage src={inf.cadastros_influenciadores?.influenciadores?.imagem} />\r\n+  <AvatarFallback>{inf.cadastros_influenciadores?.influenciadores?.nome?.charAt(0)}</AvatarFallback>\r\n+</Avatar>\r\n             <div className=\"flex-1\">\r\n               <p className=\"font-semibold text-sm\">{inf.nome}</p>\r\n               <p className=\"text-xs text-muted-foreground\">\r\n                 Meta: <strong>R$ {inf.meta.toLocaleString('pt-BR')}</strong> ‚Äî Atingido:{' '}\r\n"
                },
                {
                    "date": 1746648790361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,14 +2,22 @@\n import { useEffect, useState } from 'react'\r\n import { Avatar, AvatarImage, AvatarFallback } from '@/components/ui/avatar'\r\n import { DateRange } from \"react-day-picker\"\r\n \r\n+type Influenciador = {\r\n+  nome: string\r\n+  imagem?: string\r\n+  meta: number\r\n+  atingido: number\r\n+}\r\n+\r\n+\r\n interface Props {\r\n   intervalo?: DateRange\r\n }\r\n \r\n export default function ListaInfluencers({ intervalo }: Props) {\r\n-  const [influenciadores, setInfluenciadores] = useState<Influencer[]>([])\r\n+  const [influenciadores, setInfluenciadores] = useState<Influenciador[]>([])\r\n \r\n   useEffect(() => {\r\n     fetch('/api/recargas')\r\n       .then(res => res.json())\r\n@@ -26,8 +34,9 @@\n         setInfluenciadores(filtrados)\r\n       })\r\n   }, [intervalo])\r\n \r\n+\r\n   return (\r\n     <div className=\"p-6\">\r\n       <h3 className=\"text-xl font-semibold mb-4\">üèÜ Influenciadores com Meta Batida</h3>\r\n       <div className=\"grid md:grid-cols-2 xl:grid-cols-3 gap-4\">\r\n@@ -35,12 +44,12 @@\n           <div\r\n             key={idx}\r\n             className=\"flex items-center gap-4 bg-muted/30 rounded-xl p-4 shadow-sm border\"\r\n           >\r\n-            <Avatar className=\"h-10 w-10\">\r\n-  <AvatarImage src={inf.cadastros_influenciadores?.influenciadores?.imagem} />\r\n-  <AvatarFallback>{inf.cadastros_influenciadores?.influenciadores?.nome?.charAt(0)}</AvatarFallback>\r\n-</Avatar>\r\n+            <Avatar className=\"w-10 h-10\">\r\n+              <AvatarImage src={inf.imagem} />\r\n+              <AvatarFallback>{inf.nome.charAt(0)}</AvatarFallback>\r\n+            </Avatar>\r\n             <div className=\"flex-1\">\r\n               <p className=\"font-semibold text-sm\">{inf.nome}</p>\r\n               <p className=\"text-xs text-muted-foreground\">\r\n                 Meta: <strong>R$ {inf.meta.toLocaleString('pt-BR')}</strong> ‚Äî Atingido:{' '}\r\n"
                },
                {
                    "date": 1746648798326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,12 +44,12 @@\n           <div\r\n             key={idx}\r\n             className=\"flex items-center gap-4 bg-muted/30 rounded-xl p-4 shadow-sm border\"\r\n           >\r\n-            <Avatar className=\"w-10 h-10\">\r\n-              <AvatarImage src={inf.imagem} />\r\n-              <AvatarFallback>{inf.nome.charAt(0)}</AvatarFallback>\r\n-            </Avatar>\r\n+            <Avatar className=\"h-10 w-10\">\r\n+  <AvatarImage src={inf.cadastros_influenciadores?.influenciadores?.imagem} />\r\n+  <AvatarFallback>{inf.cadastros_influenciadores?.influenciadores?.nome?.charAt(0)}</AvatarFallback>\r\n+</Avatar>\r\n             <div className=\"flex-1\">\r\n               <p className=\"font-semibold text-sm\">{inf.nome}</p>\r\n               <p className=\"text-xs text-muted-foreground\">\r\n                 Meta: <strong>R$ {inf.meta.toLocaleString('pt-BR')}</strong> ‚Äî Atingido:{' '}\r\n"
                },
                {
                    "date": 1746648890677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,16 +2,20 @@\n import { useEffect, useState } from 'react'\r\n import { Avatar, AvatarImage, AvatarFallback } from '@/components/ui/avatar'\r\n import { DateRange } from \"react-day-picker\"\r\n \r\n-type Influenciador = {\r\n-  nome: string\r\n-  imagem?: string\r\n+interface Influenciador {\r\n   meta: number\r\n   atingido: number\r\n+  cadastros_influenciadores: {\r\n+    influenciadores: {\r\n+      nome: string\r\n+      imagem?: string\r\n+    }\r\n+  }\r\n+  inicio: string\r\n }\r\n \r\n-\r\n interface Props {\r\n   intervalo?: DateRange\r\n }\r\n \r\n@@ -34,31 +38,34 @@\n         setInfluenciadores(filtrados)\r\n       })\r\n   }, [intervalo])\r\n \r\n-\r\n   return (\r\n     <div className=\"p-6\">\r\n       <h3 className=\"text-xl font-semibold mb-4\">üèÜ Influenciadores com Meta Batida</h3>\r\n       <div className=\"grid md:grid-cols-2 xl:grid-cols-3 gap-4\">\r\n-        {influenciadores.map((inf, idx) => (\r\n-          <div\r\n-            key={idx}\r\n-            className=\"flex items-center gap-4 bg-muted/30 rounded-xl p-4 shadow-sm border\"\r\n-          >\r\n-            <Avatar className=\"h-10 w-10\">\r\n-  <AvatarImage src={inf.cadastros_influenciadores?.influenciadores?.imagem} />\r\n-  <AvatarFallback>{inf.cadastros_influenciadores?.influenciadores?.nome?.charAt(0)}</AvatarFallback>\r\n-</Avatar>\r\n-            <div className=\"flex-1\">\r\n-              <p className=\"font-semibold text-sm\">{inf.nome}</p>\r\n-              <p className=\"text-xs text-muted-foreground\">\r\n-                Meta: <strong>R$ {inf.meta.toLocaleString('pt-BR')}</strong> ‚Äî Atingido:{' '}\r\n-                <strong className=\"text-green-600\">R$ {inf.atingido.toLocaleString('pt-BR')}</strong>\r\n-              </p>\r\n+        {influenciadores.map((inf, idx) => {\r\n+          const nome = inf.cadastros_influenciadores?.influenciadores?.nome || \"Sem nome\"\r\n+          const imagem = inf.cadastros_influenciadores?.influenciadores?.imagem\r\n+          return (\r\n+            <div\r\n+              key={idx}\r\n+              className=\"flex items-center gap-4 bg-muted/30 rounded-xl p-4 shadow-sm border\"\r\n+            >\r\n+              <Avatar className=\"h-10 w-10\">\r\n+                <AvatarImage src={imagem} />\r\n+                <AvatarFallback>{nome.charAt(0)}</AvatarFallback>\r\n+              </Avatar>\r\n+              <div className=\"flex-1\">\r\n+                <p className=\"font-semibold text-sm\">{nome}</p>\r\n+                <p className=\"text-xs text-muted-foreground\">\r\n+                  Meta: <strong>R$ {Number(inf.meta).toLocaleString('pt-BR')}</strong> ‚Äî Atingido:{' '}\r\n+                  <strong className=\"text-green-600\">R$ {Number(inf.atingido).toLocaleString('pt-BR')}</strong>\r\n+                </p>\r\n+              </div>\r\n             </div>\r\n-          </div>\r\n-        ))}\r\n+          )\r\n+        })}\r\n       </div>\r\n     </div>\r\n   )\r\n }\r\n"
                },
                {
                    "date": 1746648908301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+'use client'\r\n+import { useEffect, useState } from 'react'\r\n+import { Avatar, AvatarImage, AvatarFallback } from '@/components/ui/avatar'\r\n+import { DateRange } from \"react-day-picker\"\r\n+\r\n+interface Influenciador {\r\n+  meta: number\r\n+  atingido: number\r\n+  cadastros_influenciadores: {\r\n+    influenciadores: {\r\n+      nome: string\r\n+      imagem?: string\r\n+    }\r\n+  }\r\n+  inicio: string\r\n+}\r\n+\r\n+interface Props {\r\n+  intervalo?: DateRange\r\n+}\r\n+\r\n+export default function ListaInfluencers({ intervalo }: Props) {\r\n+  const [influenciadores, setInfluenciadores] = useState<Influenciador[]>([])\r\n+\r\n+  useEffect(() => {\r\n+    fetch('/api/recargas')\r\n+      .then(res => res.json())\r\n+      .then((data) => {\r\n+        const filtrados = data\r\n+          .filter((rec: any) => {\r\n+            if (!intervalo?.from || !intervalo?.to) return true\r\n+            const dataInicio = new Date(rec.inicio)\r\n+            return dataInicio >= new Date(intervalo.from) && dataInicio <= new Date(intervalo.to)\r\n+          })\r\n+          .filter((rec: any) => Number(rec.atingido) >= Number(rec.meta)) // meta batida\r\n+          .sort((a: any, b: any) => Number(b.meta) - Number(a.meta))       // maior meta primeiro\r\n+\r\n+        setInfluenciadores(filtrados)\r\n+      })\r\n+  }, [intervalo])\r\n+\r\n+  return (\r\n+    <div className=\"p-6\">\r\n+      <h3 className=\"text-xl font-semibold mb-4\">üèÜ Influenciadores com Meta Batida</h3>\r\n+      <div className=\"grid md:grid-cols-2 xl:grid-cols-3 gap-4\">\r\n+        {influenciadores.map((inf, idx) => {\r\n+          const nome = inf.cadastros_influenciadores?.influenciadores?.nome || \"Sem nome\"\r\n+          const imagem = inf.cadastros_influenciadores?.influenciadores?.imagem\r\n+          return (\r\n+            <div\r\n+              key={idx}\r\n+              className=\"flex items-center gap-4 bg-muted/30 rounded-xl p-4 shadow-sm border\"\r\n+            >\r\n+              <Avatar className=\"h-10 w-10\">\r\n+                <AvatarImage src={imagem} />\r\n+                <AvatarFallback>{nome.charAt(0)}</AvatarFallback>\r\n+              </Avatar>\r\n+              <div className=\"flex-1\">\r\n+                <p className=\"font-semibold text-sm\">{nome}</p>\r\n+                <p className=\"text-xs text-muted-foreground\">\r\n+                  Meta: <strong>R$ {Number(inf.meta).toLocaleString('pt-BR')}</strong> ‚Äî Atingido:{' '}\r\n+                  <strong className=\"text-green-600\">R$ {Number(inf.atingido).toLocaleString('pt-BR')}</strong>\r\n+                </p>\r\n+              </div>\r\n+            </div>\r\n+          )\r\n+        })}\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1746649043786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,20 +25,24 @@\n   useEffect(() => {\r\n     fetch('/api/recargas')\r\n       .then(res => res.json())\r\n       .then((data) => {\r\n+        const from = intervalo?.from ? new Date(intervalo.from) : null\r\n+        const to = intervalo?.to ? new Date(intervalo.to) : null\r\n+  \r\n         const filtrados = data\r\n           .filter((rec: any) => {\r\n-            if (!intervalo?.from || !intervalo?.to) return true\r\n+            if (!from || !to) return true\r\n             const dataInicio = new Date(rec.inicio)\r\n-            return dataInicio >= new Date(intervalo.from) && dataInicio <= new Date(intervalo.to)\r\n+            return dataInicio >= from && dataInicio <= to\r\n           })\r\n-          .filter((rec: any) => Number(rec.atingido) >= Number(rec.meta)) // meta batida\r\n-          .sort((a: any, b: any) => Number(b.meta) - Number(a.meta))       // maior meta primeiro\r\n-\r\n+          .filter((rec: any) => Number(rec.atingido) >= Number(rec.meta))\r\n+          .sort((a: any, b: any) => Number(b.meta) - Number(a.meta))\r\n+  \r\n         setInfluenciadores(filtrados)\r\n       })\r\n   }, [intervalo])\r\n+  \r\n \r\n   return (\r\n     <div className=\"p-6\">\r\n       <h3 className=\"text-xl font-semibold mb-4\">üèÜ Influenciadores com Meta Batida</h3>\r\n@@ -68,75 +72,4 @@\n       </div>\r\n     </div>\r\n   )\r\n }\r\n-'use client'\r\n-import { useEffect, useState } from 'react'\r\n-import { Avatar, AvatarImage, AvatarFallback } from '@/components/ui/avatar'\r\n-import { DateRange } from \"react-day-picker\"\r\n-\r\n-interface Influenciador {\r\n-  meta: number\r\n-  atingido: number\r\n-  cadastros_influenciadores: {\r\n-    influenciadores: {\r\n-      nome: string\r\n-      imagem?: string\r\n-    }\r\n-  }\r\n-  inicio: string\r\n-}\r\n-\r\n-interface Props {\r\n-  intervalo?: DateRange\r\n-}\r\n-\r\n-export default function ListaInfluencers({ intervalo }: Props) {\r\n-  const [influenciadores, setInfluenciadores] = useState<Influenciador[]>([])\r\n-\r\n-  useEffect(() => {\r\n-    fetch('/api/recargas')\r\n-      .then(res => res.json())\r\n-      .then((data) => {\r\n-        const filtrados = data\r\n-          .filter((rec: any) => {\r\n-            if (!intervalo?.from || !intervalo?.to) return true\r\n-            const dataInicio = new Date(rec.inicio)\r\n-            return dataInicio >= new Date(intervalo.from) && dataInicio <= new Date(intervalo.to)\r\n-          })\r\n-          .filter((rec: any) => Number(rec.atingido) >= Number(rec.meta)) // meta batida\r\n-          .sort((a: any, b: any) => Number(b.meta) - Number(a.meta))       // maior meta primeiro\r\n-\r\n-        setInfluenciadores(filtrados)\r\n-      })\r\n-  }, [intervalo])\r\n-\r\n-  return (\r\n-    <div className=\"p-6\">\r\n-      <h3 className=\"text-xl font-semibold mb-4\">üèÜ Influenciadores com Meta Batida</h3>\r\n-      <div className=\"grid md:grid-cols-2 xl:grid-cols-3 gap-4\">\r\n-        {influenciadores.map((inf, idx) => {\r\n-          const nome = inf.cadastros_influenciadores?.influenciadores?.nome || \"Sem nome\"\r\n-          const imagem = inf.cadastros_influenciadores?.influenciadores?.imagem\r\n-          return (\r\n-            <div\r\n-              key={idx}\r\n-              className=\"flex items-center gap-4 bg-muted/30 rounded-xl p-4 shadow-sm border\"\r\n-            >\r\n-              <Avatar className=\"h-10 w-10\">\r\n-                <AvatarImage src={imagem} />\r\n-                <AvatarFallback>{nome.charAt(0)}</AvatarFallback>\r\n-              </Avatar>\r\n-              <div className=\"flex-1\">\r\n-                <p className=\"font-semibold text-sm\">{nome}</p>\r\n-                <p className=\"text-xs text-muted-foreground\">\r\n-                  Meta: <strong>R$ {Number(inf.meta).toLocaleString('pt-BR')}</strong> ‚Äî Atingido:{' '}\r\n-                  <strong className=\"text-green-600\">R$ {Number(inf.atingido).toLocaleString('pt-BR')}</strong>\r\n-                </p>\r\n-              </div>\r\n-            </div>\r\n-          )\r\n-        })}\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n"
                }
            ],
            "date": 1746648480784,
            "name": "Commit-0",
            "content": "'use client'\r\nimport { useEffect, useState } from 'react'\r\n\r\ntype Influenciador = {\r\n  nome: string\r\n  imagem?: string\r\n  meta: number\r\n  atingido: number\r\n}\r\n\r\nexport default function ListaInfluencers() {\r\n  const [influenciadores, setInfluenciadores] = useState<Influenciador[]>([])\r\n\r\n  useEffect(() => {\r\n    fetch('/api/recargas')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        const comMetaBatida = data\r\n          .filter((r: any) => Number(r.atingido) >= Number(r.meta))\r\n          .map((r: any) => ({\r\n            nome: r.cadastros_influenciadores?.influenciadores?.nome || 'Sem nome',\r\n            imagem: r.cadastros_influenciadores?.influenciadores?.imagem || '/images/avatar/avatar.png',\r\n            meta: Number(r.meta),\r\n            atingido: Number(r.atingido),\r\n          }))\r\n          .sort((a: { meta: number }, b: { meta: number }) => b.meta - a.meta) // ou b.atingido - a.atingido\r\n\r\n        setInfluenciadores(comMetaBatida)\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h3 className=\"text-xl font-semibold mb-4\">üèÜ Influenciadores com Meta Batida</h3>\r\n      <div className=\"grid md:grid-cols-2 xl:grid-cols-3 gap-4\">\r\n        {influenciadores.map((inf, idx) => (\r\n          <div\r\n            key={idx}\r\n            className=\"flex items-center gap-4 bg-muted/30 rounded-xl p-4 shadow-sm border\"\r\n          >\r\n            <img\r\n              src={inf.imagem}\r\n              alt={inf.nome}\r\n              className=\"w-12 h-12 rounded-full object-cover\"\r\n            />\r\n            <div className=\"flex-1\">\r\n              <p className=\"font-semibold text-sm\">{inf.nome}</p>\r\n              <p className=\"text-xs text-muted-foreground\">\r\n                Meta: <strong>R$ {inf.meta.toLocaleString('pt-BR')}</strong> ‚Äî Atingido: <strong className=\"text-green-600\">R$ {inf.atingido.toLocaleString('pt-BR')}</strong>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"
        }
    ]
}