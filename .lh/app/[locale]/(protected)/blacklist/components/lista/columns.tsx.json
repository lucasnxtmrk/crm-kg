{
    "sourceFile": "app/[locale]/(protected)/blacklist/components/lista/columns.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1745873404039,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1745873450231,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n \r\n export const getColumns = ({ onView }: Props): ColumnDef<Influenciador>[] => [\r\n \r\n   {\r\n-    accessorKey: 'dataCadastro',\r\n+    accessorKey: 'data_cadastro',\r\n     header: ({ column }) => (\r\n       <button\r\n         onClick={() => column.toggleSorting(column.getIsSorted() === 'asc')}\r\n         className=\"flex items-center gap-1\"\r\n@@ -27,9 +27,9 @@\n         {column.getIsSorted() === 'asc' ? '⬆️' : column.getIsSorted() === 'desc' ? '⬇️' : ''}\r\n       </button>\r\n     ),\r\n     cell: ({ row }) => {\r\n-      const data = row.original.dataCadastro;\r\n+      const data = row.original.data_cadastro;\r\n       \r\n       if (!data) return <span className=\"text-muted-foreground\">Sem data</span>;\r\n     \r\n       const [ano, mes, dia] = data.split('-');\r\n"
                },
                {
                    "date": 1745873507780,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,13 +28,18 @@\n       </button>\r\n     ),\r\n     cell: ({ row }) => {\r\n       const data = row.original.data_cadastro;\r\n-      \r\n       if (!data) return <span className=\"text-muted-foreground\">Sem data</span>;\r\n-    \r\n-      const [ano, mes, dia] = data.split('-');\r\n-      return <span>{`${dia}/${mes}/${ano}`}</span>;\r\n+\r\n+      const dataFormatada = typeof data === 'string' ? new Date(data) : data;\r\n+      return (\r\n+        <span>\r\n+          {String(dataFormatada.getDate()).padStart(2, '0')}/\r\n+          {String(dataFormatada.getMonth() + 1).padStart(2, '0')}/\r\n+          {dataFormatada.getFullYear()}\r\n+        </span>\r\n+      );\r\n     },\r\n   },\r\n   {\r\n     accessorKey: 'nome',\r\n"
                },
                {
                    "date": 1745873518173,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n         target=\"_blank\"\r\n         rel=\"noopener noreferrer\"\r\n         className=\"text-blue-600 underline text-sm\"\r\n       >\r\n-        @{row.original.instagram.replace('https://instagram.com/', '')}\r\n+        {row.original.instagram.replace('https://instagram.com/', '')}\r\n       </a>\r\n     ),\r\n   },\r\n   {\r\n"
                },
                {
                    "date": 1745877770130,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,27 +85,30 @@\n   {\r\n     id: 'meta',\r\n     header: 'Meta',\r\n     cell: ({ row }) => {\r\n-      const rel = row.original.relacoes?.[0] ?? {};\r\n-      return <span>R$ {rel?.meta?.toLocaleString('pt-BR') || '0'}</span>;\r\n+      const cadastro = row.original.cadastros_influenciadores?.[0];\r\n+const recarga = cadastro?.recargas?.[0];\r\n+return <span>R$ {recarga?.meta?.toLocaleString('pt-BR') || '0'}</span>;\r\n     },\r\n   },\r\n   {\r\n     id: 'atingido',\r\n     header: 'Atingido',\r\n     cell: ({ row }) => {\r\n-      const rel = row.original.relacoes?.[0] ?? {};\r\n-      return <span>R$ {rel?.atingido?.toLocaleString('pt-BR') || '0'}</span>;\r\n+      const cadastro = row.original.cadastros_influenciadores?.[0];\r\n+const recarga = cadastro?.recargas?.[0];\r\n+return <span>R$ {recarga?.meta?.toLocaleString('pt-BR') || '0'}</span>;\r\n     },\r\n   },\r\n   {\r\n     id: 'reembolso',\r\n     header: 'Reembolso',\r\n     cell: ({ row }) => {\r\n-      const rel = row.original.relacoes?.[0] ?? {};\r\n-      const meta = rel?.meta || 0;\r\n-      const atingido = rel?.atingido || 0;\r\n+      const cadastro = row.original.cadastros_influenciadores?.[0];\r\n+const recarga = cadastro?.recargas?.[0];\r\n+      const meta = recarga?.meta || 0;\r\n+      const atingido = recarga?.atingido || 0;\r\n       const reembolso = meta > atingido ? meta - atingido : 0;\r\n   \r\n       const reembolsoClass =\r\n         reembolso > 0 ? 'text-red-500 font-medium' : 'text-green-600 font-medium';\r\n@@ -119,11 +122,12 @@\n     header: () => (\r\n       <div className=\"w-full text-center font-medium\">Status da Meta</div>\r\n     ),\r\n     cell: ({ row }) => {\r\n-      const rel = row.original.relacoes?.[0] ?? {};\r\n-      const meta = rel?.meta || 0;\r\n-      const atingido = rel?.atingido || 0;\r\n+      const cadastro = row.original.cadastros_influenciadores?.[0];\r\n+const recarga = cadastro?.recargas?.[0];\r\n+      const meta = recarga?.meta || 0;\r\n+      const atingido = recarga?.atingido || 0;\r\n   \r\n       const statusLabel =\r\n         meta === 0 && atingido === 0\r\n           ? 'Meta indefinida'\r\n"
                }
            ],
            "date": 1745873404039,
            "name": "Commit-0",
            "content": "'use client';\r\n\r\nimport { ColumnDef } from '@tanstack/react-table';\r\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\r\nimport { Checkbox } from '@/components/ui/checkbox';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Eye, SquarePen, Trash2 } from 'lucide-react';\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\r\nimport { cn } from '@/lib/utils';\r\nimport { Influenciador } from '@/lib/types';\r\n\r\n\r\ntype Props = {\r\n  onView: (influenciador: Influenciador) => void;\r\n};\r\n\r\nexport const getColumns = ({ onView }: Props): ColumnDef<Influenciador>[] => [\r\n\r\n  {\r\n    accessorKey: 'dataCadastro',\r\n    header: ({ column }) => (\r\n      <button\r\n        onClick={() => column.toggleSorting(column.getIsSorted() === 'asc')}\r\n        className=\"flex items-center gap-1\"\r\n      >\r\n        Data de Cadastro{' '}\r\n        {column.getIsSorted() === 'asc' ? '⬆️' : column.getIsSorted() === 'desc' ? '⬇️' : ''}\r\n      </button>\r\n    ),\r\n    cell: ({ row }) => {\r\n      const data = row.original.dataCadastro;\r\n      \r\n      if (!data) return <span className=\"text-muted-foreground\">Sem data</span>;\r\n    \r\n      const [ano, mes, dia] = data.split('-');\r\n      return <span>{`${dia}/${mes}/${ano}`}</span>;\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'nome',\r\n    header: ({ column }) => (\r\n      <button\r\n        onClick={() => column.toggleSorting(column.getIsSorted() === 'asc')}\r\n        className=\"flex items-center gap-1\"\r\n      >\r\n        Nome {column.getIsSorted() === 'asc' ? '⬆️' : column.getIsSorted() === 'desc' ? '⬇️' : ''}\r\n      </button>\r\n    ),\r\n    cell: ({ row }) => {\r\n      const { nome, imagem } = row.original;\r\n      return (\r\n        <div className=\"flex items-center gap-3\">\r\n          <Avatar className=\"w-8 h-8\">\r\n            {imagem ? <AvatarImage src={imagem} /> : <AvatarFallback>INF</AvatarFallback>}\r\n          </Avatar>\r\n          <span>{nome}</span>\r\n        </div>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    accessorKey: 'instagram',\r\n    header: 'Instagram',\r\n    cell: ({ row }) => (\r\n      <a\r\n        href={row.original.instagram}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        className=\"text-blue-600 underline text-sm\"\r\n      >\r\n        @{row.original.instagram.replace('https://instagram.com/', '')}\r\n      </a>\r\n    ),\r\n  },\r\n  {\r\n    accessorKey: 'cpf',\r\n    header: 'CPF',\r\n    cell: ({ row }) => <span>{row.original.cpf}</span>,\r\n  },\r\n  {\r\n    id: 'meta',\r\n    header: 'Meta',\r\n    cell: ({ row }) => {\r\n      const rel = row.original.relacoes?.[0] ?? {};\r\n      return <span>R$ {rel?.meta?.toLocaleString('pt-BR') || '0'}</span>;\r\n    },\r\n  },\r\n  {\r\n    id: 'atingido',\r\n    header: 'Atingido',\r\n    cell: ({ row }) => {\r\n      const rel = row.original.relacoes?.[0] ?? {};\r\n      return <span>R$ {rel?.atingido?.toLocaleString('pt-BR') || '0'}</span>;\r\n    },\r\n  },\r\n  {\r\n    id: 'reembolso',\r\n    header: 'Reembolso',\r\n    cell: ({ row }) => {\r\n      const rel = row.original.relacoes?.[0] ?? {};\r\n      const meta = rel?.meta || 0;\r\n      const atingido = rel?.atingido || 0;\r\n      const reembolso = meta > atingido ? meta - atingido : 0;\r\n  \r\n      const reembolsoClass =\r\n        reembolso > 0 ? 'text-red-500 font-medium' : 'text-green-600 font-medium';\r\n  \r\n      return <span className={reembolsoClass}>R$ {reembolso.toLocaleString('pt-BR')}</span>;\r\n    },\r\n  },\r\n  \r\n  {\r\n    id: 'statusMeta',\r\n    header: () => (\r\n      <div className=\"w-full text-center font-medium\">Status da Meta</div>\r\n    ),\r\n    cell: ({ row }) => {\r\n      const rel = row.original.relacoes?.[0] ?? {};\r\n      const meta = rel?.meta || 0;\r\n      const atingido = rel?.atingido || 0;\r\n  \r\n      const statusLabel =\r\n        meta === 0 && atingido === 0\r\n          ? 'Meta indefinida'\r\n          : atingido >= meta\r\n          ? 'Meta batida'\r\n          : 'Meta pendente';\r\n  \r\n      const statusClass =\r\n        meta === 0 && atingido === 0\r\n          ? 'bg-muted text-muted-foreground'\r\n          : atingido >= meta\r\n          ? 'bg-green-500 text-white'\r\n          : 'bg-yellow-400 text-yellow-900';\r\n  \r\n      return (\r\n        <div\r\n          className={cn(\r\n            'w-[140px] mx-auto flex items-center justify-center px-2 py-1 rounded-full text-xs font-medium text-center whitespace-nowrap transition',\r\n            statusClass\r\n          )}\r\n        >\r\n          {statusLabel}\r\n        </div>\r\n      );\r\n    },\r\n  },\r\n  \r\n  {\r\n    id: 'actions',\r\n    header: 'Ações',\r\n    cell: ({ row }) => (\r\n      <div className=\"flex gap-2\">\r\n        <TooltipProvider>\r\n          <Tooltip>\r\n            <TooltipTrigger asChild>\r\n              <Button\r\n                size=\"icon\"\r\n                variant=\"outline\"\r\n                onClick={() => onView(row.original)}\r\n              >\r\n                <Eye className=\"w-4 h-4\" />\r\n              </Button>\r\n            </TooltipTrigger>\r\n            <TooltipContent>Visualizar</TooltipContent>\r\n          </Tooltip>\r\n        </TooltipProvider>\r\n\r\n        {/* Apagando o botão \"Editar\" */}\r\n\r\n        <TooltipProvider>\r\n          <Tooltip>\r\n            <TooltipTrigger asChild>\r\n              <Button size=\"icon\" variant=\"outline\">\r\n                <Trash2 className=\"w-4 h-4\" />\r\n              </Button>\r\n            </TooltipTrigger>\r\n            <TooltipContent>Excluir</TooltipContent>\r\n          </Tooltip>\r\n        </TooltipProvider>\r\n      </div>\r\n    ),\r\n  },\r\n];\r\n"
        }
    ]
}