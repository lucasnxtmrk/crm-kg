{
    "sourceFile": "app/[locale]/(protected)/reembolsos/components/lista/columns.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 17,
            "patches": [
                {
                    "date": 1745871994772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1745872003104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,20 +92,34 @@\n     cell: ({ row }) => {\r\n       const status = row.original.reembolsoStatus;\r\n   \r\n       return (\r\n-        <ShadSelect value={status} onValueChange={(value) => onUpdateStatus(row.original.recargaId, value as any)}>\r\n-          <SelectTrigger className=\"w-[120px]\">\r\n-            <SelectValue placeholder=\"Status\" />\r\n-          </SelectTrigger>\r\n-          <SelectContent>\r\n-            <SelectItem value=\"pendente\">Pendente</SelectItem>\r\n-            <SelectItem value=\"pago\">Pago</SelectItem>\r\n-          </SelectContent>\r\n-        </ShadSelect>\r\n+        <div className=\"flex items-center gap-2\">\r\n+          {/* Badge colorido */}\r\n+          <span\r\n+            className={`\r\n+              text-xs font-semibold px-2 py-1 rounded-full\r\n+              ${status === 'pendente' ? 'bg-orange-100 text-orange-700' : 'bg-green-100 text-green-700'}\r\n+            `}\r\n+          >\r\n+            {status === 'pendente' ? 'Pendente' : 'Pago'}\r\n+          </span>\r\n+  \r\n+          {/* Dropdown para mudar o status */}\r\n+          <ShadSelect value={status} onValueChange={(value) => onUpdateStatus(row.original.recargaId, value as any)}>\r\n+            <SelectTrigger className=\"w-[120px]\">\r\n+              <SelectValue placeholder=\"Status\" />\r\n+            </SelectTrigger>\r\n+            <SelectContent>\r\n+              <SelectItem value=\"pendente\">Pendente</SelectItem>\r\n+              <SelectItem value=\"pago\">Pago</SelectItem>\r\n+            </SelectContent>\r\n+          </ShadSelect>\r\n+        </div>\r\n       );\r\n     },\r\n   },\r\n+  \r\n   {\r\n     id: 'actions',\r\n     header: 'Ações',\r\n     cell: ({ row }) => (\r\n"
                },
                {
                    "date": 1745872351383,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,10 +2,17 @@\n import { Select as ShadSelect, SelectTrigger, SelectValue, SelectContent, SelectItem } from \"@/components/ui/select\";\r\n import { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\r\n import { Button } from \"@/components/ui/button\";\r\n import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";\r\n-import { Eye } from \"lucide-react\";\r\n+import { MoreVertical, Eye } from \"lucide-react\";\r\n+import {\r\n+  DropdownMenu,\r\n+  DropdownMenuContent,\r\n+  DropdownMenuItem,\r\n+  DropdownMenuTrigger,\r\n+} from \"@/components/ui/dropdown-menu\"; // já vem no seu shadcn\r\n \r\n+\r\n export type LinhaReembolso = {\r\n   recargaId: string;\r\n   nome: string;\r\n   imagem?: string;\r\n@@ -121,20 +128,31 @@\n   \r\n   {\r\n     id: 'actions',\r\n     header: 'Ações',\r\n-    cell: ({ row }) => (\r\n-      <div className=\"flex gap-2\">\r\n-        <TooltipProvider>\r\n-          <Tooltip>\r\n-            <TooltipTrigger asChild>\r\n-              <Button size=\"icon\" variant=\"outline\" onClick={() => onView(row.original)}>\r\n-                <Eye className=\"w-4 h-4\" />\r\n-              </Button>\r\n-            </TooltipTrigger>\r\n-            <TooltipContent>Visualizar</TooltipContent>\r\n-          </Tooltip>\r\n-        </TooltipProvider>\r\n-      </div>\r\n-    ),\r\n+    cell: ({ row }) => {\r\n+      const status = row.original.reembolsoStatus;\r\n+      return (\r\n+        <DropdownMenu>\r\n+          <DropdownMenuTrigger asChild>\r\n+            <Button size=\"icon\" variant=\"outline\">\r\n+              <MoreVertical className=\"w-4 h-4\" />\r\n+            </Button>\r\n+          </DropdownMenuTrigger>\r\n+          <DropdownMenuContent align=\"end\">\r\n+            <DropdownMenuItem onClick={() => onView(row.original)}>\r\n+              <Eye className=\"w-4 h-4 mr-2\" />\r\n+              Ver Influenciador\r\n+            </DropdownMenuItem>\r\n+            <DropdownMenuItem disabled>\r\n+              {status === 'pendente' ? (\r\n+                <span className=\"text-orange-500 font-semibold\">Pendente</span>\r\n+              ) : (\r\n+                <span className=\"text-green-600 font-semibold\">Pago</span>\r\n+              )}\r\n+            </DropdownMenuItem>\r\n+          </DropdownMenuContent>\r\n+        </DropdownMenu>\r\n+      );\r\n+    },\r\n   },\r\n ];\r\n"
                },
                {
                    "date": 1745872383178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,9 +142,9 @@\n             <DropdownMenuItem onClick={() => onView(row.original)}>\r\n               <Eye className=\"w-4 h-4 mr-2\" />\r\n               Ver Influenciador\r\n             </DropdownMenuItem>\r\n-            <DropdownMenuItem disabled>\r\n+            <DropdownMenuItem>\r\n               {status === 'pendente' ? (\r\n                 <span className=\"text-orange-500 font-semibold\">Pendente</span>\r\n               ) : (\r\n                 <span className=\"text-green-600 font-semibold\">Pago</span>\r\n"
                },
                {
                    "date": 1745872504248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,16 @@\n import { ColumnDef } from \"@tanstack/react-table\";\r\n-import { Select as ShadSelect, SelectTrigger, SelectValue, SelectContent, SelectItem } from \"@/components/ui/select\";\r\n import { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\r\n import { Button } from \"@/components/ui/button\";\r\n import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";\r\n-import { MoreVertical, Eye } from \"lucide-react\";\r\n+import { Eye, MoreVertical } from \"lucide-react\";\r\n import {\r\n   DropdownMenu,\r\n   DropdownMenuContent,\r\n   DropdownMenuItem,\r\n-  DropdownMenuTrigger,\r\n-} from \"@/components/ui/dropdown-menu\"; // já vem no seu shadcn\r\n+  DropdownMenuTrigger\r\n+} from \"@/components/ui/dropdown-menu\";\r\n \r\n-\r\n export type LinhaReembolso = {\r\n   recargaId: string;\r\n   nome: string;\r\n   imagem?: string;\r\n@@ -94,65 +92,48 @@\n     ),\r\n   },\r\n   {\r\n     accessorKey: \"reembolsoStatus\",\r\n-    header: \"Status do Reembolso\",\r\n-    cell: ({ row }) => {\r\n-      const status = row.original.reembolsoStatus;\r\n-  \r\n-      return (\r\n-        <div className=\"flex items-center gap-2\">\r\n-          {/* Badge colorido */}\r\n-          <span\r\n-            className={`\r\n-              text-xs font-semibold px-2 py-1 rounded-full\r\n-              ${status === 'pendente' ? 'bg-orange-100 text-orange-700' : 'bg-green-100 text-green-700'}\r\n-            `}\r\n-          >\r\n-            {status === 'pendente' ? 'Pendente' : 'Pago'}\r\n-          </span>\r\n-  \r\n-          {/* Dropdown para mudar o status */}\r\n-          <ShadSelect value={status} onValueChange={(value) => onUpdateStatus(row.original.recargaId, value as any)}>\r\n-            <SelectTrigger className=\"w-[120px]\">\r\n-              <SelectValue placeholder=\"Status\" />\r\n-            </SelectTrigger>\r\n-            <SelectContent>\r\n-              <SelectItem value=\"pendente\">Pendente</SelectItem>\r\n-              <SelectItem value=\"pago\">Pago</SelectItem>\r\n-            </SelectContent>\r\n-          </ShadSelect>\r\n-        </div>\r\n-      );\r\n-    },\r\n+    header: \"Status\",\r\n+    cell: ({ row }) => (\r\n+      <div>\r\n+        <span\r\n+          className={`px-2 py-1 text-xs rounded-full font-semibold ${\r\n+            row.original.reembolsoStatus === \"pendente\"\r\n+              ? \"bg-yellow-400/20 text-yellow-600\"\r\n+              : \"bg-green-400/20 text-green-600\"\r\n+          }`}\r\n+        >\r\n+          {row.original.reembolsoStatus === \"pendente\" ? \"Pendente\" : \"Pago\"}\r\n+        </span>\r\n+      </div>\r\n+    ),\r\n   },\r\n-  \r\n   {\r\n-    id: 'actions',\r\n-    header: 'Ações',\r\n-    cell: ({ row }) => {\r\n-      const status = row.original.reembolsoStatus;\r\n-      return (\r\n-        <DropdownMenu>\r\n-          <DropdownMenuTrigger asChild>\r\n-            <Button size=\"icon\" variant=\"outline\">\r\n-              <MoreVertical className=\"w-4 h-4\" />\r\n-            </Button>\r\n-          </DropdownMenuTrigger>\r\n-          <DropdownMenuContent align=\"end\">\r\n-            <DropdownMenuItem onClick={() => onView(row.original)}>\r\n-              <Eye className=\"w-4 h-4 mr-2\" />\r\n-              Ver Influenciador\r\n+    id: \"actions\",\r\n+    header: \"Ações\",\r\n+    cell: ({ row }) => (\r\n+      <DropdownMenu>\r\n+        <DropdownMenuTrigger asChild>\r\n+          <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\r\n+            <span className=\"sr-only\">Abrir menu</span>\r\n+            <MoreVertical className=\"h-4 w-4\" />\r\n+          </Button>\r\n+        </DropdownMenuTrigger>\r\n+        <DropdownMenuContent align=\"end\">\r\n+          <DropdownMenuItem onClick={() => onView(row.original)}>\r\n+            Ver Influenciador\r\n+          </DropdownMenuItem>\r\n+          {row.original.reembolsoStatus === \"pendente\" ? (\r\n+            <DropdownMenuItem onClick={() => onUpdateStatus(row.original.recargaId, \"pago\")}>\r\n+              Marcar como Pago\r\n             </DropdownMenuItem>\r\n-            <DropdownMenuItem>\r\n-              {status === 'pendente' ? (\r\n-                <span className=\"text-orange-500 font-semibold\">Pendente</span>\r\n-              ) : (\r\n-                <span className=\"text-green-600 font-semibold\">Pago</span>\r\n-              )}\r\n+          ) : (\r\n+            <DropdownMenuItem onClick={() => onUpdateStatus(row.original.recargaId, \"pendente\")}>\r\n+              Marcar como Pendente\r\n             </DropdownMenuItem>\r\n-          </DropdownMenuContent>\r\n-        </DropdownMenu>\r\n-      );\r\n-    },\r\n+          )}\r\n+        </DropdownMenuContent>\r\n+      </DropdownMenu>\r\n+    ),\r\n   },\r\n ];\r\n"
                },
                {
                    "date": 1745872760551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { ColumnDef } from \"@tanstack/react-table\";\r\n import { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\r\n import { Button } from \"@/components/ui/button\";\r\n import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";\r\n-import { Eye, MoreVertical } from \"lucide-react\";\r\n+import { Eye, MoreVertical, User } from \"lucide-react\";\r\n import {\r\n   DropdownMenu,\r\n   DropdownMenuContent,\r\n   DropdownMenuItem,\r\n@@ -37,8 +37,9 @@\n     cell: ({ row }) => {\r\n       const { nome, imagem } = row.original;\r\n       return (\r\n         <div className=\"flex items-center gap-2\">\r\n+          <User className=\"w-4 h-4 text-muted-foreground\" /> {/* Ícone antes do nome */}\r\n           <Avatar className=\"w-8 h-8\">\r\n             {imagem ? <AvatarImage src={imagem} /> : <AvatarFallback>INF</AvatarFallback>}\r\n           </Avatar>\r\n           <span>{nome}</span>\r\n@@ -118,19 +119,19 @@\n             <span className=\"sr-only\">Abrir menu</span>\r\n             <MoreVertical className=\"h-4 w-4\" />\r\n           </Button>\r\n         </DropdownMenuTrigger>\r\n-        <DropdownMenuContent align=\"end\">\r\n+        <DropdownMenuContent align=\"end\" className=\"w-44\">\r\n           <DropdownMenuItem onClick={() => onView(row.original)}>\r\n-            Ver Influenciador\r\n+            👁 Ver Influenciador\r\n           </DropdownMenuItem>\r\n           {row.original.reembolsoStatus === \"pendente\" ? (\r\n             <DropdownMenuItem onClick={() => onUpdateStatus(row.original.recargaId, \"pago\")}>\r\n-              Marcar como Pago\r\n+              ✅ Marcar como Pago\r\n             </DropdownMenuItem>\r\n           ) : (\r\n             <DropdownMenuItem onClick={() => onUpdateStatus(row.original.recargaId, \"pendente\")}>\r\n-              Marcar como Pendente\r\n+              ⏳ Marcar como Pendente\r\n             </DropdownMenuItem>\r\n           )}\r\n         </DropdownMenuContent>\r\n       </DropdownMenu>\r\n"
                },
                {
                    "date": 1745872783980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,8 @@\n     cell: ({ row }) => {\r\n       const { nome, imagem } = row.original;\r\n       return (\r\n         <div className=\"flex items-center gap-2\">\r\n-          <User className=\"w-4 h-4 text-muted-foreground\" /> {/* Ícone antes do nome */}\r\n           <Avatar className=\"w-8 h-8\">\r\n             {imagem ? <AvatarImage src={imagem} /> : <AvatarFallback>INF</AvatarFallback>}\r\n           </Avatar>\r\n           <span>{nome}</span>\r\n"
                },
                {
                    "date": 1745872799952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n         target=\"_blank\"\r\n         rel=\"noopener noreferrer\"\r\n         className=\"text-blue-600 underline text-sm\"\r\n       >\r\n-        @{row.original.instagram}\r\n+        {row.original.instagram}\r\n       </a>\r\n     ),\r\n   },\r\n   {\r\n"
                },
                {
                    "date": 1745872846504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,13 +124,13 @@\n             👁 Ver Influenciador\r\n           </DropdownMenuItem>\r\n           {row.original.reembolsoStatus === \"pendente\" ? (\r\n             <DropdownMenuItem onClick={() => onUpdateStatus(row.original.recargaId, \"pago\")}>\r\n-              ✅ Marcar como Pago\r\n+              ✅ Pago\r\n             </DropdownMenuItem>\r\n           ) : (\r\n             <DropdownMenuItem onClick={() => onUpdateStatus(row.original.recargaId, \"pendente\")}>\r\n-              ⏳ Marcar como Pendente\r\n+              ❌ Pendente\r\n             </DropdownMenuItem>\r\n           )}\r\n         </DropdownMenuContent>\r\n       </DropdownMenu>\r\n"
                },
                {
                    "date": 1745872879572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,9 +113,9 @@\n     header: \"Ações\",\r\n     cell: ({ row }) => (\r\n       <DropdownMenu>\r\n         <DropdownMenuTrigger asChild>\r\n-          <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\r\n+          <Button variant=\"default\" className=\"h-8 w-8 p-0\">\r\n             <span className=\"sr-only\">Abrir menu</span>\r\n             <MoreVertical className=\"h-4 w-4\" />\r\n           </Button>\r\n         </DropdownMenuTrigger>\r\n"
                },
                {
                    "date": 1745872904948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,9 +113,9 @@\n     header: \"Ações\",\r\n     cell: ({ row }) => (\r\n       <DropdownMenu>\r\n         <DropdownMenuTrigger asChild>\r\n-          <Button variant=\"default\" className=\"h-8 w-8 p-0\">\r\n+          <Button variant=\"ghost\" className=\" text-gray-500 h-8 w-8 p-0\">\r\n             <span className=\"sr-only\">Abrir menu</span>\r\n             <MoreVertical className=\"h-4 w-4\" />\r\n           </Button>\r\n         </DropdownMenuTrigger>\r\n"
                },
                {
                    "date": 1745872971507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,11 +113,11 @@\n     header: \"Ações\",\r\n     cell: ({ row }) => (\r\n       <DropdownMenu>\r\n         <DropdownMenuTrigger asChild>\r\n-          <Button variant=\"ghost\" className=\" text-gray-500 h-8 w-8 p-0\">\r\n+          <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\r\n             <span className=\"sr-only\">Abrir menu</span>\r\n-            <MoreVertical className=\"h-4 w-4\" />\r\n+            <MoreVertical className=\" bg-black h-4 w-4\" />\r\n           </Button>\r\n         </DropdownMenuTrigger>\r\n         <DropdownMenuContent align=\"end\" className=\"w-44\">\r\n           <DropdownMenuItem onClick={() => onView(row.original)}>\r\n"
                },
                {
                    "date": 1745872992453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,9 +113,9 @@\n     header: \"Ações\",\r\n     cell: ({ row }) => (\r\n       <DropdownMenu>\r\n         <DropdownMenuTrigger asChild>\r\n-          <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\r\n+          <Button variant=\"ghost\" className=\"h-8 w-8 p-0 text-muted-foreground hover:bg-muted\">\r\n             <span className=\"sr-only\">Abrir menu</span>\r\n             <MoreVertical className=\" bg-black h-4 w-4\" />\r\n           </Button>\r\n         </DropdownMenuTrigger>\r\n"
                },
                {
                    "date": 1745873043970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,9 +115,9 @@\n       <DropdownMenu>\r\n         <DropdownMenuTrigger asChild>\r\n           <Button variant=\"ghost\" className=\"h-8 w-8 p-0 text-muted-foreground hover:bg-muted\">\r\n             <span className=\"sr-only\">Abrir menu</span>\r\n-            <MoreVertical className=\" bg-black h-4 w-4\" />\r\n+            <MoreVertical className=\"h-4 w-4 text-muted-foreground\" />\r\n           </Button>\r\n         </DropdownMenuTrigger>\r\n         <DropdownMenuContent align=\"end\" className=\"w-44\">\r\n           <DropdownMenuItem onClick={() => onView(row.original)}>\r\n"
                },
                {
                    "date": 1745873120594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,9 +113,9 @@\n     header: \"Ações\",\r\n     cell: ({ row }) => (\r\n       <DropdownMenu>\r\n         <DropdownMenuTrigger asChild>\r\n-          <Button variant=\"ghost\" className=\"h-8 w-8 p-0 text-muted-foreground hover:bg-muted\">\r\n+          <Button color=\"#000\" variant=\"ghost\" className=\"h-8 w-8 p-0 text-muted-foreground hover:bg-muted\">\r\n             <span className=\"sr-only\">Abrir menu</span>\r\n             <MoreVertical className=\"h-4 w-4 text-muted-foreground\" />\r\n           </Button>\r\n         </DropdownMenuTrigger>\r\n"
                },
                {
                    "date": 1745873170000,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n   DropdownMenuContent,\r\n   DropdownMenuItem,\r\n   DropdownMenuTrigger\r\n } from \"@/components/ui/dropdown-menu\";\r\n+import { color } from \"framer-motion\";\r\n \r\n export type LinhaReembolso = {\r\n   recargaId: string;\r\n   nome: string;\r\n@@ -113,9 +114,9 @@\n     header: \"Ações\",\r\n     cell: ({ row }) => (\r\n       <DropdownMenu>\r\n         <DropdownMenuTrigger asChild>\r\n-          <Button color=\"#000\" variant=\"ghost\" className=\"h-8 w-8 p-0 text-muted-foreground hover:bg-muted\">\r\n+          <Button  variant=\"ghost\" className=\"h-8 w-8 p-0 text-muted-foreground hover:bg-muted\">\r\n             <span className=\"sr-only\">Abrir menu</span>\r\n             <MoreVertical className=\"h-4 w-4 text-muted-foreground\" />\r\n           </Button>\r\n         </DropdownMenuTrigger>\r\n"
                },
                {
                    "date": 1745873179924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,9 +116,9 @@\n       <DropdownMenu>\r\n         <DropdownMenuTrigger asChild>\r\n           <Button  variant=\"ghost\" className=\"h-8 w-8 p-0 text-muted-foreground hover:bg-muted\">\r\n             <span className=\"sr-only\">Abrir menu</span>\r\n-            <MoreVertical className=\"h-4 w-4 text-muted-foreground\" />\r\n+            <MoreVertical className=\"h-4 w-4 text-gray-500\" />\r\n           </Button>\r\n         </DropdownMenuTrigger>\r\n         <DropdownMenuContent align=\"end\" className=\"w-44\">\r\n           <DropdownMenuItem onClick={() => onView(row.original)}>\r\n"
                },
                {
                    "date": 1745873246718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,9 +114,9 @@\n     header: \"Ações\",\r\n     cell: ({ row }) => (\r\n       <DropdownMenu>\r\n         <DropdownMenuTrigger asChild>\r\n-          <Button  variant=\"ghost\" className=\"h-8 w-8 p-0 text-muted-foreground hover:bg-muted\">\r\n+          <Button  variant=\"ghost\" className=\"h-8 w-8 p-0 hover:bg-gray-100 transition-colors\">\r\n             <span className=\"sr-only\">Abrir menu</span>\r\n             <MoreVertical className=\"h-4 w-4 text-gray-500\" />\r\n           </Button>\r\n         </DropdownMenuTrigger>\r\n"
                }
            ],
            "date": 1745871994772,
            "name": "Commit-0",
            "content": "import { ColumnDef } from \"@tanstack/react-table\";\r\nimport { Select as ShadSelect, SelectTrigger, SelectValue, SelectContent, SelectItem } from \"@/components/ui/select\";\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";\r\nimport { Eye } from \"lucide-react\";\r\n\r\nexport type LinhaReembolso = {\r\n  recargaId: string;\r\n  nome: string;\r\n  imagem?: string;\r\n  instagram: string;\r\n  cpf: string;\r\n  plataforma: string;\r\n  inicio: string;\r\n  termino: string;\r\n  meta: number;\r\n  atingido: number;\r\n  reembolso: number;\r\n  reembolsoStatus: \"pendente\" | \"pago\";\r\n};\r\n\r\ntype Props = {\r\n  onUpdateStatus: (recargaId: string, newStatus: \"pendente\" | \"pago\") => void;\r\n  onView: (recarga: LinhaReembolso) => void;\r\n};\r\n\r\nexport const getColumns = ({ onUpdateStatus, onView }: Props): ColumnDef<LinhaReembolso>[] => [\r\n  {\r\n    accessorKey: \"nome\",\r\n    header: \"Influenciador\",\r\n    cell: ({ row }) => {\r\n      const { nome, imagem } = row.original;\r\n      return (\r\n        <div className=\"flex items-center gap-2\">\r\n          <Avatar className=\"w-8 h-8\">\r\n            {imagem ? <AvatarImage src={imagem} /> : <AvatarFallback>INF</AvatarFallback>}\r\n          </Avatar>\r\n          <span>{nome}</span>\r\n        </div>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    accessorKey: \"instagram\",\r\n    header: \"Instagram\",\r\n    cell: ({ row }) => (\r\n      <a\r\n        href={`https://instagram.com/${row.original.instagram}`}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        className=\"text-blue-600 underline text-sm\"\r\n      >\r\n        @{row.original.instagram}\r\n      </a>\r\n    ),\r\n  },\r\n  {\r\n    accessorKey: \"cpf\",\r\n    header: \"CPF\",\r\n  },\r\n  {\r\n    accessorKey: \"plataforma\",\r\n    header: \"Plataforma\",\r\n  },\r\n  {\r\n    accessorKey: \"meta\",\r\n    header: \"Meta (R$)\",\r\n    cell: ({ row }) => (\r\n      <span>R$ {row.original.meta.toLocaleString('pt-BR')}</span>\r\n    ),\r\n  },\r\n  {\r\n    accessorKey: \"atingido\",\r\n    header: \"Atingido (R$)\",\r\n    cell: ({ row }) => (\r\n      <span>R$ {row.original.atingido.toLocaleString('pt-BR')}</span>\r\n    ),\r\n  },\r\n  {\r\n    accessorKey: \"reembolso\",\r\n    header: \"Reembolso (R$)\",\r\n    cell: ({ row }) => (\r\n      <span className={row.original.reembolso > 0 ? \"text-red-500\" : \"text-green-600\"}>\r\n        R$ {row.original.reembolso.toLocaleString('pt-BR')}\r\n      </span>\r\n    ),\r\n  },\r\n  {\r\n    accessorKey: \"reembolsoStatus\",\r\n    header: \"Status do Reembolso\",\r\n    cell: ({ row }) => {\r\n      const status = row.original.reembolsoStatus;\r\n  \r\n      return (\r\n        <ShadSelect value={status} onValueChange={(value) => onUpdateStatus(row.original.recargaId, value as any)}>\r\n          <SelectTrigger className=\"w-[120px]\">\r\n            <SelectValue placeholder=\"Status\" />\r\n          </SelectTrigger>\r\n          <SelectContent>\r\n            <SelectItem value=\"pendente\">Pendente</SelectItem>\r\n            <SelectItem value=\"pago\">Pago</SelectItem>\r\n          </SelectContent>\r\n        </ShadSelect>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    id: 'actions',\r\n    header: 'Ações',\r\n    cell: ({ row }) => (\r\n      <div className=\"flex gap-2\">\r\n        <TooltipProvider>\r\n          <Tooltip>\r\n            <TooltipTrigger asChild>\r\n              <Button size=\"icon\" variant=\"outline\" onClick={() => onView(row.original)}>\r\n                <Eye className=\"w-4 h-4\" />\r\n              </Button>\r\n            </TooltipTrigger>\r\n            <TooltipContent>Visualizar</TooltipContent>\r\n          </Tooltip>\r\n        </TooltipProvider>\r\n      </div>\r\n    ),\r\n  },\r\n];\r\n"
        }
    ]
}