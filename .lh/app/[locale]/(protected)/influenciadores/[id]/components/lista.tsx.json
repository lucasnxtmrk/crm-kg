{
    "sourceFile": "app/[locale]/(protected)/influenciadores/[id]/components/lista.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1744940249912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1744940249912,
            "name": "Commit-0",
            "content": "'use client';\r\n\r\nimport * as React from 'react';\r\nimport {\r\n  ColumnFiltersState,\r\n  SortingState,\r\n  VisibilityState,\r\n  getCoreRowModel,\r\n  getFilteredRowModel,\r\n  getPaginationRowModel,\r\n  getSortedRowModel,\r\n  useReactTable,\r\n  flexRender,\r\n} from '@tanstack/react-table';\r\n\r\nimport { getInfluenciadoresBySlug } from '@/lib/influenciadores';\r\nimport { columns } from './columns';\r\nimport { Input } from '@/components/ui/input';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from '@/components/ui/table';\r\nimport TablePagination from './table-pagination';\r\n\r\ninterface Props {\r\n  plataformaSlug: string;\r\n}\r\n\r\nconst ListaInfluenciadores = ({ plataformaSlug }: Props) => {\r\n  const data = getInfluenciadoresBySlug(plataformaSlug);\r\n\r\n  const [sorting, setSorting] = React.useState<SortingState>([]);\r\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>([]);\r\n  const [columnVisibility, setColumnVisibility] = React.useState<VisibilityState>({});\r\n  const [rowSelection, setRowSelection] = React.useState({});\r\n\r\n  const table = useReactTable({\r\n    data,\r\n    columns,\r\n    onSortingChange: setSorting,\r\n    onColumnFiltersChange: setColumnFilters,\r\n    getCoreRowModel: getCoreRowModel(),\r\n    getPaginationRowModel: getPaginationRowModel(),\r\n    getSortedRowModel: getSortedRowModel(),\r\n    getFilteredRowModel: getFilteredRowModel(),\r\n    onColumnVisibilityChange: setColumnVisibility,\r\n    onRowSelectionChange: setRowSelection,\r\n    state: {\r\n      sorting,\r\n      columnFilters,\r\n      columnVisibility,\r\n      rowSelection,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      <div className=\"flex items-center py-4 px-5\">\r\n        <div className=\"flex-1 text-xl font-medium text-default-900\">Influenciadores</div>\r\n        <div className=\"flex-none\">\r\n          <Input\r\n            placeholder=\"Filtrar por nome...\"\r\n            value={(table.getColumn('nome')?.getFilterValue() as string) ?? ''}\r\n            onChange={(event) =>\r\n              table.getColumn('nome')?.setFilterValue(event.target.value)\r\n            }\r\n            className=\"max-w-sm\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <Table>\r\n        <TableHeader className=\"bg-default-200\">\r\n          {table.getHeaderGroups().map((headerGroup) => (\r\n            <TableRow key={headerGroup.id}>\r\n              {headerGroup.headers.map((header) => (\r\n                <TableHead key={header.id}>\r\n                  {header.isPlaceholder\r\n                    ? null\r\n                    : flexRender(header.column.columnDef.header, header.getContext())}\r\n                </TableHead>\r\n              ))}\r\n            </TableRow>\r\n          ))}\r\n        </TableHeader>\r\n        <TableBody>\r\n          {table.getRowModel().rows?.length ? (\r\n            table.getRowModel().rows.map((row) => (\r\n              <TableRow key={row.id} data-state={row.getIsSelected() && 'selected'}>\r\n                {row.getVisibleCells().map((cell) => (\r\n                  <TableCell key={cell.id}>\r\n                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            ))\r\n          ) : (\r\n            <TableRow>\r\n              <TableCell colSpan={columns.length} className=\"h-24 text-center\">\r\n                Nenhum resultado encontrado.\r\n              </TableCell>\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n      <TablePagination table={table} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListaInfluenciadores;\r\n"
        }
    ]
}