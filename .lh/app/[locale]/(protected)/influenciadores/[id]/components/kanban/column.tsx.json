{
    "sourceFile": "app/[locale]/(protected)/influenciadores/[id]/components/kanban/column.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1745001887067,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1745005026254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,27 +1,151 @@\n 'use client';\r\n \r\n-import { KanbanColumn, KanbanInfluenciador } from \"./data\";\r\n-import TaskCard from \"./task\";\r\n+import { SortableContext, useSortable } from \"@dnd-kit/sortable\";\r\n+import { Button } from \"@/components/ui/button\";\r\n+import { cn } from \"@/lib/utils\";\r\n import { Card, CardContent, CardHeader } from \"@/components/ui/card\";\r\n+import { CSS } from \"@dnd-kit/utilities\";\r\n+import { useMemo, useState } from \"react\";\r\n \r\n-type Props = {\r\n-  column: KanbanColumn;\r\n-  tasks: KanbanInfluenciador[];\r\n+import {\r\n+  Tooltip,\r\n+  TooltipContent,\r\n+  TooltipProvider,\r\n+  TooltipTrigger,\r\n+} from \"@/components/ui/tooltip\";\r\n+\r\n+import { Plus, Trash2 } from \"lucide-react\";\r\n+import EmptyTask from \"./empty\";\r\n+import DeleteConfirmationDialog from \"@/components/delete-confirmation-dialog\";\r\n+import TaskCard from \"./task\";\r\n+\r\n+type Column = {\r\n+  id: string;\r\n+  title: string;\r\n };\r\n \r\n-export default function ColumnContainer({ column, tasks }: Props) {\r\n+type InfluenciadorKanban = {\r\n+  id: string;\r\n+  nome: string;\r\n+  imagem?: string;\r\n+  instagram: string;\r\n+  cpf: string;\r\n+  meta: number;\r\n+  atingido: number;\r\n+  status: string;\r\n+};\r\n+\r\n+function ColumnContainer({\r\n+  column,\r\n+  tasks,\r\n+  handleOpenTask,\r\n+}: {\r\n+  column: Column;\r\n+  tasks: InfluenciadorKanban[];\r\n+  handleOpenTask: () => void;\r\n+}) {\r\n+  const [editMode, setEditMode] = useState<boolean>(false);\r\n+  const [deleteColumn, setDeleteColumn] = useState<boolean>(false);\r\n+\r\n+  const tasksIds = useMemo(() => tasks.map((task) => task.id), [tasks]);\r\n+\r\n+  const {\r\n+    setNodeRef,\r\n+    attributes,\r\n+    listeners,\r\n+    transform,\r\n+    transition,\r\n+    isDragging,\r\n+  } = useSortable({\r\n+    id: column.id,\r\n+    data: {\r\n+      type: \"Column\",\r\n+      column,\r\n+    },\r\n+    disabled: editMode,\r\n+  });\r\n+\r\n+  const style = {\r\n+    transition,\r\n+    transform: CSS.Transform.toString(transform),\r\n+  };\r\n+\r\n   return (\r\n-    <Card className=\"w-[280px] bg-muted flex flex-col\">\r\n-      <CardHeader className=\"py-4 border-b border-border\">\r\n-        <h2 className=\"text-lg font-bold text-default-900\">{column.title}</h2>\r\n-      </CardHeader>\r\n-      <CardContent className=\"space-y-4 py-4\">\r\n-        {tasks.length === 0 ? (\r\n-          <p className=\"text-sm text-muted-foreground\">Nenhum influenciador.</p>\r\n-        ) : (\r\n-          tasks.map((task) => <TaskCard key={task.id} task={task} />)\r\n+    <>\r\n+      <DeleteConfirmationDialog\r\n+        open={deleteColumn}\r\n+        onClose={() => setDeleteColumn(false)}\r\n+      />\r\n+\r\n+      <Card\r\n+        ref={setNodeRef}\r\n+        style={style}\r\n+        className={cn(\r\n+          \"flex-1 w-[280px] bg-default-200 shadow-none app-height flex flex-col relative\",\r\n+          {\r\n+            \"opacity-20\": isDragging,\r\n+          }\r\n         )}\r\n-      </CardContent>\r\n-    </Card>\r\n+      >\r\n+        <CardHeader\r\n+          className=\"flex-none bg-card relative rounded-t-md py-4\"\r\n+          {...attributes}\r\n+          {...listeners}\r\n+        >\r\n+          <div className=\"flex items-center gap-2\">\r\n+            <div className=\"flex-1 text-lg capitalize text-default-900 font-medium\">\r\n+              {column.title}\r\n+            </div>\r\n+\r\n+            <TooltipProvider>\r\n+              <Tooltip>\r\n+                <TooltipTrigger asChild>\r\n+                  <Button\r\n+                    size=\"icon\"\r\n+                    className=\"w-6 h-6 bg-transparent hover:bg-transparent border border-default-200 text-default-600 hover:ring-0 hover:ring-transparent\"\r\n+                    onClick={() => setDeleteColumn(true)}\r\n+                  >\r\n+                    <Trash2 className=\"w-4 h-4\" />\r\n+                  </Button>\r\n+                </TooltipTrigger>\r\n+                <TooltipContent className=\"bg-destructive\">\r\n+                  <p>Excluir Coluna</p>\r\n+                </TooltipContent>\r\n+              </Tooltip>\r\n+            </TooltipProvider>\r\n+\r\n+            <TooltipProvider>\r\n+              <Tooltip>\r\n+                <TooltipTrigger asChild>\r\n+                  <Button\r\n+                    size=\"icon\"\r\n+                    className=\"w-6 h-6 bg-transparent ring-offset-transparent hover:bg-transparent border border-default-200 text-default-600 hover:ring-0 hover:ring-transparent\"\r\n+                    onClick={handleOpenTask}\r\n+                  >\r\n+                    <Plus className=\"w-4 h-4\" />\r\n+                  </Button>\r\n+                </TooltipTrigger>\r\n+                <TooltipContent>\r\n+                  <p>Adicionar Influenciador</p>\r\n+                </TooltipContent>\r\n+              </Tooltip>\r\n+            </TooltipProvider>\r\n+          </div>\r\n+        </CardHeader>\r\n+\r\n+        <CardContent className=\"flex-1 pt-6 px-3.5 h-full overflow-y-auto no-scrollbar\">\r\n+          <div className=\"space-y-6\">\r\n+            {tasks?.length === 0 && <EmptyTask />}\r\n+            <SortableContext items={tasksIds}>\r\n+              {tasks.map((task) => (\r\n+                <TaskCard task={task} key={task.id} />\r\n+              ))}\r\n+            </SortableContext>\r\n+          </div>\r\n+        </CardContent>\r\n+      </Card>\r\n+    </>\r\n   );\r\n }\r\n+\r\n+export default ColumnContainer;\r\n"
                },
                {
                    "date": 1745005604157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,11 +107,8 @@\n                   >\r\n                     <Trash2 className=\"w-4 h-4\" />\r\n                   </Button>\r\n                 </TooltipTrigger>\r\n-                <TooltipContent className=\"bg-destructive\">\r\n-                  <p>Excluir Coluna</p>\r\n-                </TooltipContent>\r\n               </Tooltip>\r\n             </TooltipProvider>\r\n \r\n             <TooltipProvider>\r\n@@ -147,5 +144,5 @@\n     </>\r\n   );\r\n }\r\n \r\n-export default ColumnContainer;\r\n+export default ColumnContainer;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1745005610566,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,15 +99,8 @@\n \r\n             <TooltipProvider>\r\n               <Tooltip>\r\n                 <TooltipTrigger asChild>\r\n-                  <Button\r\n-                    size=\"icon\"\r\n-                    className=\"w-6 h-6 bg-transparent hover:bg-transparent border border-default-200 text-default-600 hover:ring-0 hover:ring-transparent\"\r\n-                    onClick={() => setDeleteColumn(true)}\r\n-                  >\r\n-                    <Trash2 className=\"w-4 h-4\" />\r\n-                  </Button>\r\n                 </TooltipTrigger>\r\n               </Tooltip>\r\n             </TooltipProvider>\r\n \r\n"
                },
                {
                    "date": 1745127575621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,14 @@\n import EmptyTask from \"./empty\";\r\n import DeleteConfirmationDialog from \"@/components/delete-confirmation-dialog\";\r\n import TaskCard from \"./task\";\r\n \r\n+type Props = {\r\n+  column: Column;\r\n+  tasks: InfluenciadorKanban[];\r\n+  onTaskClick: (inf: InfluenciadorKanban) => void;\r\n+};\r\n+\r\n type Column = {\r\n   id: string;\r\n   title: string;\r\n };\r\n@@ -126,12 +132,12 @@\n         <CardContent className=\"flex-1 pt-6 px-3.5 h-full overflow-y-auto no-scrollbar\">\r\n           <div className=\"space-y-6\">\r\n             {tasks?.length === 0 && <EmptyTask />}\r\n             <SortableContext items={tasksIds}>\r\n-              {tasks.map((task) => (\r\n-                <TaskCard task={task} key={task.id} />\r\n-              ))}\r\n-            </SortableContext>\r\n+    {tasks.map((task) => (\r\n+      <TaskCard key={task.id} task={task} onClick={() => onTaskClick(task)} />\r\n+    ))}\r\n+  </SortableContext>\r\n           </div>\r\n         </CardContent>\r\n       </Card>\r\n     </>\r\n"
                },
                {
                    "date": 1745127601181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,8 +75,12 @@\n     transition,\r\n     transform: CSS.Transform.toString(transform),\r\n   };\r\n \r\n+  function onTaskClick(task: InfluenciadorKanban): void {\r\n+    throw new Error(\"Function not implemented.\");\r\n+  }\r\n+\r\n   return (\r\n     <>\r\n       <DeleteConfirmationDialog\r\n         open={deleteColumn}\r\n"
                },
                {
                    "date": 1745127633302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,17 +133,17 @@\n           </div>\r\n         </CardHeader>\r\n \r\n         <CardContent className=\"flex-1 pt-6 px-3.5 h-full overflow-y-auto no-scrollbar\">\r\n-          <div className=\"space-y-6\">\r\n-            {tasks?.length === 0 && <EmptyTask />}\r\n-            <SortableContext items={tasksIds}>\r\n-    {tasks.map((task) => (\r\n-      <TaskCard key={task.id} task={task} onClick={() => onTaskClick(task)} />\r\n-    ))}\r\n-  </SortableContext>\r\n-          </div>\r\n-        </CardContent>\r\n+  <div className=\"space-y-6\">\r\n+    {tasks?.length === 0 && <EmptyTask />}\r\n+    <SortableContext items={tasksIds}>\r\n+      {tasks.map((task) => (\r\n+        <TaskCard key={task.id} task={task} onClick={() => onTaskClick(task)} />\r\n+      ))}\r\n+    </SortableContext>\r\n+  </div>\r\n+</CardContent>\r\n       </Card>\r\n     </>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1745127666551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,11 +75,8 @@\n     transition,\r\n     transform: CSS.Transform.toString(transform),\r\n   };\r\n \r\n-  function onTaskClick(task: InfluenciadorKanban): void {\r\n-    throw new Error(\"Function not implemented.\");\r\n-  }\r\n \r\n   return (\r\n     <>\r\n       <DeleteConfirmationDialog\r\n"
                },
                {
                    "date": 1745127741166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,13 +43,13 @@\n \r\n function ColumnContainer({\r\n   column,\r\n   tasks,\r\n-  handleOpenTask,\r\n+  onTaskClick,\r\n }: {\r\n   column: Column;\r\n   tasks: InfluenciadorKanban[];\r\n-  handleOpenTask: () => void;\r\n+  onTaskClick: (task: InfluenciadorKanban) => void;\r\n }) {\r\n   const [editMode, setEditMode] = useState<boolean>(false);\r\n   const [deleteColumn, setDeleteColumn] = useState<boolean>(false);\r\n \r\n"
                },
                {
                    "date": 1745127771196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,9 +116,8 @@\n                 <TooltipTrigger asChild>\r\n                   <Button\r\n                     size=\"icon\"\r\n                     className=\"w-6 h-6 bg-transparent ring-offset-transparent hover:bg-transparent border border-default-200 text-default-600 hover:ring-0 hover:ring-transparent\"\r\n-                    onClick={handleOpenTask}\r\n                   >\r\n                     <Plus className=\"w-4 h-4\" />\r\n                   </Button>\r\n                 </TooltipTrigger>\r\n"
                }
            ],
            "date": 1745001887067,
            "name": "Commit-0",
            "content": "'use client';\r\n\r\nimport { KanbanColumn, KanbanInfluenciador } from \"./data\";\r\nimport TaskCard from \"./task\";\r\nimport { Card, CardContent, CardHeader } from \"@/components/ui/card\";\r\n\r\ntype Props = {\r\n  column: KanbanColumn;\r\n  tasks: KanbanInfluenciador[];\r\n};\r\n\r\nexport default function ColumnContainer({ column, tasks }: Props) {\r\n  return (\r\n    <Card className=\"w-[280px] bg-muted flex flex-col\">\r\n      <CardHeader className=\"py-4 border-b border-border\">\r\n        <h2 className=\"text-lg font-bold text-default-900\">{column.title}</h2>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-4 py-4\">\r\n        {tasks.length === 0 ? (\r\n          <p className=\"text-sm text-muted-foreground\">Nenhum influenciador.</p>\r\n        ) : (\r\n          tasks.map((task) => <TaskCard key={task.id} task={task} />)\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"
        }
    ]
}