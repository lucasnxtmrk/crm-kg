{
    "sourceFile": "app/[locale]/(protected)/influenciadores/[id]/components/kanban/task.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 16,
            "patches": [
                {
                    "date": 1745004981289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1745008101846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,15 +110,25 @@\n           </DropdownMenu>\r\n         </CardHeader>\r\n \r\n         <CardContent className=\"text-xs text-muted-foreground space-y-1\">\r\n-          <p>CPF: {task.cpf}</p>\r\n-          <p>Meta: R$ {task.meta.toLocaleString()}</p>\r\n-          <p>Atingido: R$ {task.atingido.toLocaleString()}</p>\r\n-          <p className=\"text-green-600 font-semibold\">\r\n-            {porcentagem}% da meta\r\n-          </p>\r\n-        </CardContent>\r\n+  <p>CPF: {task.cpf}</p>\r\n+  <p>Meta: R$ {task.meta.toLocaleString()}</p>\r\n+  <p>Atingido: R$ {task.atingido.toLocaleString()}</p>\r\n+\r\n+  <div\r\n+    className={cn(\r\n+      \"inline-flex items-center gap-2 px-2 py-1 rounded-full text-xs font-medium border whitespace-nowrap transition\",\r\n+      task.atingido >= task.meta\r\n+        ? \"bg-green-500 text-white\"\r\n+        : \"bg-yellow-400 text-yellow-900\"\r\n+    )}\r\n+  >\r\n+    <span className=\"h-2 w-2 rounded-full bg-white\" />\r\n+    {task.atingido >= task.meta ? \"Meta Batida\" : \"Meta Pendente\"}\r\n+  </div>\r\n+</CardContent>\r\n+\r\n       </Card>\r\n     </>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1745008140901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,9 +122,8 @@\n         ? \"bg-green-500 text-white\"\r\n         : \"bg-yellow-400 text-yellow-900\"\r\n     )}\r\n   >\r\n-    <span className=\"h-2 w-2 rounded-full bg-white\" />\r\n     {task.atingido >= task.meta ? \"Meta Batida\" : \"Meta Pendente\"}\r\n   </div>\r\n </CardContent>\r\n \r\n"
                },
                {
                    "date": 1745008290595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,17 +115,17 @@\n   <p>Meta: R$ {task.meta.toLocaleString()}</p>\r\n   <p>Atingido: R$ {task.atingido.toLocaleString()}</p>\r\n \r\n   <div\r\n-    className={cn(\r\n-      \"inline-flex items-center gap-2 px-2 py-1 rounded-full text-xs font-medium border whitespace-nowrap transition\",\r\n-      task.atingido >= task.meta\r\n-        ? \"bg-green-500 text-white\"\r\n-        : \"bg-yellow-400 text-yellow-900\"\r\n-    )}\r\n-  >\r\n-    {task.atingido >= task.meta ? \"Meta Batida\" : \"Meta Pendente\"}\r\n-  </div>\r\n+  className={cn(\r\n+    \"w-[140px] mx-auto flex items-center justify-center px-2 py-1 rounded-full text-xs font-medium border text-center whitespace-nowrap transition\",\r\n+    task.atingido >= task.meta\r\n+      ? \"bg-green-500 text-white\"\r\n+      : \"bg-yellow-400 text-yellow-900\"\r\n+  )}\r\n+>\r\n+  {task.atingido >= task.meta ? \"Meta Batida\" : \"Meta Pendente\"}\r\n+</div>\r\n </CardContent>\r\n \r\n       </Card>\r\n     </>\r\n"
                },
                {
                    "date": 1745008308550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,17 +115,17 @@\n   <p>Meta: R$ {task.meta.toLocaleString()}</p>\r\n   <p>Atingido: R$ {task.atingido.toLocaleString()}</p>\r\n \r\n   <div\r\n-  className={cn(\r\n-    \"w-[140px] mx-auto flex items-center justify-center px-2 py-1 rounded-full text-xs font-medium border text-center whitespace-nowrap transition\",\r\n-    task.atingido >= task.meta\r\n-      ? \"bg-green-500 text-white\"\r\n-      : \"bg-yellow-400 text-yellow-900\"\r\n-  )}\r\n->\r\n-  {task.atingido >= task.meta ? \"Meta Batida\" : \"Meta Pendente\"}\r\n-</div>\r\n+    className={cn(\r\n+      \"inline-flex items-center gap-2 px-2 py-1 rounded-full text-xs font-medium border whitespace-nowrap transition\",\r\n+      task.atingido >= task.meta\r\n+        ? \"bg-green-500 text-white\"\r\n+        : \"bg-yellow-400 text-yellow-900\"\r\n+    )}\r\n+  >\r\n+    {task.atingido >= task.meta ? \"Meta Batida\" : \"Meta Pendente\"}\r\n+  </div>\r\n </CardContent>\r\n \r\n       </Card>\r\n     </>\r\n"
                },
                {
                    "date": 1745008743448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,11 @@\n import { MoreVertical, SquarePen, Trash2 } from \"lucide-react\";\r\n import DeleteConfirmationDialog from \"@/components/delete-confirmation-dialog\";\r\n import EditTask from \"./edit-task\";\r\n import { useState } from \"react\";\r\n+import { Instagram } from 'lucide-react'; // adicione no topo, se ainda nÃ£o tiver\r\n \r\n+\r\n type InfluenciadorKanban = {\r\n   id: string;\r\n   nome: string;\r\n   imagem?: string;\r\n@@ -69,48 +71,57 @@\n         style={style}\r\n         {...attributes}\r\n         {...listeners}\r\n       >\r\n-        <CardHeader className=\"flex-row items-center gap-3 pb-2\">\r\n-          <Avatar className=\"h-10 w-10\">\r\n-            <AvatarImage src={task.imagem} />\r\n-            <AvatarFallback>{task.nome.charAt(0)}</AvatarFallback>\r\n-          </Avatar>\r\n-          <div className=\"flex-1\">\r\n-            <p className=\"font-semibold text-sm truncate\">{task.nome}</p>\r\n-            <p className=\"text-xs text-muted-foreground truncate\">\r\n-              {task.instagram}\r\n-            </p>\r\n-          </div>\r\n+        import { Instagram } from 'lucide-react'; // certifique-se de ter isso no topo\r\n \r\n-          <DropdownMenu>\r\n-            <DropdownMenuTrigger asChild>\r\n-              <Button\r\n-                size=\"icon\"\r\n-                className=\"bg-transparent hover:bg-transparent hover:ring-0 hover:ring-transparent w-6\"\r\n-              >\r\n-                <MoreVertical className=\"h-4 w-4 text-default-900\" />\r\n-              </Button>\r\n-            </DropdownMenuTrigger>\r\n-            <DropdownMenuContent className=\"p-0 overflow-hidden\" align=\"end\">\r\n-              <DropdownMenuItem\r\n-                className=\"py-2 border-b border-default-200 text-default-600 focus:bg-default focus:text-default-foreground rounded-none cursor-pointer\"\r\n-                onClick={() => setEditTaskOpen(true)}\r\n-              >\r\n-                <SquarePen className=\"w-3.5 h-3.5 me-1\" />\r\n-                Editar\r\n-              </DropdownMenuItem>\r\n-              <DropdownMenuItem\r\n-                className=\"py-2 bg-destructive/30 text-destructive focus:bg-destructive focus:text-destructive-foreground rounded-none cursor-pointer\"\r\n-                onClick={() => setOpen(true)}\r\n-              >\r\n-                <Trash2 className=\"w-3.5 h-3.5 me-1\" />\r\n-                Excluir\r\n-              </DropdownMenuItem>\r\n-            </DropdownMenuContent>\r\n-          </DropdownMenu>\r\n-        </CardHeader>\r\n+<CardHeader className=\"flex-row items-center gap-3 pb-2\">\r\n+  <Avatar className=\"h-10 w-10\">\r\n+    <AvatarImage src={task.imagem} />\r\n+    <AvatarFallback>{task.nome.charAt(0)}</AvatarFallback>\r\n+  </Avatar>\r\n+  <div className=\"flex-1\">\r\n+    <p className=\"font-semibold text-sm truncate\">{task.nome}</p>\r\n+    <a\r\n+      href={task.instagram}\r\n+      target=\"_blank\"\r\n+      rel=\"noopener noreferrer\"\r\n+      className=\"flex items-center gap-1 text-xs text-muted-foreground hover:underline\"\r\n+    >\r\n+      <Instagram className=\"w-4 h-4 text-pink-600\" />\r\n+      @{task.instagram.replace('https://instagram.com/', '')}\r\n+    </a>\r\n+  </div>\r\n \r\n+  <DropdownMenu>\r\n+    <DropdownMenuTrigger asChild>\r\n+      <Button\r\n+        size=\"icon\"\r\n+        className=\"bg-transparent hover:bg-transparent hover:ring-0 hover:ring-transparent w-6\"\r\n+      >\r\n+        <MoreVertical className=\"h-4 w-4 text-default-900\" />\r\n+      </Button>\r\n+    </DropdownMenuTrigger>\r\n+    <DropdownMenuContent className=\"p-0 overflow-hidden\" align=\"end\">\r\n+      <DropdownMenuItem\r\n+        className=\"py-2 border-b border-default-200 text-default-600 focus:bg-default focus:text-default-foreground rounded-none cursor-pointer\"\r\n+        onClick={() => setEditTaskOpen(true)}\r\n+      >\r\n+        <SquarePen className=\"w-3.5 h-3.5 me-1\" />\r\n+        Editar\r\n+      </DropdownMenuItem>\r\n+      <DropdownMenuItem\r\n+        className=\"py-2 bg-destructive/30 text-destructive focus:bg-destructive focus:text-destructive-foreground rounded-none cursor-pointer\"\r\n+        onClick={() => setOpen(true)}\r\n+      >\r\n+        <Trash2 className=\"w-3.5 h-3.5 me-1\" />\r\n+        Excluir\r\n+      </DropdownMenuItem>\r\n+    </DropdownMenuContent>\r\n+  </DropdownMenu>\r\n+</CardHeader>\r\n+\r\n+\r\n         <CardContent className=\"text-xs text-muted-foreground space-y-1\">\r\n   <p>CPF: {task.cpf}</p>\r\n   <p>Meta: R$ {task.meta.toLocaleString()}</p>\r\n   <p>Atingido: R$ {task.atingido.toLocaleString()}</p>\r\n"
                },
                {
                    "date": 1745008789353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,8 @@\n         style={style}\r\n         {...attributes}\r\n         {...listeners}\r\n       >\r\n-        import { Instagram } from 'lucide-react'; // certifique-se de ter isso no topo\r\n \r\n <CardHeader className=\"flex-row items-center gap-3 pb-2\">\r\n   <Avatar className=\"h-10 w-10\">\r\n     <AvatarImage src={task.imagem} />\r\n"
                },
                {
                    "date": 1745008822244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,9 @@\n       target=\"_blank\"\r\n       rel=\"noopener noreferrer\"\r\n       className=\"flex items-center gap-1 text-xs text-muted-foreground hover:underline\"\r\n     >\r\n-      <Instagram className=\"w-4 h-4 text-pink-600\" />\r\n+      <Instagram className=\"w-2 h-2 text-pink-600\" />\r\n       @{task.instagram.replace('https://instagram.com/', '')}\r\n     </a>\r\n   </div>\r\n \r\n"
                },
                {
                    "date": 1745008828743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,9 @@\n       target=\"_blank\"\r\n       rel=\"noopener noreferrer\"\r\n       className=\"flex items-center gap-1 text-xs text-muted-foreground hover:underline\"\r\n     >\r\n-      <Instagram className=\"w-2 h-2 text-pink-600\" />\r\n+      <Instagram className=\"w-3 h-3 text-pink-600\" />\r\n       @{task.instagram.replace('https://instagram.com/', '')}\r\n     </a>\r\n   </div>\r\n \r\n"
                },
                {
                    "date": 1745118750609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,22 +16,12 @@\n import DeleteConfirmationDialog from \"@/components/delete-confirmation-dialog\";\r\n import EditTask from \"./edit-task\";\r\n import { useState } from \"react\";\r\n import { Instagram } from 'lucide-react'; // adicione no topo, se ainda nÃ£o tiver\r\n+import type { Influenciador } from '@/lib/influenciadores';\r\n \r\n \r\n-type InfluenciadorKanban = {\r\n-  id: string;\r\n-  nome: string;\r\n-  imagem?: string;\r\n-  instagram: string;\r\n-  cpf: string;\r\n-  meta: number;\r\n-  atingido: number;\r\n-  status: string;\r\n-};\r\n-\r\n-function TaskCard({ task }: { task: InfluenciadorKanban }) {\r\n+function TaskCard({ task }: { task: Influenciador }) {\r\n   const [open, setOpen] = useState<boolean>(false);\r\n   const [editTaskOpen, setEditTaskOpen] = useState<boolean>(false);\r\n \r\n   const {\r\n@@ -123,9 +113,11 @@\n         <CardContent className=\"text-xs text-muted-foreground space-y-1\">\r\n   <p>CPF: {task.cpf}</p>\r\n   <p>Meta: R$ {task.meta.toLocaleString()}</p>\r\n   <p>Atingido: R$ {task.atingido.toLocaleString()}</p>\r\n+  <p>Reembolso: R$ {task.reembolso.toLocaleString()}</p>\r\n \r\n+\r\n   <div\r\n     className={cn(\r\n       \"inline-flex items-center gap-2 px-2 py-1 rounded-full text-xs font-medium border whitespace-nowrap transition\",\r\n       task.atingido >= task.meta\r\n"
                },
                {
                    "date": 1745118775327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,9 +113,11 @@\n         <CardContent className=\"text-xs text-muted-foreground space-y-1\">\r\n   <p>CPF: {task.cpf}</p>\r\n   <p>Meta: R$ {task.meta.toLocaleString()}</p>\r\n   <p>Atingido: R$ {task.atingido.toLocaleString()}</p>\r\n-  <p>Reembolso: R$ {task.reembolso.toLocaleString()}</p>\r\n+  <p className={task.reembolso > 0 ? 'text-red-600 font-semibold' : 'text-green-600'}>\r\n+  Reembolso: R$ {task.reembolso.toLocaleString()}\r\n+</p>\r\n \r\n \r\n   <div\r\n     className={cn(\r\n"
                },
                {
                    "date": 1745118810584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,11 +113,11 @@\n         <CardContent className=\"text-xs text-muted-foreground space-y-1\">\r\n   <p>CPF: {task.cpf}</p>\r\n   <p>Meta: R$ {task.meta.toLocaleString()}</p>\r\n   <p>Atingido: R$ {task.atingido.toLocaleString()}</p>\r\n-  <p className={task.reembolso > 0 ? 'text-red-600 font-semibold' : 'text-green-600'}>\r\n-  Reembolso: R$ {task.reembolso.toLocaleString()}\r\n-</p>\r\n+  <span>Reembolso: <p className={task.reembolso > 0 ? 'text-red-600 font-semibold' : 'text-green-600'}>\r\n+  R$ {task.reembolso.toLocaleString()}\r\n+</p></span>\r\n \r\n \r\n   <div\r\n     className={cn(\r\n"
                },
                {
                    "date": 1745118851715,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,11 +113,14 @@\n         <CardContent className=\"text-xs text-muted-foreground space-y-1\">\r\n   <p>CPF: {task.cpf}</p>\r\n   <p>Meta: R$ {task.meta.toLocaleString()}</p>\r\n   <p>Atingido: R$ {task.atingido.toLocaleString()}</p>\r\n-  <span>Reembolso: <p className={task.reembolso > 0 ? 'text-red-600 font-semibold' : 'text-green-600'}>\r\n-  R$ {task.reembolso.toLocaleString()}\r\n-</p></span>\r\n+  <p>\r\n+  Reembolso:{\" \"}\r\n+  <span className={task.reembolso > 0 ? 'text-red-600 font-semibold' : 'text-green-600'}>\r\n+    R$ {task.reembolso.toLocaleString()}\r\n+  </span>\r\n+</p>\r\n \r\n \r\n   <div\r\n     className={cn(\r\n"
                },
                {
                    "date": 1745119031176,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,28 +111,31 @@\n \r\n \r\n         <CardContent className=\"text-xs text-muted-foreground space-y-1\">\r\n   <p>CPF: {task.cpf}</p>\r\n-  <p>Meta: R$ {task.meta.toLocaleString()}</p>\r\n-  <p>Atingido: R$ {task.atingido.toLocaleString()}</p>\r\n-  <p>\r\n-  Reembolso:{\" \"}\r\n-  <span className={task.reembolso > 0 ? 'text-red-600 font-semibold' : 'text-green-600'}>\r\n-    R$ {task.reembolso.toLocaleString()}\r\n-  </span>\r\n-</p>\r\n+  {(task.meta > 0 || task.atingido > 0 || task.reembolso > 0) && (\r\n+  <>\r\n+    <p>Meta: R$ {task.meta.toLocaleString()}</p>\r\n+    <p>Atingido: R$ {task.atingido.toLocaleString()}</p>\r\n+    <p>\r\n+      Reembolso:{\" \"}\r\n+      <span className={task.reembolso > 0 ? 'text-red-600 font-semibold' : 'text-green-600'}>\r\n+        R$ {task.reembolso.toLocaleString()}\r\n+      </span>\r\n+    </p>\r\n \r\n-\r\n-  <div\r\n-    className={cn(\r\n-      \"inline-flex items-center gap-2 px-2 py-1 rounded-full text-xs font-medium border whitespace-nowrap transition\",\r\n-      task.atingido >= task.meta\r\n-        ? \"bg-green-500 text-white\"\r\n-        : \"bg-yellow-400 text-yellow-900\"\r\n-    )}\r\n-  >\r\n-    {task.atingido >= task.meta ? \"Meta Batida\" : \"Meta Pendente\"}\r\n-  </div>\r\n+    <div\r\n+      className={cn(\r\n+        \"inline-flex items-center gap-2 px-2 py-1 rounded-full text-xs font-medium border whitespace-nowrap transition\",\r\n+        task.atingido >= task.meta\r\n+          ? \"bg-green-500 text-white\"\r\n+          : \"bg-yellow-400 text-yellow-900\"\r\n+      )}\r\n+    >\r\n+      {task.atingido >= task.meta ? \"Meta Batida\" : \"Meta Pendente\"}\r\n+    </div>\r\n+  </>\r\n+)}\r\n </CardContent>\r\n \r\n       </Card>\r\n     </>\r\n"
                },
                {
                    "date": 1745119551994,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,31 +111,45 @@\n \r\n \r\n         <CardContent className=\"text-xs text-muted-foreground space-y-1\">\r\n   <p>CPF: {task.cpf}</p>\r\n-  {(task.meta > 0 || task.atingido > 0 || task.reembolso > 0) && (\r\n-  <>\r\n-    <p>Meta: R$ {task.meta.toLocaleString()}</p>\r\n-    <p>Atingido: R$ {task.atingido.toLocaleString()}</p>\r\n-    <p>\r\n-      Reembolso:{\" \"}\r\n+  <p>\r\n+  Meta:{' '}\r\n+  {task.meta > 0\r\n+    ? `R$ ${task.meta.toLocaleString()}`\r\n+    : <span className=\"text-muted-foreground italic\">NÃ£o definida</span>}\r\n+</p>\r\n+\r\n+<p>\r\n+  Atingido:{' '}\r\n+  {task.atingido > 0\r\n+    ? `R$ ${task.atingido.toLocaleString()}`\r\n+    : <span className=\"text-muted-foreground italic\">NÃ£o definido</span>}\r\n+</p>\r\n+\r\n+<p>\r\n+  Reembolso:{' '}\r\n+  {(task.meta > 0 || task.atingido > 0)\r\n+    ? (\r\n       <span className={task.reembolso > 0 ? 'text-red-600 font-semibold' : 'text-green-600'}>\r\n         R$ {task.reembolso.toLocaleString()}\r\n       </span>\r\n-    </p>\r\n+    ) : (\r\n+      <span className=\"text-muted-foreground italic\">NÃ£o definido</span>\r\n+    )}\r\n+</p>\r\n \r\n-    <div\r\n-      className={cn(\r\n-        \"inline-flex items-center gap-2 px-2 py-1 rounded-full text-xs font-medium border whitespace-nowrap transition\",\r\n-        task.atingido >= task.meta\r\n-          ? \"bg-green-500 text-white\"\r\n-          : \"bg-yellow-400 text-yellow-900\"\r\n-      )}\r\n-    >\r\n-      {task.atingido >= task.meta ? \"Meta Batida\" : \"Meta Pendente\"}\r\n-    </div>\r\n-  </>\r\n-)}\r\n+\r\n+  <div\r\n+    className={cn(\r\n+      \"inline-flex items-center gap-2 px-2 py-1 rounded-full text-xs font-medium border whitespace-nowrap transition\",\r\n+      task.atingido >= task.meta\r\n+        ? \"bg-green-500 text-white\"\r\n+        : \"bg-yellow-400 text-yellow-900\"\r\n+    )}\r\n+  >\r\n+    {task.atingido >= task.meta ? \"Meta Batida\" : \"Meta Pendente\"}\r\n+  </div>\r\n </CardContent>\r\n \r\n       </Card>\r\n     </>\r\n"
                },
                {
                    "date": 1745119679584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,18 +138,25 @@\n     )}\r\n </p>\r\n \r\n \r\n-  <div\r\n-    className={cn(\r\n-      \"inline-flex items-center gap-2 px-2 py-1 rounded-full text-xs font-medium border whitespace-nowrap transition\",\r\n-      task.atingido >= task.meta\r\n-        ? \"bg-green-500 text-white\"\r\n-        : \"bg-yellow-400 text-yellow-900\"\r\n-    )}\r\n-  >\r\n-    {task.atingido >= task.meta ? \"Meta Batida\" : \"Meta Pendente\"}\r\n-  </div>\r\n+<div\r\n+  className={cn(\r\n+    \"inline-flex items-center gap-2 px-2 py-1 rounded-full text-xs font-medium border whitespace-nowrap transition\",\r\n+    task.meta === 0 && task.atingido === 0\r\n+      ? \"bg-muted text-muted-foreground\"\r\n+      : task.atingido >= task.meta\r\n+      ? \"bg-green-500 text-white\"\r\n+      : \"bg-yellow-400 text-yellow-900\"\r\n+  )}\r\n+>\r\n+  {task.meta === 0 && task.atingido === 0\r\n+    ? \"Meta indefinida\"\r\n+    : task.atingido >= task.meta\r\n+    ? \"Meta Batida\"\r\n+    : \"Meta Pendente\"}\r\n+</div>\r\n+\r\n </CardContent>\r\n \r\n       </Card>\r\n     </>\r\n"
                },
                {
                    "date": 1745127518839,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,19 +11,21 @@\n   DropdownMenuItem,\r\n   DropdownMenuTrigger,\r\n } from \"@/components/ui/dropdown-menu\";\r\n import { Button } from \"@/components/ui/button\";\r\n-import { MoreVertical, SquarePen, Trash2 } from \"lucide-react\";\r\n+import { MoreVertical, Trash2 } from \"lucide-react\";\r\n import DeleteConfirmationDialog from \"@/components/delete-confirmation-dialog\";\r\n-import EditTask from \"./edit-task\";\r\n+import { Instagram } from 'lucide-react';\r\n+import type { Influenciador } from '@/lib/influenciadores';\r\n import { useState } from \"react\";\r\n-import { Instagram } from 'lucide-react'; // adicione no topo, se ainda nÃ£o tiver\r\n-import type { Influenciador } from '@/lib/influenciadores';\r\n \r\n+type Props = {\r\n+  task: Influenciador;\r\n+  onClick?: () => void;\r\n+};\r\n \r\n-function TaskCard({ task }: { task: Influenciador }) {\r\n+function TaskCard({ task, onClick }: Props) {\r\n   const [open, setOpen] = useState<boolean>(false);\r\n-  const [editTaskOpen, setEditTaskOpen] = useState<boolean>(false);\r\n \r\n   const {\r\n     setNodeRef,\r\n     attributes,\r\n@@ -43,122 +45,106 @@\n     transition,\r\n     transform: CSS.Transform.toString(transform),\r\n   };\r\n \r\n-  const porcentagem = task.meta\r\n-    ? Math.round((task.atingido / task.meta) * 100)\r\n-    : 0;\r\n-\r\n   return (\r\n     <>\r\n       <DeleteConfirmationDialog open={open} onClose={() => setOpen(false)} />\r\n-      <EditTask open={editTaskOpen} setOpen={setEditTaskOpen} />\r\n \r\n       <Card\r\n-        className={cn(\"shadow\", {\r\n+        className={cn(\"shadow cursor-pointer\", {\r\n           \"opacity-20 bg-primary/20\": isDragging,\r\n         })}\r\n         ref={setNodeRef}\r\n         style={style}\r\n+        onClick={onClick}\r\n         {...attributes}\r\n         {...listeners}\r\n       >\r\n+        <CardHeader className=\"flex-row items-center gap-3 pb-2\">\r\n+          <Avatar className=\"h-10 w-10\">\r\n+            <AvatarImage src={task.imagem} />\r\n+            <AvatarFallback>{task.nome.charAt(0)}</AvatarFallback>\r\n+          </Avatar>\r\n+          <div className=\"flex-1\">\r\n+            <p className=\"font-semibold text-sm truncate\">{task.nome}</p>\r\n+            <a\r\n+              href={task.instagram}\r\n+              target=\"_blank\"\r\n+              rel=\"noopener noreferrer\"\r\n+              className=\"flex items-center gap-1 text-xs text-muted-foreground hover:underline\"\r\n+              onClick={(e) => e.stopPropagation()}\r\n+            >\r\n+              <Instagram className=\"w-3 h-3 text-pink-600\" />\r\n+              @{task.instagram.replace('https://instagram.com/', '')}\r\n+            </a>\r\n+          </div>\r\n \r\n-<CardHeader className=\"flex-row items-center gap-3 pb-2\">\r\n-  <Avatar className=\"h-10 w-10\">\r\n-    <AvatarImage src={task.imagem} />\r\n-    <AvatarFallback>{task.nome.charAt(0)}</AvatarFallback>\r\n-  </Avatar>\r\n-  <div className=\"flex-1\">\r\n-    <p className=\"font-semibold text-sm truncate\">{task.nome}</p>\r\n-    <a\r\n-      href={task.instagram}\r\n-      target=\"_blank\"\r\n-      rel=\"noopener noreferrer\"\r\n-      className=\"flex items-center gap-1 text-xs text-muted-foreground hover:underline\"\r\n-    >\r\n-      <Instagram className=\"w-3 h-3 text-pink-600\" />\r\n-      @{task.instagram.replace('https://instagram.com/', '')}\r\n-    </a>\r\n-  </div>\r\n+          <DropdownMenu>\r\n+            <DropdownMenuTrigger asChild>\r\n+              <Button\r\n+                size=\"icon\"\r\n+                className=\"bg-transparent hover:bg-transparent hover:ring-0 hover:ring-transparent w-6\"\r\n+                onClick={(e) => e.stopPropagation()}\r\n+              >\r\n+                <MoreVertical className=\"h-4 w-4 text-default-900\" />\r\n+              </Button>\r\n+            </DropdownMenuTrigger>\r\n+            <DropdownMenuContent className=\"p-0 overflow-hidden\" align=\"end\">\r\n+              <DropdownMenuItem\r\n+                className=\"py-2 bg-destructive/30 text-destructive focus:bg-destructive focus:text-destructive-foreground rounded-none cursor-pointer\"\r\n+                onClick={() => setOpen(true)}\r\n+              >\r\n+                <Trash2 className=\"w-3.5 h-3.5 me-1\" />\r\n+                Excluir\r\n+              </DropdownMenuItem>\r\n+            </DropdownMenuContent>\r\n+          </DropdownMenu>\r\n+        </CardHeader>\r\n \r\n-  <DropdownMenu>\r\n-    <DropdownMenuTrigger asChild>\r\n-      <Button\r\n-        size=\"icon\"\r\n-        className=\"bg-transparent hover:bg-transparent hover:ring-0 hover:ring-transparent w-6\"\r\n-      >\r\n-        <MoreVertical className=\"h-4 w-4 text-default-900\" />\r\n-      </Button>\r\n-    </DropdownMenuTrigger>\r\n-    <DropdownMenuContent className=\"p-0 overflow-hidden\" align=\"end\">\r\n-      <DropdownMenuItem\r\n-        className=\"py-2 border-b border-default-200 text-default-600 focus:bg-default focus:text-default-foreground rounded-none cursor-pointer\"\r\n-        onClick={() => setEditTaskOpen(true)}\r\n-      >\r\n-        <SquarePen className=\"w-3.5 h-3.5 me-1\" />\r\n-        Editar\r\n-      </DropdownMenuItem>\r\n-      <DropdownMenuItem\r\n-        className=\"py-2 bg-destructive/30 text-destructive focus:bg-destructive focus:text-destructive-foreground rounded-none cursor-pointer\"\r\n-        onClick={() => setOpen(true)}\r\n-      >\r\n-        <Trash2 className=\"w-3.5 h-3.5 me-1\" />\r\n-        Excluir\r\n-      </DropdownMenuItem>\r\n-    </DropdownMenuContent>\r\n-  </DropdownMenu>\r\n-</CardHeader>\r\n-\r\n-\r\n         <CardContent className=\"text-xs text-muted-foreground space-y-1\">\r\n-  <p>CPF: {task.cpf}</p>\r\n-  <p>\r\n-  Meta:{' '}\r\n-  {task.meta > 0\r\n-    ? `R$ ${task.meta.toLocaleString()}`\r\n-    : <span className=\"text-muted-foreground italic\">NÃ£o definida</span>}\r\n-</p>\r\n+          <p>CPF: {task.cpf}</p>\r\n+          <p>\r\n+            Meta:{' '}\r\n+            {task.meta > 0\r\n+              ? `R$ ${task.meta.toLocaleString()}`\r\n+              : <span className=\"italic\">NÃ£o definida</span>}\r\n+          </p>\r\n+          <p>\r\n+            Atingido:{' '}\r\n+            {task.atingido > 0\r\n+              ? `R$ ${task.atingido.toLocaleString()}`\r\n+              : <span className=\"italic\">NÃ£o definido</span>}\r\n+          </p>\r\n+          <p>\r\n+            Reembolso:{' '}\r\n+            {(task.meta > 0 || task.atingido > 0)\r\n+              ? (\r\n+                <span className={task.reembolso > 0 ? 'text-red-600 font-semibold' : 'text-green-600'}>\r\n+                  R$ {task.reembolso.toLocaleString()}\r\n+                </span>\r\n+              ) : (\r\n+                <span className=\"italic\">NÃ£o definido</span>\r\n+              )}\r\n+          </p>\r\n \r\n-<p>\r\n-  Atingido:{' '}\r\n-  {task.atingido > 0\r\n-    ? `R$ ${task.atingido.toLocaleString()}`\r\n-    : <span className=\"text-muted-foreground italic\">NÃ£o definido</span>}\r\n-</p>\r\n-\r\n-<p>\r\n-  Reembolso:{' '}\r\n-  {(task.meta > 0 || task.atingido > 0)\r\n-    ? (\r\n-      <span className={task.reembolso > 0 ? 'text-red-600 font-semibold' : 'text-green-600'}>\r\n-        R$ {task.reembolso.toLocaleString()}\r\n-      </span>\r\n-    ) : (\r\n-      <span className=\"text-muted-foreground italic\">NÃ£o definido</span>\r\n-    )}\r\n-</p>\r\n-\r\n-\r\n-<div\r\n-  className={cn(\r\n-    \"inline-flex items-center gap-2 px-2 py-1 rounded-full text-xs font-medium border whitespace-nowrap transition\",\r\n-    task.meta === 0 && task.atingido === 0\r\n-      ? \"bg-muted text-muted-foreground\"\r\n-      : task.atingido >= task.meta\r\n-      ? \"bg-green-500 text-white\"\r\n-      : \"bg-yellow-400 text-yellow-900\"\r\n-  )}\r\n->\r\n-  {task.meta === 0 && task.atingido === 0\r\n-    ? \"Meta indefinida\"\r\n-    : task.atingido >= task.meta\r\n-    ? \"Meta Batida\"\r\n-    : \"Meta Pendente\"}\r\n-</div>\r\n-\r\n-</CardContent>\r\n-\r\n+          <div\r\n+            className={cn(\r\n+              \"inline-flex items-center gap-2 px-2 py-1 rounded-full text-xs font-medium border whitespace-nowrap transition\",\r\n+              task.meta === 0 && task.atingido === 0\r\n+                ? \"bg-muted text-muted-foreground\"\r\n+                : task.atingido >= task.meta\r\n+                ? \"bg-green-500 text-white\"\r\n+                : \"bg-yellow-400 text-yellow-900\"\r\n+            )}\r\n+          >\r\n+            {task.meta === 0 && task.atingido === 0\r\n+              ? \"Meta indefinida\"\r\n+              : task.atingido >= task.meta\r\n+              ? \"Meta Batida\"\r\n+              : \"Meta Pendente\"}\r\n+          </div>\r\n+        </CardContent>\r\n       </Card>\r\n     </>\r\n   );\r\n }\r\n"
                }
            ],
            "date": 1745004981289,
            "name": "Commit-0",
            "content": "'use client';\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport { useSortable } from \"@dnd-kit/sortable\";\r\nimport { CSS } from \"@dnd-kit/utilities\";\r\nimport { Card, CardContent, CardHeader } from \"@/components/ui/card\";\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger,\r\n} from \"@/components/ui/dropdown-menu\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { MoreVertical, SquarePen, Trash2 } from \"lucide-react\";\r\nimport DeleteConfirmationDialog from \"@/components/delete-confirmation-dialog\";\r\nimport EditTask from \"./edit-task\";\r\nimport { useState } from \"react\";\r\n\r\ntype InfluenciadorKanban = {\r\n  id: string;\r\n  nome: string;\r\n  imagem?: string;\r\n  instagram: string;\r\n  cpf: string;\r\n  meta: number;\r\n  atingido: number;\r\n  status: string;\r\n};\r\n\r\nfunction TaskCard({ task }: { task: InfluenciadorKanban }) {\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const [editTaskOpen, setEditTaskOpen] = useState<boolean>(false);\r\n\r\n  const {\r\n    setNodeRef,\r\n    attributes,\r\n    listeners,\r\n    transform,\r\n    transition,\r\n    isDragging,\r\n  } = useSortable({\r\n    id: task.id,\r\n    data: {\r\n      type: \"Task\",\r\n      task,\r\n    },\r\n  });\r\n\r\n  const style = {\r\n    transition,\r\n    transform: CSS.Transform.toString(transform),\r\n  };\r\n\r\n  const porcentagem = task.meta\r\n    ? Math.round((task.atingido / task.meta) * 100)\r\n    : 0;\r\n\r\n  return (\r\n    <>\r\n      <DeleteConfirmationDialog open={open} onClose={() => setOpen(false)} />\r\n      <EditTask open={editTaskOpen} setOpen={setEditTaskOpen} />\r\n\r\n      <Card\r\n        className={cn(\"shadow\", {\r\n          \"opacity-20 bg-primary/20\": isDragging,\r\n        })}\r\n        ref={setNodeRef}\r\n        style={style}\r\n        {...attributes}\r\n        {...listeners}\r\n      >\r\n        <CardHeader className=\"flex-row items-center gap-3 pb-2\">\r\n          <Avatar className=\"h-10 w-10\">\r\n            <AvatarImage src={task.imagem} />\r\n            <AvatarFallback>{task.nome.charAt(0)}</AvatarFallback>\r\n          </Avatar>\r\n          <div className=\"flex-1\">\r\n            <p className=\"font-semibold text-sm truncate\">{task.nome}</p>\r\n            <p className=\"text-xs text-muted-foreground truncate\">\r\n              {task.instagram}\r\n            </p>\r\n          </div>\r\n\r\n          <DropdownMenu>\r\n            <DropdownMenuTrigger asChild>\r\n              <Button\r\n                size=\"icon\"\r\n                className=\"bg-transparent hover:bg-transparent hover:ring-0 hover:ring-transparent w-6\"\r\n              >\r\n                <MoreVertical className=\"h-4 w-4 text-default-900\" />\r\n              </Button>\r\n            </DropdownMenuTrigger>\r\n            <DropdownMenuContent className=\"p-0 overflow-hidden\" align=\"end\">\r\n              <DropdownMenuItem\r\n                className=\"py-2 border-b border-default-200 text-default-600 focus:bg-default focus:text-default-foreground rounded-none cursor-pointer\"\r\n                onClick={() => setEditTaskOpen(true)}\r\n              >\r\n                <SquarePen className=\"w-3.5 h-3.5 me-1\" />\r\n                Editar\r\n              </DropdownMenuItem>\r\n              <DropdownMenuItem\r\n                className=\"py-2 bg-destructive/30 text-destructive focus:bg-destructive focus:text-destructive-foreground rounded-none cursor-pointer\"\r\n                onClick={() => setOpen(true)}\r\n              >\r\n                <Trash2 className=\"w-3.5 h-3.5 me-1\" />\r\n                Excluir\r\n              </DropdownMenuItem>\r\n            </DropdownMenuContent>\r\n          </DropdownMenu>\r\n        </CardHeader>\r\n\r\n        <CardContent className=\"text-xs text-muted-foreground space-y-1\">\r\n          <p>CPF: {task.cpf}</p>\r\n          <p>Meta: R$ {task.meta.toLocaleString()}</p>\r\n          <p>Atingido: R$ {task.atingido.toLocaleString()}</p>\r\n          <p className=\"text-green-600 font-semibold\">\r\n            {porcentagem}% da meta\r\n          </p>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TaskCard;\r\n"
        }
    ]
}