{
    "sourceFile": "app/[locale]/(protected)/influenciadores/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1746643428417,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746643528927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,13 +106,14 @@\n                     <Link href={`/${locale}/influenciadores/grupos/${grupo.id}`} className=\"block\">\r\n                       <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n                         <CardContent className=\"p-6 text-center space-y-2\">\r\n                         <Image\r\n-  src={grupo.imagem || '/images/grupos/default.png'}\r\n+  src={erroImagem || !grupo.imagem ? '/images/grupos/default.png' : grupo.imagem}\r\n   alt={grupo.nome}\r\n   width={120}\r\n   height={120}\r\n   className=\"mx-auto h-32 object-contain\"\r\n+  onError={() => setErroImagem(true)}\r\n />\r\n                           <div className=\"text-sm font-medium\">{grupo.nome}</div>\r\n                         </CardContent>\r\n                       </Card>\r\n"
                },
                {
                    "date": 1746643612500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,218 @@\n+'use client';\r\n+\r\n+import { useEffect, useState } from 'react';\r\n+import {\r\n+  Tabs,\r\n+  TabsContent,\r\n+  TabsList,\r\n+  TabsTrigger\r\n+} from \"@/components/ui/tabs\";\r\n+import {\r\n+  Card,\r\n+  CardContent\r\n+} from \"@/components/ui/card\";\r\n+import { Input } from \"@/components/ui/input\";\r\n+import { Button } from \"@/components/ui/button\";\r\n+import { Pencil, Plus } from \"lucide-react\";\r\n+import Image from \"next/image\";\r\n+import Link from \"next/link\";\r\n+import PlataformaModal from \"@/components/PlataformaModal\";\r\n+import GrupoModal from \"@/components/GrupoModal\";\r\n+import { useLocale } from 'next-intl'; \r\n+\r\n+interface Plataforma {\r\n+  id: string;\r\n+  nome: string;\r\n+  imagem?: string;\r\n+  cor: string;\r\n+  grupoId: string | null;\r\n+}\r\n+interface Grupo {\r\n+  id: string;\r\n+  nome: string;\r\n+  imagem?: string;\r\n+}\r\n+\r\n+export default function InfluenciadoresPage() {\r\n+  const [plataformas, setPlataformas] = useState<Plataforma[]>([]);\r\n+  const [grupos, setGrupos] = useState<Grupo[]>([]);\r\n+  const [busca, setBusca] = useState('');\r\n+  const [abaAtiva, setAbaAtiva] = useState('grupos');\r\n+  const [modalPlataformaAberto, setModalPlataformaAberto] = useState(false);\r\n+  const [modalGrupoAberto, setModalGrupoAberto] = useState(false);\r\n+  const [plataformaEditando, setPlataformaEditando] = useState<Plataforma | null>(null);\r\n+  const [grupoEditando, setGrupoEditando] = useState<Grupo | null>(null);\r\n+  const locale = useLocale(); // ⬅️ Pegue o locale atual\r\n+\r\n+  const buscarPlataformas = async () => {\r\n+    const res = await fetch('/api/plataformas');\r\n+    const data = await res.json();\r\n+    setPlataformas(data);\r\n+  };\r\n+\r\n+  const buscarGrupos = async () => {\r\n+    const res = await fetch('/api/grupos');\r\n+    const data = await res.json();\r\n+    setGrupos(data);\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    buscarPlataformas();\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    if (abaAtiva === 'grupos') buscarGrupos();\r\n+  }, [abaAtiva]);\r\n+\r\n+  const gruposFiltrados = grupos.filter((g) =>\r\n+    g.nome.toLowerCase().includes(busca.toLowerCase())\r\n+  );\r\n+  const plataformasFiltradas = plataformas.filter((p) =>\r\n+    p.nome.toLowerCase().includes(busca.toLowerCase())\r\n+  );\r\n+  const [erroImagem, setErroImagem] = useState(false);\r\n+\r\n+  return (\r\n+    <div className=\"p-4 space-y-4\">\r\n+      <Tabs defaultValue=\"grupos\" className=\"w-full\" onValueChange={setAbaAtiva}>\r\n+        <div className=\"relative bg-white rounded-xl shadow-sm p-4 flex items-center justify-between w-full mb-4 min-h-[60px]\">\r\n+          <TabsList className=\"flex space-x-2\">\r\n+            <TabsTrigger value=\"grupos\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-md px-6\">Grupos</TabsTrigger>\r\n+            <TabsTrigger value=\"plataformas\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-md px-6\">Todas as Plataformas</TabsTrigger>\r\n+          </TabsList>\r\n+\r\n+          <div className=\"flex items-center gap-3\">\r\n+            <Input placeholder=\"Filtrar por nome...\" value={busca} onChange={(e) => setBusca(e.target.value)} className=\"max-w-xs\" />\r\n+            <Button className=\"flex gap-2 items-center\" onClick={() => {\r\n+              if (abaAtiva === 'grupos') {\r\n+                setGrupoEditando(null);\r\n+                setModalGrupoAberto(true);\r\n+              } else {\r\n+                setPlataformaEditando(null);\r\n+                setModalPlataformaAberto(true);\r\n+              }\r\n+            }}>\r\n+              <Plus className=\"w-4 h-4\" />\r\n+              {abaAtiva === 'grupos' ? 'Novo Grupo' : 'Nova Plataforma'}\r\n+            </Button>\r\n+          </div>\r\n+        </div>\r\n+\r\n+        <TabsContent value=\"grupos\">\r\n+          <Card>\r\n+            <CardContent className=\"p-6\">\r\n+              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n+                {gruposFiltrados.map((grupo) => (\r\n+                  <div key={grupo.id} className=\"relative group\">\r\n+                    <Link href={`/${locale}/influenciadores/grupos/${grupo.id}`} className=\"block\">\r\n+                      <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n+                        <CardContent className=\"p-6 text-center space-y-2\">\r\n+                        <Image\r\n+  src={erroImagem || !grupo.imagem ? '/images/grupos/default.png' : grupo.imagem}\r\n+  alt={grupo.nome}\r\n+  width={120}\r\n+  height={120}\r\n+  className=\"mx-auto h-32 object-contain\"\r\n+  onError={() => setErroImagem(true)}\r\n+/>\r\n+                          <div className=\"text-sm font-medium\">{grupo.nome}</div>\r\n+                        </CardContent>\r\n+                      </Card>\r\n+                    </Link>\r\n+                    <Button\r\n+                      size=\"icon\"\r\n+                      variant=\"ghost\"\r\n+                      className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition bg-white/80 hover:bg-gray-600\"\r\n+                      onClick={() => {\r\n+                        setGrupoEditando(grupo);\r\n+                        setModalGrupoAberto(true);\r\n+                      }}\r\n+                    >\r\n+                      <Pencil className=\"w-4 h-4\" />\r\n+                    </Button>\r\n+                  </div>\r\n+                ))}\r\n+              </div>\r\n+            </CardContent>\r\n+          </Card>\r\n+        </TabsContent>\r\n+\r\n+        <TabsContent value=\"plataformas\">\r\n+          <Card>\r\n+            <CardContent className=\"p-6\">\r\n+              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n+                {plataformasFiltradas.map((plataforma) => (\r\n+                  <div key={plataforma.id} className=\"relative group\">\r\n+                    <Link href={`/${locale}/influenciadores/plataformas/${plataforma.id}`} className=\"block\">\r\n+                      <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n+                        <CardContent className=\"p-6 text-center space-y-2\">\r\n+                        <Image\r\n+  src={erroImagem || !plataforma.imagem ? '/images/plataformas/default.png' : plataforma.imagem}\r\n+  alt={plataforma.nome}\r\n+  width={300}\r\n+  height={300}\r\n+  className=\"mx-auto mb-2 w-64 h-32 object-contain\"\r\n+  onError={() => setErroImagem(true)}\r\n+\r\n+/>\r\n+\r\n+                          <div className=\"text-sm font-medium\">{plataforma.nome}</div>\r\n+                        </CardContent>\r\n+                      </Card>\r\n+                    </Link>\r\n+                    <Button size=\"icon\" variant=\"ghost\" className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition bg-white/80 hover:bg-gray-600\" onClick={() => {\r\n+                      setPlataformaEditando(plataforma);\r\n+                      setModalPlataformaAberto(true);\r\n+                    }}>\r\n+                      <Pencil className=\"w-4 h-4\" />\r\n+                    </Button>\r\n+                  </div>\r\n+                ))}\r\n+              </div>\r\n+            </CardContent>\r\n+          </Card>\r\n+        </TabsContent>\r\n+      </Tabs>\r\n+\r\n+      <PlataformaModal\r\n+        open={modalPlataformaAberto}\r\n+        onClose={() => {\r\n+          setModalPlataformaAberto(false);\r\n+          setPlataformaEditando(null);\r\n+        }}\r\n+        onSave={async (dados) => {\r\n+          await fetch('/api/plataformas', {\r\n+            method: 'POST',\r\n+            headers: { 'Content-Type': 'application/json' },\r\n+            body: JSON.stringify(dados),\r\n+          });\r\n+          setModalPlataformaAberto(false);\r\n+          setPlataformaEditando(null);\r\n+          buscarPlataformas();\r\n+        }}\r\n+        plataformaAtual={plataformaEditando}\r\n+      />\r\n+\r\n+      <GrupoModal\r\n+        open={modalGrupoAberto}\r\n+        onClose={() => {\r\n+          setModalGrupoAberto(false);\r\n+          setGrupoEditando(null);\r\n+        }}\r\n+        onSave={async (dados) => {\r\n+          await fetch('/api/grupos', {\r\n+            method: 'POST',\r\n+            headers: { 'Content-Type': 'application/json' },\r\n+            body: JSON.stringify(dados),\r\n+          });\r\n+          await buscarGrupos();\r\n+          await buscarPlataformas();\r\n+          setModalGrupoAberto(false);\r\n+          setGrupoEditando(null);\r\n+        }}\r\n+        grupoAtual={grupoEditando}\r\n+        plataformasDisponiveis={plataformas.filter(p => !p.grupoId || p.grupoId === grupoEditando?.id)}\r\n+      />\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1746643630210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -215,219 +215,4 @@\n       />\r\n     </div>\r\n   );\r\n }\r\n-'use client';\r\n-\r\n-import { useEffect, useState } from 'react';\r\n-import {\r\n-  Tabs,\r\n-  TabsContent,\r\n-  TabsList,\r\n-  TabsTrigger\r\n-} from \"@/components/ui/tabs\";\r\n-import {\r\n-  Card,\r\n-  CardContent\r\n-} from \"@/components/ui/card\";\r\n-import { Input } from \"@/components/ui/input\";\r\n-import { Button } from \"@/components/ui/button\";\r\n-import { Pencil, Plus } from \"lucide-react\";\r\n-import Image from \"next/image\";\r\n-import Link from \"next/link\";\r\n-import PlataformaModal from \"@/components/PlataformaModal\";\r\n-import GrupoModal from \"@/components/GrupoModal\";\r\n-import { useLocale } from 'next-intl'; \r\n-\r\n-interface Plataforma {\r\n-  id: string;\r\n-  nome: string;\r\n-  imagem?: string;\r\n-  cor: string;\r\n-  grupoId: string | null;\r\n-}\r\n-interface Grupo {\r\n-  id: string;\r\n-  nome: string;\r\n-  imagem?: string;\r\n-}\r\n-\r\n-export default function InfluenciadoresPage() {\r\n-  const [plataformas, setPlataformas] = useState<Plataforma[]>([]);\r\n-  const [grupos, setGrupos] = useState<Grupo[]>([]);\r\n-  const [busca, setBusca] = useState('');\r\n-  const [abaAtiva, setAbaAtiva] = useState('grupos');\r\n-  const [modalPlataformaAberto, setModalPlataformaAberto] = useState(false);\r\n-  const [modalGrupoAberto, setModalGrupoAberto] = useState(false);\r\n-  const [plataformaEditando, setPlataformaEditando] = useState<Plataforma | null>(null);\r\n-  const [grupoEditando, setGrupoEditando] = useState<Grupo | null>(null);\r\n-  const locale = useLocale(); // ⬅️ Pegue o locale atual\r\n-\r\n-  const buscarPlataformas = async () => {\r\n-    const res = await fetch('/api/plataformas');\r\n-    const data = await res.json();\r\n-    setPlataformas(data);\r\n-  };\r\n-\r\n-  const buscarGrupos = async () => {\r\n-    const res = await fetch('/api/grupos');\r\n-    const data = await res.json();\r\n-    setGrupos(data);\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    buscarPlataformas();\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    if (abaAtiva === 'grupos') buscarGrupos();\r\n-  }, [abaAtiva]);\r\n-\r\n-  const gruposFiltrados = grupos.filter((g) =>\r\n-    g.nome.toLowerCase().includes(busca.toLowerCase())\r\n-  );\r\n-  const plataformasFiltradas = plataformas.filter((p) =>\r\n-    p.nome.toLowerCase().includes(busca.toLowerCase())\r\n-  );\r\n-\r\n-  return (\r\n-    <div className=\"p-4 space-y-4\">\r\n-      <Tabs defaultValue=\"grupos\" className=\"w-full\" onValueChange={setAbaAtiva}>\r\n-        <div className=\"relative bg-white rounded-xl shadow-sm p-4 flex items-center justify-between w-full mb-4 min-h-[60px]\">\r\n-          <TabsList className=\"flex space-x-2\">\r\n-            <TabsTrigger value=\"grupos\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-md px-6\">Grupos</TabsTrigger>\r\n-            <TabsTrigger value=\"plataformas\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-md px-6\">Todas as Plataformas</TabsTrigger>\r\n-          </TabsList>\r\n-\r\n-          <div className=\"flex items-center gap-3\">\r\n-            <Input placeholder=\"Filtrar por nome...\" value={busca} onChange={(e) => setBusca(e.target.value)} className=\"max-w-xs\" />\r\n-            <Button className=\"flex gap-2 items-center\" onClick={() => {\r\n-              if (abaAtiva === 'grupos') {\r\n-                setGrupoEditando(null);\r\n-                setModalGrupoAberto(true);\r\n-              } else {\r\n-                setPlataformaEditando(null);\r\n-                setModalPlataformaAberto(true);\r\n-              }\r\n-            }}>\r\n-              <Plus className=\"w-4 h-4\" />\r\n-              {abaAtiva === 'grupos' ? 'Novo Grupo' : 'Nova Plataforma'}\r\n-            </Button>\r\n-          </div>\r\n-        </div>\r\n-\r\n-        <TabsContent value=\"grupos\">\r\n-          <Card>\r\n-            <CardContent className=\"p-6\">\r\n-              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n-                {gruposFiltrados.map((grupo) => (\r\n-                  <div key={grupo.id} className=\"relative group\">\r\n-                    <Link href={`/${locale}/influenciadores/grupos/${grupo.id}`} className=\"block\">\r\n-                      <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n-                        <CardContent className=\"p-6 text-center space-y-2\">\r\n-                        <Image\r\n-  src={erroImagem || !grupo.imagem ? '/images/grupos/default.png' : grupo.imagem}\r\n-  alt={grupo.nome}\r\n-  width={120}\r\n-  height={120}\r\n-  className=\"mx-auto h-32 object-contain\"\r\n-  onError={() => setErroImagem(true)}\r\n-/>\r\n-                          <div className=\"text-sm font-medium\">{grupo.nome}</div>\r\n-                        </CardContent>\r\n-                      </Card>\r\n-                    </Link>\r\n-                    <Button\r\n-                      size=\"icon\"\r\n-                      variant=\"ghost\"\r\n-                      className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition bg-white/80 hover:bg-gray-600\"\r\n-                      onClick={() => {\r\n-                        setGrupoEditando(grupo);\r\n-                        setModalGrupoAberto(true);\r\n-                      }}\r\n-                    >\r\n-                      <Pencil className=\"w-4 h-4\" />\r\n-                    </Button>\r\n-                  </div>\r\n-                ))}\r\n-              </div>\r\n-            </CardContent>\r\n-          </Card>\r\n-        </TabsContent>\r\n-\r\n-        <TabsContent value=\"plataformas\">\r\n-          <Card>\r\n-            <CardContent className=\"p-6\">\r\n-              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n-                {plataformasFiltradas.map((plataforma) => (\r\n-                  <div key={plataforma.id} className=\"relative group\">\r\n-                    <Link href={`/${locale}/influenciadores/plataformas/${plataforma.id}`} className=\"block\">\r\n-                      <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n-                        <CardContent className=\"p-6 text-center space-y-2\">\r\n-                        <Image\r\n-  src={plataforma.imagem || '/images/plataformas/default.png'}\r\n-  alt={plataforma.nome}\r\n-  width={300}\r\n-  height={300}\r\n-  className=\"mx-auto mb-2 w-64 h-32 object-contain\"\r\n-/>\r\n-\r\n-                          <div className=\"text-sm font-medium\">{plataforma.nome}</div>\r\n-                        </CardContent>\r\n-                      </Card>\r\n-                    </Link>\r\n-                    <Button size=\"icon\" variant=\"ghost\" className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition bg-white/80 hover:bg-gray-600\" onClick={() => {\r\n-                      setPlataformaEditando(plataforma);\r\n-                      setModalPlataformaAberto(true);\r\n-                    }}>\r\n-                      <Pencil className=\"w-4 h-4\" />\r\n-                    </Button>\r\n-                  </div>\r\n-                ))}\r\n-              </div>\r\n-            </CardContent>\r\n-          </Card>\r\n-        </TabsContent>\r\n-      </Tabs>\r\n-\r\n-      <PlataformaModal\r\n-        open={modalPlataformaAberto}\r\n-        onClose={() => {\r\n-          setModalPlataformaAberto(false);\r\n-          setPlataformaEditando(null);\r\n-        }}\r\n-        onSave={async (dados) => {\r\n-          await fetch('/api/plataformas', {\r\n-            method: 'POST',\r\n-            headers: { 'Content-Type': 'application/json' },\r\n-            body: JSON.stringify(dados),\r\n-          });\r\n-          setModalPlataformaAberto(false);\r\n-          setPlataformaEditando(null);\r\n-          buscarPlataformas();\r\n-        }}\r\n-        plataformaAtual={plataformaEditando}\r\n-      />\r\n-\r\n-      <GrupoModal\r\n-        open={modalGrupoAberto}\r\n-        onClose={() => {\r\n-          setModalGrupoAberto(false);\r\n-          setGrupoEditando(null);\r\n-        }}\r\n-        onSave={async (dados) => {\r\n-          await fetch('/api/grupos', {\r\n-            method: 'POST',\r\n-            headers: { 'Content-Type': 'application/json' },\r\n-            body: JSON.stringify(dados),\r\n-          });\r\n-          await buscarGrupos();\r\n-          await buscarPlataformas();\r\n-          setModalGrupoAberto(false);\r\n-          setGrupoEditando(null);\r\n-        }}\r\n-        grupoAtual={grupoEditando}\r\n-        plataformasDisponiveis={plataformas.filter(p => !p.grupoId || p.grupoId === grupoEditando?.id)}\r\n-      />\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1746643687723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,16 +106,21 @@\n                   <div key={grupo.id} className=\"relative group\">\r\n                     <Link href={`/${locale}/influenciadores/grupos/${grupo.id}`} className=\"block\">\r\n                       <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n                         <CardContent className=\"p-6 text-center space-y-2\">\r\n-                        <Image\r\n-  src={erroImagem || !grupo.imagem ? '/images/grupos/default.png' : grupo.imagem}\r\n-  alt={grupo.nome}\r\n-  width={120}\r\n-  height={120}\r\n-  className=\"mx-auto h-32 object-contain\"\r\n-  onError={() => setErroImagem(true)}\r\n-/>\r\n+                        {(() => {\r\n+  const [erro, setErro] = useState(false);\r\n+  return (\r\n+    <Image\r\n+      src={!grupo.imagem || erro ? '/images/grupos/default.png' : grupo.imagem}\r\n+      alt={grupo.nome}\r\n+      width={120}\r\n+      height={120}\r\n+      className=\"mx-auto h-32 object-contain\"\r\n+      onError={() => setErro(true)}\r\n+    />\r\n+  );\r\n+})()}\r\n                           <div className=\"text-sm font-medium\">{grupo.nome}</div>\r\n                         </CardContent>\r\n                       </Card>\r\n                     </Link>\r\n"
                },
                {
                    "date": 1746643705092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -150,18 +150,22 @@\n                   <div key={plataforma.id} className=\"relative group\">\r\n                     <Link href={`/${locale}/influenciadores/plataformas/${plataforma.id}`} className=\"block\">\r\n                       <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n                         <CardContent className=\"p-6 text-center space-y-2\">\r\n-                        <Image\r\n-  src={erroImagem || !plataforma.imagem ? '/images/plataformas/default.png' : plataforma.imagem}\r\n-  alt={plataforma.nome}\r\n-  width={300}\r\n-  height={300}\r\n-  className=\"mx-auto mb-2 w-64 h-32 object-contain\"\r\n-  onError={() => setErroImagem(true)}\r\n+                        {(() => {\r\n+  const [erro, setErro] = useState(false);\r\n+  return (\r\n+    <Image\r\n+      src={!plataforma.imagem || erro ? '/images/plataformas/default.png' : plataforma.imagem}\r\n+      alt={plataforma.nome}\r\n+      width={300}\r\n+      height={300}\r\n+      className=\"mx-auto mb-2 w-64 h-32 object-contain\"\r\n+      onError={() => setErro(true)}\r\n+    />\r\n+  );\r\n+})()}\r\n \r\n-/>\r\n-\r\n                           <div className=\"text-sm font-medium\">{plataforma.nome}</div>\r\n                         </CardContent>\r\n                       </Card>\r\n                     </Link>\r\n"
                },
                {
                    "date": 1746643765347,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,10 +69,32 @@\n   );\r\n   const plataformasFiltradas = plataformas.filter((p) =>\r\n     p.nome.toLowerCase().includes(busca.toLowerCase())\r\n   );\r\n-  const [erroImagem, setErroImagem] = useState(false);\r\n+  function ImagemComFallback({\r\n+    src,\r\n+    fallback,\r\n+    alt,\r\n+    ...props\r\n+  }: {\r\n+    src?: string\r\n+    fallback: string\r\n+    alt: string\r\n+    [key: string]: any\r\n+  }) {\r\n+    const [erro, setErro] = useState(false)\r\n+  \r\n+    return (\r\n+      <Image\r\n+        src={erro || !src ? fallback : src}\r\n+        alt={alt}\r\n+        onError={() => setErro(true)}\r\n+        {...props}\r\n+      />\r\n+    )\r\n+  }\r\n \r\n+\r\n   return (\r\n     <div className=\"p-4 space-y-4\">\r\n       <Tabs defaultValue=\"grupos\" className=\"w-full\" onValueChange={setAbaAtiva}>\r\n         <div className=\"relative bg-white rounded-xl shadow-sm p-4 flex items-center justify-between w-full mb-4 min-h-[60px]\">\r\n"
                },
                {
                    "date": 1746643779147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,21 +128,16 @@\n                   <div key={grupo.id} className=\"relative group\">\r\n                     <Link href={`/${locale}/influenciadores/grupos/${grupo.id}`} className=\"block\">\r\n                       <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n                         <CardContent className=\"p-6 text-center space-y-2\">\r\n-                        {(() => {\r\n-  const [erro, setErro] = useState(false);\r\n-  return (\r\n-    <Image\r\n-      src={!grupo.imagem || erro ? '/images/grupos/default.png' : grupo.imagem}\r\n-      alt={grupo.nome}\r\n-      width={120}\r\n-      height={120}\r\n-      className=\"mx-auto h-32 object-contain\"\r\n-      onError={() => setErro(true)}\r\n-    />\r\n-  );\r\n-})()}\r\n+                        <ImagemComFallback\r\n+  src={grupo.imagem}\r\n+  fallback=\"/images/grupos/default.png\"\r\n+  alt={grupo.nome}\r\n+  width={120}\r\n+  height={120}\r\n+  className=\"mx-auto h-32 object-contain\"\r\n+/>\r\n                           <div className=\"text-sm font-medium\">{grupo.nome}</div>\r\n                         </CardContent>\r\n                       </Card>\r\n                     </Link>\r\n"
                },
                {
                    "date": 1746643785250,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,22 +167,18 @@\n                   <div key={plataforma.id} className=\"relative group\">\r\n                     <Link href={`/${locale}/influenciadores/plataformas/${plataforma.id}`} className=\"block\">\r\n                       <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n                         <CardContent className=\"p-6 text-center space-y-2\">\r\n-                        {(() => {\r\n-  const [erro, setErro] = useState(false);\r\n-  return (\r\n-    <Image\r\n-      src={!plataforma.imagem || erro ? '/images/plataformas/default.png' : plataforma.imagem}\r\n-      alt={plataforma.nome}\r\n-      width={300}\r\n-      height={300}\r\n-      className=\"mx-auto mb-2 w-64 h-32 object-contain\"\r\n-      onError={() => setErro(true)}\r\n-    />\r\n-  );\r\n-})()}\r\n+                        <ImagemComFallback\r\n+  src={plataforma.imagem}\r\n+  fallback=\"/images/plataformas/default.png\"\r\n+  alt={plataforma.nome}\r\n+  width={300}\r\n+  height={300}\r\n+  className=\"mx-auto mb-2 w-64 h-32 object-contain\"\r\n+/>\r\n \r\n+\r\n                           <div className=\"text-sm font-medium\">{plataforma.nome}</div>\r\n                         </CardContent>\r\n                       </Card>\r\n                     </Link>\r\n"
                }
            ],
            "date": 1746643428417,
            "name": "Commit-0",
            "content": "'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n  Tabs,\r\n  TabsContent,\r\n  TabsList,\r\n  TabsTrigger\r\n} from \"@/components/ui/tabs\";\r\nimport {\r\n  Card,\r\n  CardContent\r\n} from \"@/components/ui/card\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Pencil, Plus } from \"lucide-react\";\r\nimport Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport PlataformaModal from \"@/components/PlataformaModal\";\r\nimport GrupoModal from \"@/components/GrupoModal\";\r\nimport { useLocale } from 'next-intl'; \r\n\r\ninterface Plataforma {\r\n  id: string;\r\n  nome: string;\r\n  imagem?: string;\r\n  cor: string;\r\n  grupoId: string | null;\r\n}\r\ninterface Grupo {\r\n  id: string;\r\n  nome: string;\r\n  imagem?: string;\r\n}\r\n\r\nexport default function InfluenciadoresPage() {\r\n  const [plataformas, setPlataformas] = useState<Plataforma[]>([]);\r\n  const [grupos, setGrupos] = useState<Grupo[]>([]);\r\n  const [busca, setBusca] = useState('');\r\n  const [abaAtiva, setAbaAtiva] = useState('grupos');\r\n  const [modalPlataformaAberto, setModalPlataformaAberto] = useState(false);\r\n  const [modalGrupoAberto, setModalGrupoAberto] = useState(false);\r\n  const [plataformaEditando, setPlataformaEditando] = useState<Plataforma | null>(null);\r\n  const [grupoEditando, setGrupoEditando] = useState<Grupo | null>(null);\r\n  const locale = useLocale(); // ⬅️ Pegue o locale atual\r\n\r\n  const buscarPlataformas = async () => {\r\n    const res = await fetch('/api/plataformas');\r\n    const data = await res.json();\r\n    setPlataformas(data);\r\n  };\r\n\r\n  const buscarGrupos = async () => {\r\n    const res = await fetch('/api/grupos');\r\n    const data = await res.json();\r\n    setGrupos(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    buscarPlataformas();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (abaAtiva === 'grupos') buscarGrupos();\r\n  }, [abaAtiva]);\r\n\r\n  const gruposFiltrados = grupos.filter((g) =>\r\n    g.nome.toLowerCase().includes(busca.toLowerCase())\r\n  );\r\n  const plataformasFiltradas = plataformas.filter((p) =>\r\n    p.nome.toLowerCase().includes(busca.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"p-4 space-y-4\">\r\n      <Tabs defaultValue=\"grupos\" className=\"w-full\" onValueChange={setAbaAtiva}>\r\n        <div className=\"relative bg-white rounded-xl shadow-sm p-4 flex items-center justify-between w-full mb-4 min-h-[60px]\">\r\n          <TabsList className=\"flex space-x-2\">\r\n            <TabsTrigger value=\"grupos\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-md px-6\">Grupos</TabsTrigger>\r\n            <TabsTrigger value=\"plataformas\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-md px-6\">Todas as Plataformas</TabsTrigger>\r\n          </TabsList>\r\n\r\n          <div className=\"flex items-center gap-3\">\r\n            <Input placeholder=\"Filtrar por nome...\" value={busca} onChange={(e) => setBusca(e.target.value)} className=\"max-w-xs\" />\r\n            <Button className=\"flex gap-2 items-center\" onClick={() => {\r\n              if (abaAtiva === 'grupos') {\r\n                setGrupoEditando(null);\r\n                setModalGrupoAberto(true);\r\n              } else {\r\n                setPlataformaEditando(null);\r\n                setModalPlataformaAberto(true);\r\n              }\r\n            }}>\r\n              <Plus className=\"w-4 h-4\" />\r\n              {abaAtiva === 'grupos' ? 'Novo Grupo' : 'Nova Plataforma'}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <TabsContent value=\"grupos\">\r\n          <Card>\r\n            <CardContent className=\"p-6\">\r\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n                {gruposFiltrados.map((grupo) => (\r\n                  <div key={grupo.id} className=\"relative group\">\r\n                    <Link href={`/${locale}/influenciadores/grupos/${grupo.id}`} className=\"block\">\r\n                      <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n                        <CardContent className=\"p-6 text-center space-y-2\">\r\n                        <Image\r\n  src={grupo.imagem || '/images/grupos/default.png'}\r\n  alt={grupo.nome}\r\n  width={120}\r\n  height={120}\r\n  className=\"mx-auto h-32 object-contain\"\r\n/>\r\n                          <div className=\"text-sm font-medium\">{grupo.nome}</div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Link>\r\n                    <Button\r\n                      size=\"icon\"\r\n                      variant=\"ghost\"\r\n                      className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition bg-white/80 hover:bg-gray-600\"\r\n                      onClick={() => {\r\n                        setGrupoEditando(grupo);\r\n                        setModalGrupoAberto(true);\r\n                      }}\r\n                    >\r\n                      <Pencil className=\"w-4 h-4\" />\r\n                    </Button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"plataformas\">\r\n          <Card>\r\n            <CardContent className=\"p-6\">\r\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n                {plataformasFiltradas.map((plataforma) => (\r\n                  <div key={plataforma.id} className=\"relative group\">\r\n                    <Link href={`/${locale}/influenciadores/plataformas/${plataforma.id}`} className=\"block\">\r\n                      <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n                        <CardContent className=\"p-6 text-center space-y-2\">\r\n                        <Image\r\n  src={plataforma.imagem || '/images/plataformas/default.png'}\r\n  alt={plataforma.nome}\r\n  width={300}\r\n  height={300}\r\n  className=\"mx-auto mb-2 w-64 h-32 object-contain\"\r\n/>\r\n\r\n                          <div className=\"text-sm font-medium\">{plataforma.nome}</div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Link>\r\n                    <Button size=\"icon\" variant=\"ghost\" className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition bg-white/80 hover:bg-gray-600\" onClick={() => {\r\n                      setPlataformaEditando(plataforma);\r\n                      setModalPlataformaAberto(true);\r\n                    }}>\r\n                      <Pencil className=\"w-4 h-4\" />\r\n                    </Button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n\r\n      <PlataformaModal\r\n        open={modalPlataformaAberto}\r\n        onClose={() => {\r\n          setModalPlataformaAberto(false);\r\n          setPlataformaEditando(null);\r\n        }}\r\n        onSave={async (dados) => {\r\n          await fetch('/api/plataformas', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(dados),\r\n          });\r\n          setModalPlataformaAberto(false);\r\n          setPlataformaEditando(null);\r\n          buscarPlataformas();\r\n        }}\r\n        plataformaAtual={plataformaEditando}\r\n      />\r\n\r\n      <GrupoModal\r\n        open={modalGrupoAberto}\r\n        onClose={() => {\r\n          setModalGrupoAberto(false);\r\n          setGrupoEditando(null);\r\n        }}\r\n        onSave={async (dados) => {\r\n          await fetch('/api/grupos', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(dados),\r\n          });\r\n          await buscarGrupos();\r\n          await buscarPlataformas();\r\n          setModalGrupoAberto(false);\r\n          setGrupoEditando(null);\r\n        }}\r\n        grupoAtual={grupoEditando}\r\n        plataformasDisponiveis={plataformas.filter(p => !p.grupoId || p.grupoId === grupoEditando?.id)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"
        }
    ]
}