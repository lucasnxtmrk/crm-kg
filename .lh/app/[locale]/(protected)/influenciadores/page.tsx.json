{
    "sourceFile": "app/[locale]/(protected)/influenciadores/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 19,
            "patches": [
                {
                    "date": 1746132870957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746132912878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,8 +109,9 @@\n                               src={grupo.imagem}\r\n                               alt={grupo.nome}\r\n                               width={120}\r\n                               height={120}\r\n+                              unoptimized\r\n                               className=\"mx-auto h-32 object-contain\"\r\n                             />\r\n                           ) : (\r\n                             <div className=\"w-32 h-32 mx-auto bg-gray-200 flex items-center justify-center text-gray-500\">\r\n@@ -170,9 +171,9 @@\n           </Card>\r\n         </TabsContent>\r\n       </Tabs>\r\n \r\n-      {/* <PlataformaModal\r\n+      <PlataformaModal\r\n         open={modalPlataformaAberto}\r\n         onClose={() => {\r\n           setModalPlataformaAberto(false);\r\n           setPlataformaEditando(null);\r\n@@ -187,11 +188,11 @@\n           setPlataformaEditando(null);\r\n           buscarPlataformas();\r\n         }}\r\n         plataformaAtual={plataformaEditando}\r\n-      /> */}\r\n+      />\r\n \r\n-      {/* <GrupoModal\r\n+      <GrupoModal\r\n         open={modalGrupoAberto}\r\n         onClose={() => {\r\n           setModalGrupoAberto(false);\r\n           setGrupoEditando(null);\r\n@@ -208,8 +209,8 @@\n           setGrupoEditando(null);\r\n         }}\r\n         grupoAtual={grupoEditando}\r\n         plataformasDisponiveis={plataformas.filter(p => !p.grupoId || p.grupoId === grupoEditando?.id)}\r\n-      /> */}\r\n+      />\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1746132932330,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -149,9 +149,14 @@\n                     <Link href={`/influenciadores/plataformas/${plataforma.id}`} className=\"block\">\r\n                       <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n                         <CardContent className=\"p-6 text-center space-y-2\">\r\n                           {plataforma.imagem ? (\r\n-                            <Image src={plataforma.imagem} alt={plataforma.nome} width={300} height={300} className=\"mx-auto mb-2 w-64 h-32 object-contain\" />\r\n+                            <Image src={plataforma.imagem}\r\n+                             alt={plataforma.nome} \r\n+                             width={300} \r\n+                             height={300}\r\n+                             unoptimized\r\n+                             className=\"mx-auto mb-2 w-64 h-32 object-contain\" />\r\n                           ) : (\r\n                             <div className=\"w-64 h-32 mx-auto mb-2 bg-muted flex items-center justify-center text-gray-400\">Sem imagem</div>\r\n                           )}\r\n                           <div className=\"text-sm font-medium\">{plataforma.nome}</div>\r\n"
                },
                {
                    "date": 1746135257423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n   );\r\n \r\n   return (\r\n     <div className=\"p-4 space-y-4\">\r\n-      <Tabs defaultValue=\"grupos\" className=\"w-full\" onValueChange={setAbaAtiva}>\r\n+      {/* <Tabs defaultValue=\"grupos\" className=\"w-full\" onValueChange={setAbaAtiva}>\r\n         <div className=\"relative bg-white rounded-xl shadow-sm p-4 flex items-center justify-between w-full mb-4 min-h-[60px]\">\r\n           <TabsList className=\"flex space-x-2\">\r\n             <TabsTrigger value=\"grupos\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-md px-6\">Grupos</TabsTrigger>\r\n             <TabsTrigger value=\"plataformas\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-md px-6\">Plataformas</TabsTrigger>\r\n@@ -174,9 +174,9 @@\n               </div>\r\n             </CardContent>\r\n           </Card>\r\n         </TabsContent>\r\n-      </Tabs>\r\n+      </Tabs> */}\r\n \r\n       <PlataformaModal\r\n         open={modalPlataformaAberto}\r\n         onClose={() => {\r\n"
                },
                {
                    "date": 1746135263306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,221 @@\n+'use client';\r\n+\r\n+import { useEffect, useState } from 'react';\r\n+import {\r\n+  Tabs,\r\n+  TabsContent,\r\n+  TabsList,\r\n+  TabsTrigger\r\n+} from \"@/components/ui/tabs\";\r\n+import {\r\n+  Card,\r\n+  CardContent\r\n+} from \"@/components/ui/card\";\r\n+import { Input } from \"@/components/ui/input\";\r\n+import { Button } from \"@/components/ui/button\";\r\n+import { Pencil, Plus } from \"lucide-react\";\r\n+import Image from \"next/image\";\r\n+import Link from \"next/link\";\r\n+import PlataformaModal from \"@/components/PlataformaModal\";\r\n+import GrupoModal from \"@/components/GrupoModal\";\r\n+\r\n+interface Plataforma {\r\n+  id: string;\r\n+  nome: string;\r\n+  imagem?: string;\r\n+  cor: string;\r\n+  grupoId: string | null;\r\n+}\r\n+interface Grupo {\r\n+  id: string;\r\n+  nome: string;\r\n+  imagem?: string;\r\n+}\r\n+\r\n+export default function InfluenciadoresPage() {\r\n+  const [plataformas, setPlataformas] = useState<Plataforma[]>([]);\r\n+  const [grupos, setGrupos] = useState<Grupo[]>([]);\r\n+  const [busca, setBusca] = useState('');\r\n+  const [abaAtiva, setAbaAtiva] = useState('grupos');\r\n+  const [modalPlataformaAberto, setModalPlataformaAberto] = useState(false);\r\n+  const [modalGrupoAberto, setModalGrupoAberto] = useState(false);\r\n+  const [plataformaEditando, setPlataformaEditando] = useState<Plataforma | null>(null);\r\n+  const [grupoEditando, setGrupoEditando] = useState<Grupo | null>(null);\r\n+\r\n+  const buscarPlataformas = async () => {\r\n+    const res = await fetch('/api/plataformas');\r\n+    const data = await res.json();\r\n+    setPlataformas(data);\r\n+  };\r\n+\r\n+  const buscarGrupos = async () => {\r\n+    const res = await fetch('/api/grupos');\r\n+    const data = await res.json();\r\n+    setGrupos(data);\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    buscarPlataformas();\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    if (abaAtiva === 'grupos') buscarGrupos();\r\n+  }, [abaAtiva]);\r\n+\r\n+  const gruposFiltrados = grupos.filter((g) =>\r\n+    g.nome.toLowerCase().includes(busca.toLowerCase())\r\n+  );\r\n+  const plataformasFiltradas = plataformas.filter((p) =>\r\n+    p.nome.toLowerCase().includes(busca.toLowerCase())\r\n+  );\r\n+\r\n+  return (\r\n+    <div className=\"p-4 space-y-4\">\r\n+      {/* <Tabs defaultValue=\"grupos\" className=\"w-full\" onValueChange={setAbaAtiva}>\r\n+        <div className=\"relative bg-white rounded-xl shadow-sm p-4 flex items-center justify-between w-full mb-4 min-h-[60px]\">\r\n+          <TabsList className=\"flex space-x-2\">\r\n+            <TabsTrigger value=\"grupos\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-md px-6\">Grupos</TabsTrigger>\r\n+            <TabsTrigger value=\"plataformas\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-md px-6\">Plataformas</TabsTrigger>\r\n+          </TabsList>\r\n+\r\n+          <div className=\"flex items-center gap-3\">\r\n+            <Input placeholder=\"Filtrar por nome...\" value={busca} onChange={(e) => setBusca(e.target.value)} className=\"max-w-xs\" />\r\n+            <Button className=\"flex gap-2 items-center\" onClick={() => {\r\n+              if (abaAtiva === 'grupos') {\r\n+                setGrupoEditando(null);\r\n+                setModalGrupoAberto(true);\r\n+              } else {\r\n+                setPlataformaEditando(null);\r\n+                setModalPlataformaAberto(true);\r\n+              }\r\n+            }}>\r\n+              <Plus className=\"w-4 h-4\" />\r\n+              {abaAtiva === 'grupos' ? 'Novo Grupo' : 'Nova Plataforma'}\r\n+            </Button>\r\n+          </div>\r\n+        </div>\r\n+\r\n+        <TabsContent value=\"grupos\" forceMount>\r\n+          <Card>\r\n+            <CardContent className=\"p-6\">\r\n+              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n+                {gruposFiltrados.map((grupo) => (\r\n+                  <div key={grupo.id} className=\"relative group\">\r\n+                    <Link href={`/influenciadores/grupos/${grupo.id}`} className=\"block\">\r\n+                      <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n+                        <CardContent className=\"p-6 text-center space-y-2\">\r\n+                          {grupo.imagem ? (\r\n+                            <Image\r\n+                              src={grupo.imagem}\r\n+                              alt={grupo.nome}\r\n+                              width={120}\r\n+                              height={120}\r\n+                              unoptimized\r\n+                              className=\"mx-auto h-32 object-contain\"\r\n+                            />\r\n+                          ) : (\r\n+                            <div className=\"w-32 h-32 mx-auto bg-gray-200 flex items-center justify-center text-gray-500\">\r\n+                              Sem imagem\r\n+                            </div>\r\n+                          )}\r\n+                          <div className=\"text-sm font-medium\">{grupo.nome}</div>\r\n+                        </CardContent>\r\n+                      </Card>\r\n+                    </Link>\r\n+                    <Button\r\n+                      size=\"icon\"\r\n+                      variant=\"ghost\"\r\n+                      className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition bg-white/80 hover:bg-gray-600\"\r\n+                      onClick={() => {\r\n+                        setGrupoEditando(grupo);\r\n+                        setModalGrupoAberto(true);\r\n+                      }}\r\n+                    >\r\n+                      <Pencil className=\"w-4 h-4\" />\r\n+                    </Button>\r\n+                  </div>\r\n+                ))}\r\n+              </div>\r\n+            </CardContent>\r\n+          </Card>\r\n+        </TabsContent>\r\n+\r\n+        <TabsContent value=\"plataformas\">\r\n+          <Card>\r\n+            <CardContent className=\"p-6\">\r\n+              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n+                {plataformasFiltradas.map((plataforma) => (\r\n+                  <div key={plataforma.id} className=\"relative group\">\r\n+                    <Link href={`/influenciadores/plataformas/${plataforma.id}`} className=\"block\">\r\n+                      <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n+                        <CardContent className=\"p-6 text-center space-y-2\">\r\n+                          {plataforma.imagem ? (\r\n+                            <Image src={plataforma.imagem}\r\n+                             alt={plataforma.nome} \r\n+                             width={300} \r\n+                             height={300}\r\n+                             unoptimized\r\n+                             className=\"mx-auto mb-2 w-64 h-32 object-contain\" />\r\n+                          ) : (\r\n+                            <div className=\"w-64 h-32 mx-auto mb-2 bg-muted flex items-center justify-center text-gray-400\">Sem imagem</div>\r\n+                          )}\r\n+                          <div className=\"text-sm font-medium\">{plataforma.nome}</div>\r\n+                        </CardContent>\r\n+                      </Card>\r\n+                    </Link>\r\n+                    <Button size=\"icon\" variant=\"ghost\" className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition bg-white/80 hover:bg-gray-600\" onClick={() => {\r\n+                      setPlataformaEditando(plataforma);\r\n+                      setModalPlataformaAberto(true);\r\n+                    }}>\r\n+                      <Pencil className=\"w-4 h-4\" />\r\n+                    </Button>\r\n+                  </div>\r\n+                ))}\r\n+              </div>\r\n+            </CardContent>\r\n+          </Card>\r\n+        </TabsContent>\r\n+      </Tabs> */}\r\n+\r\n+      <PlataformaModal\r\n+        open={modalPlataformaAberto}\r\n+        onClose={() => {\r\n+          setModalPlataformaAberto(false);\r\n+          setPlataformaEditando(null);\r\n+        }}\r\n+        onSave={async (dados) => {\r\n+          await fetch('/api/plataformas', {\r\n+            method: 'POST',\r\n+            headers: { 'Content-Type': 'application/json' },\r\n+            body: JSON.stringify(dados),\r\n+          });\r\n+          setModalPlataformaAberto(false);\r\n+          setPlataformaEditando(null);\r\n+          buscarPlataformas();\r\n+        }}\r\n+        plataformaAtual={plataformaEditando}\r\n+      />\r\n+\r\n+      <GrupoModal\r\n+        open={modalGrupoAberto}\r\n+        onClose={() => {\r\n+          setModalGrupoAberto(false);\r\n+          setGrupoEditando(null);\r\n+        }}\r\n+        onSave={async (dados) => {\r\n+          await fetch('/api/grupos', {\r\n+            method: 'POST',\r\n+            headers: { 'Content-Type': 'application/json' },\r\n+            body: JSON.stringify(dados),\r\n+          });\r\n+          await buscarGrupos();\r\n+          await buscarPlataformas();\r\n+          setModalGrupoAberto(false);\r\n+          setGrupoEditando(null);\r\n+        }}\r\n+        grupoAtual={grupoEditando}\r\n+        plataformasDisponiveis={plataformas.filter(p => !p.grupoId || p.grupoId === grupoEditando?.id)}\r\n+      />\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1746135374629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,335 +70,74 @@\n   );\r\n \r\n   return (\r\n     <div className=\"p-4 space-y-4\">\r\n-      {/* <Tabs defaultValue=\"grupos\" className=\"w-full\" onValueChange={setAbaAtiva}>\r\n-        <div className=\"relative bg-white rounded-xl shadow-sm p-4 flex items-center justify-between w-full mb-4 min-h-[60px]\">\r\n-          <TabsList className=\"flex space-x-2\">\r\n-            <TabsTrigger value=\"grupos\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-md px-6\">Grupos</TabsTrigger>\r\n-            <TabsTrigger value=\"plataformas\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-md px-6\">Plataformas</TabsTrigger>\r\n-          </TabsList>\r\n-\r\n-          <div className=\"flex items-center gap-3\">\r\n-            <Input placeholder=\"Filtrar por nome...\" value={busca} onChange={(e) => setBusca(e.target.value)} className=\"max-w-xs\" />\r\n-            <Button className=\"flex gap-2 items-center\" onClick={() => {\r\n-              if (abaAtiva === 'grupos') {\r\n-                setGrupoEditando(null);\r\n-                setModalGrupoAberto(true);\r\n-              } else {\r\n-                setPlataformaEditando(null);\r\n-                setModalPlataformaAberto(true);\r\n-              }\r\n-            }}>\r\n-              <Plus className=\"w-4 h-4\" />\r\n-              {abaAtiva === 'grupos' ? 'Novo Grupo' : 'Nova Plataforma'}\r\n-            </Button>\r\n-          </div>\r\n+      <div className=\"bg-white rounded-xl shadow-sm p-4 flex items-center justify-between w-full mb-4 min-h-[60px]\">\r\n+        <h2 className=\"text-xl font-semibold\">Grupos</h2>\r\n+        <div className=\"flex items-center gap-3\">\r\n+          <Input\r\n+            placeholder=\"Filtrar por nome...\"\r\n+            value={busca}\r\n+            onChange={(e) => setBusca(e.target.value)}\r\n+            className=\"max-w-xs\"\r\n+          />\r\n+          <Button\r\n+            className=\"flex gap-2 items-center\"\r\n+            onClick={() => {\r\n+              setGrupoEditando(null);\r\n+              setModalGrupoAberto(true);\r\n+            }}\r\n+          >\r\n+            <Plus className=\"w-4 h-4\" />\r\n+            Novo Grupo\r\n+          </Button>\r\n         </div>\r\n-\r\n-        <TabsContent value=\"grupos\" forceMount>\r\n-          <Card>\r\n-            <CardContent className=\"p-6\">\r\n-              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n-                {gruposFiltrados.map((grupo) => (\r\n-                  <div key={grupo.id} className=\"relative group\">\r\n-                    <Link href={`/influenciadores/grupos/${grupo.id}`} className=\"block\">\r\n-                      <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n-                        <CardContent className=\"p-6 text-center space-y-2\">\r\n-                          {grupo.imagem ? (\r\n-                            <Image\r\n-                              src={grupo.imagem}\r\n-                              alt={grupo.nome}\r\n-                              width={120}\r\n-                              height={120}\r\n-                              unoptimized\r\n-                              className=\"mx-auto h-32 object-contain\"\r\n-                            />\r\n-                          ) : (\r\n-                            <div className=\"w-32 h-32 mx-auto bg-gray-200 flex items-center justify-center text-gray-500\">\r\n-                              Sem imagem\r\n-                            </div>\r\n-                          )}\r\n-                          <div className=\"text-sm font-medium\">{grupo.nome}</div>\r\n-                        </CardContent>\r\n-                      </Card>\r\n-                    </Link>\r\n-                    <Button\r\n-                      size=\"icon\"\r\n-                      variant=\"ghost\"\r\n-                      className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition bg-white/80 hover:bg-gray-600\"\r\n-                      onClick={() => {\r\n-                        setGrupoEditando(grupo);\r\n-                        setModalGrupoAberto(true);\r\n-                      }}\r\n-                    >\r\n-                      <Pencil className=\"w-4 h-4\" />\r\n-                    </Button>\r\n-                  </div>\r\n-                ))}\r\n+      </div>\r\n+  \r\n+      <Card>\r\n+        <CardContent className=\"p-6\">\r\n+          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n+            {gruposFiltrados.map((grupo) => (\r\n+              <div key={grupo.id} className=\"relative group\">\r\n+                <Link href={`/influenciadores/grupos/${grupo.id}`} className=\"block\">\r\n+                  <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n+                    <CardContent className=\"p-6 text-center space-y-2\">\r\n+                      {grupo.imagem ? (\r\n+                        <Image\r\n+                          src={grupo.imagem}\r\n+                          alt={grupo.nome}\r\n+                          width={120}\r\n+                          height={120}\r\n+                          unoptimized\r\n+                          className=\"mx-auto h-32 object-contain\"\r\n+                        />\r\n+                      ) : (\r\n+                        <div className=\"w-32 h-32 mx-auto bg-gray-200 flex items-center justify-center text-gray-500\">\r\n+                          Sem imagem\r\n+                        </div>\r\n+                      )}\r\n+                      <div className=\"text-sm font-medium\">{grupo.nome}</div>\r\n+                    </CardContent>\r\n+                  </Card>\r\n+                </Link>\r\n+                <Button\r\n+                  size=\"icon\"\r\n+                  variant=\"ghost\"\r\n+                  className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition bg-white/80 hover:bg-gray-600\"\r\n+                  onClick={() => {\r\n+                    setGrupoEditando(grupo);\r\n+                    setModalGrupoAberto(true);\r\n+                  }}\r\n+                >\r\n+                  <Pencil className=\"w-4 h-4\" />\r\n+                </Button>\r\n               </div>\r\n-            </CardContent>\r\n-          </Card>\r\n-        </TabsContent>\r\n-\r\n-        <TabsContent value=\"plataformas\">\r\n-          <Card>\r\n-            <CardContent className=\"p-6\">\r\n-              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n-                {plataformasFiltradas.map((plataforma) => (\r\n-                  <div key={plataforma.id} className=\"relative group\">\r\n-                    <Link href={`/influenciadores/plataformas/${plataforma.id}`} className=\"block\">\r\n-                      <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n-                        <CardContent className=\"p-6 text-center space-y-2\">\r\n-                          {plataforma.imagem ? (\r\n-                            <Image src={plataforma.imagem}\r\n-                             alt={plataforma.nome} \r\n-                             width={300} \r\n-                             height={300}\r\n-                             unoptimized\r\n-                             className=\"mx-auto mb-2 w-64 h-32 object-contain\" />\r\n-                          ) : (\r\n-                            <div className=\"w-64 h-32 mx-auto mb-2 bg-muted flex items-center justify-center text-gray-400\">Sem imagem</div>\r\n-                          )}\r\n-                          <div className=\"text-sm font-medium\">{plataforma.nome}</div>\r\n-                        </CardContent>\r\n-                      </Card>\r\n-                    </Link>\r\n-                    <Button size=\"icon\" variant=\"ghost\" className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition bg-white/80 hover:bg-gray-600\" onClick={() => {\r\n-                      setPlataformaEditando(plataforma);\r\n-                      setModalPlataformaAberto(true);\r\n-                    }}>\r\n-                      <Pencil className=\"w-4 h-4\" />\r\n-                    </Button>\r\n-                  </div>\r\n-                ))}\r\n-              </div>\r\n-            </CardContent>\r\n-          </Card>\r\n-        </TabsContent>\r\n-      </Tabs> */}\r\n-\r\n-      <PlataformaModal\r\n-        open={modalPlataformaAberto}\r\n-        onClose={() => {\r\n-          setModalPlataformaAberto(false);\r\n-          setPlataformaEditando(null);\r\n-        }}\r\n-        onSave={async (dados) => {\r\n-          await fetch('/api/plataformas', {\r\n-            method: 'POST',\r\n-            headers: { 'Content-Type': 'application/json' },\r\n-            body: JSON.stringify(dados),\r\n-          });\r\n-          setModalPlataformaAberto(false);\r\n-          setPlataformaEditando(null);\r\n-          buscarPlataformas();\r\n-        }}\r\n-        plataformaAtual={plataformaEditando}\r\n-      />\r\n-\r\n-      <GrupoModal\r\n-        open={modalGrupoAberto}\r\n-        onClose={() => {\r\n-          setModalGrupoAberto(false);\r\n-          setGrupoEditando(null);\r\n-        }}\r\n-        onSave={async (dados) => {\r\n-          await fetch('/api/grupos', {\r\n-            method: 'POST',\r\n-            headers: { 'Content-Type': 'application/json' },\r\n-            body: JSON.stringify(dados),\r\n-          });\r\n-          await buscarGrupos();\r\n-          await buscarPlataformas();\r\n-          setModalGrupoAberto(false);\r\n-          setGrupoEditando(null);\r\n-        }}\r\n-        grupoAtual={grupoEditando}\r\n-        plataformasDisponiveis={plataformas.filter(p => !p.grupoId || p.grupoId === grupoEditando?.id)}\r\n-      />\r\n-    </div>\r\n-  );\r\n-}\r\n-'use client';\r\n-\r\n-import { useEffect, useState } from 'react';\r\n-import {\r\n-  Tabs,\r\n-  TabsContent,\r\n-  TabsList,\r\n-  TabsTrigger\r\n-} from \"@/components/ui/tabs\";\r\n-import {\r\n-  Card,\r\n-  CardContent\r\n-} from \"@/components/ui/card\";\r\n-import { Input } from \"@/components/ui/input\";\r\n-import { Button } from \"@/components/ui/button\";\r\n-import { Pencil, Plus } from \"lucide-react\";\r\n-import Image from \"next/image\";\r\n-import Link from \"next/link\";\r\n-import PlataformaModal from \"@/components/PlataformaModal\";\r\n-import GrupoModal from \"@/components/GrupoModal\";\r\n-\r\n-interface Plataforma {\r\n-  id: string;\r\n-  nome: string;\r\n-  imagem?: string;\r\n-  cor: string;\r\n-  grupoId: string | null;\r\n-}\r\n-interface Grupo {\r\n-  id: string;\r\n-  nome: string;\r\n-  imagem?: string;\r\n-}\r\n-\r\n-export default function InfluenciadoresPage() {\r\n-  const [plataformas, setPlataformas] = useState<Plataforma[]>([]);\r\n-  const [grupos, setGrupos] = useState<Grupo[]>([]);\r\n-  const [busca, setBusca] = useState('');\r\n-  const [abaAtiva, setAbaAtiva] = useState('grupos');\r\n-  const [modalPlataformaAberto, setModalPlataformaAberto] = useState(false);\r\n-  const [modalGrupoAberto, setModalGrupoAberto] = useState(false);\r\n-  const [plataformaEditando, setPlataformaEditando] = useState<Plataforma | null>(null);\r\n-  const [grupoEditando, setGrupoEditando] = useState<Grupo | null>(null);\r\n-\r\n-  const buscarPlataformas = async () => {\r\n-    const res = await fetch('/api/plataformas');\r\n-    const data = await res.json();\r\n-    setPlataformas(data);\r\n-  };\r\n-\r\n-  const buscarGrupos = async () => {\r\n-    const res = await fetch('/api/grupos');\r\n-    const data = await res.json();\r\n-    setGrupos(data);\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    buscarPlataformas();\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    if (abaAtiva === 'grupos') buscarGrupos();\r\n-  }, [abaAtiva]);\r\n-\r\n-  const gruposFiltrados = grupos.filter((g) =>\r\n-    g.nome.toLowerCase().includes(busca.toLowerCase())\r\n-  );\r\n-  const plataformasFiltradas = plataformas.filter((p) =>\r\n-    p.nome.toLowerCase().includes(busca.toLowerCase())\r\n-  );\r\n-\r\n-  return (\r\n-    <div className=\"p-4 space-y-4\">\r\n-      {/* <Tabs defaultValue=\"grupos\" className=\"w-full\" onValueChange={setAbaAtiva}>\r\n-        <div className=\"relative bg-white rounded-xl shadow-sm p-4 flex items-center justify-between w-full mb-4 min-h-[60px]\">\r\n-          <TabsList className=\"flex space-x-2\">\r\n-            <TabsTrigger value=\"grupos\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-md px-6\">Grupos</TabsTrigger>\r\n-            <TabsTrigger value=\"plataformas\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-md px-6\">Plataformas</TabsTrigger>\r\n-          </TabsList>\r\n-\r\n-          <div className=\"flex items-center gap-3\">\r\n-            <Input placeholder=\"Filtrar por nome...\" value={busca} onChange={(e) => setBusca(e.target.value)} className=\"max-w-xs\" />\r\n-            <Button className=\"flex gap-2 items-center\" onClick={() => {\r\n-              if (abaAtiva === 'grupos') {\r\n-                setGrupoEditando(null);\r\n-                setModalGrupoAberto(true);\r\n-              } else {\r\n-                setPlataformaEditando(null);\r\n-                setModalPlataformaAberto(true);\r\n-              }\r\n-            }}>\r\n-              <Plus className=\"w-4 h-4\" />\r\n-              {abaAtiva === 'grupos' ? 'Novo Grupo' : 'Nova Plataforma'}\r\n-            </Button>\r\n+            ))}\r\n           </div>\r\n-        </div>\r\n-\r\n-        <TabsContent value=\"grupos\" forceMount>\r\n-          <Card>\r\n-            <CardContent className=\"p-6\">\r\n-              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n-                {gruposFiltrados.map((grupo) => (\r\n-                  <div key={grupo.id} className=\"relative group\">\r\n-                    <Link href={`/influenciadores/grupos/${grupo.id}`} className=\"block\">\r\n-                      <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n-                        <CardContent className=\"p-6 text-center space-y-2\">\r\n-                          {grupo.imagem ? (\r\n-                            <Image\r\n-                              src={grupo.imagem}\r\n-                              alt={grupo.nome}\r\n-                              width={120}\r\n-                              height={120}\r\n-                              unoptimized\r\n-                              className=\"mx-auto h-32 object-contain\"\r\n-                            />\r\n-                          ) : (\r\n-                            <div className=\"w-32 h-32 mx-auto bg-gray-200 flex items-center justify-center text-gray-500\">\r\n-                              Sem imagem\r\n-                            </div>\r\n-                          )}\r\n-                          <div className=\"text-sm font-medium\">{grupo.nome}</div>\r\n-                        </CardContent>\r\n-                      </Card>\r\n-                    </Link>\r\n-                    <Button\r\n-                      size=\"icon\"\r\n-                      variant=\"ghost\"\r\n-                      className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition bg-white/80 hover:bg-gray-600\"\r\n-                      onClick={() => {\r\n-                        setGrupoEditando(grupo);\r\n-                        setModalGrupoAberto(true);\r\n-                      }}\r\n-                    >\r\n-                      <Pencil className=\"w-4 h-4\" />\r\n-                    </Button>\r\n-                  </div>\r\n-                ))}\r\n-              </div>\r\n-            </CardContent>\r\n-          </Card>\r\n-        </TabsContent>\r\n-\r\n-        <TabsContent value=\"plataformas\">\r\n-          <Card>\r\n-            <CardContent className=\"p-6\">\r\n-              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n-                {plataformasFiltradas.map((plataforma) => (\r\n-                  <div key={plataforma.id} className=\"relative group\">\r\n-                    <Link href={`/influenciadores/plataformas/${plataforma.id}`} className=\"block\">\r\n-                      <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n-                        <CardContent className=\"p-6 text-center space-y-2\">\r\n-                          {plataforma.imagem ? (\r\n-                            <Image src={plataforma.imagem}\r\n-                             alt={plataforma.nome} \r\n-                             width={300} \r\n-                             height={300}\r\n-                             unoptimized\r\n-                             className=\"mx-auto mb-2 w-64 h-32 object-contain\" />\r\n-                          ) : (\r\n-                            <div className=\"w-64 h-32 mx-auto mb-2 bg-muted flex items-center justify-center text-gray-400\">Sem imagem</div>\r\n-                          )}\r\n-                          <div className=\"text-sm font-medium\">{plataforma.nome}</div>\r\n-                        </CardContent>\r\n-                      </Card>\r\n-                    </Link>\r\n-                    <Button size=\"icon\" variant=\"ghost\" className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition bg-white/80 hover:bg-gray-600\" onClick={() => {\r\n-                      setPlataformaEditando(plataforma);\r\n-                      setModalPlataformaAberto(true);\r\n-                    }}>\r\n-                      <Pencil className=\"w-4 h-4\" />\r\n-                    </Button>\r\n-                  </div>\r\n-                ))}\r\n-              </div>\r\n-            </CardContent>\r\n-          </Card>\r\n-        </TabsContent>\r\n-      </Tabs> */}\r\n-\r\n+        </CardContent>\r\n+      </Card>\r\n+  \r\n+      {/* Modais abaixo continuam funcionando */}\r\n       <PlataformaModal\r\n         open={modalPlataformaAberto}\r\n         onClose={() => {\r\n           setModalPlataformaAberto(false);\r\n@@ -415,9 +154,9 @@\n           buscarPlataformas();\r\n         }}\r\n         plataformaAtual={plataformaEditando}\r\n       />\r\n-\r\n+  \r\n       <GrupoModal\r\n         open={modalGrupoAberto}\r\n         onClose={() => {\r\n           setModalGrupoAberto(false);\r\n@@ -438,5 +177,6 @@\n         plataformasDisponiveis={plataformas.filter(p => !p.grupoId || p.grupoId === grupoEditando?.id)}\r\n       />\r\n     </div>\r\n   );\r\n+  \r\n }\r\n"
                },
                {
                    "date": 1746135671048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,182 +1,63 @@\n 'use client';\r\n \r\n import { useEffect, useState } from 'react';\r\n-import {\r\n-  Tabs,\r\n-  TabsContent,\r\n-  TabsList,\r\n-  TabsTrigger\r\n-} from \"@/components/ui/tabs\";\r\n-import {\r\n-  Card,\r\n-  CardContent\r\n-} from \"@/components/ui/card\";\r\n-import { Input } from \"@/components/ui/input\";\r\n-import { Button } from \"@/components/ui/button\";\r\n-import { Pencil, Plus } from \"lucide-react\";\r\n-import Image from \"next/image\";\r\n-import Link from \"next/link\";\r\n-import PlataformaModal from \"@/components/PlataformaModal\";\r\n-import GrupoModal from \"@/components/GrupoModal\";\r\n+import { useParams } from 'next/navigation';\r\n+import { Card, CardContent } from '@/components/ui/card';\r\n+import Image from 'next/image';\r\n \r\n interface Plataforma {\r\n   id: string;\r\n   nome: string;\r\n   imagem?: string;\r\n-  cor: string;\r\n   grupoId: string | null;\r\n }\r\n-interface Grupo {\r\n-  id: string;\r\n-  nome: string;\r\n-  imagem?: string;\r\n-}\r\n \r\n-export default function InfluenciadoresPage() {\r\n+export default function PlataformasDoGrupoPage() {\r\n+  const { id } = useParams() as { id: string };\r\n   const [plataformas, setPlataformas] = useState<Plataforma[]>([]);\r\n-  const [grupos, setGrupos] = useState<Grupo[]>([]);\r\n-  const [busca, setBusca] = useState('');\r\n-  const [abaAtiva, setAbaAtiva] = useState('grupos');\r\n-  const [modalPlataformaAberto, setModalPlataformaAberto] = useState(false);\r\n-  const [modalGrupoAberto, setModalGrupoAberto] = useState(false);\r\n-  const [plataformaEditando, setPlataformaEditando] = useState<Plataforma | null>(null);\r\n-  const [grupoEditando, setGrupoEditando] = useState<Grupo | null>(null);\r\n \r\n-  const buscarPlataformas = async () => {\r\n-    const res = await fetch('/api/plataformas');\r\n-    const data = await res.json();\r\n-    setPlataformas(data);\r\n-  };\r\n-\r\n-  const buscarGrupos = async () => {\r\n-    const res = await fetch('/api/grupos');\r\n-    const data = await res.json();\r\n-    setGrupos(data);\r\n-  };\r\n-\r\n   useEffect(() => {\r\n-    buscarPlataformas();\r\n-  }, []);\r\n+    const buscar = async () => {\r\n+      const res = await fetch('/api/plataformas');\r\n+      const todas = await res.json();\r\n+      const filtradas = todas.filter((p: Plataforma) => p.grupoId === id);\r\n+      setPlataformas(filtradas);\r\n+    };\r\n \r\n-  useEffect(() => {\r\n-    if (abaAtiva === 'grupos') buscarGrupos();\r\n-  }, [abaAtiva]);\r\n+    if (id) buscar();\r\n+  }, [id]);\r\n \r\n-  const gruposFiltrados = grupos.filter((g) =>\r\n-    g.nome.toLowerCase().includes(busca.toLowerCase())\r\n-  );\r\n-  const plataformasFiltradas = plataformas.filter((p) =>\r\n-    p.nome.toLowerCase().includes(busca.toLowerCase())\r\n-  );\r\n-\r\n   return (\r\n     <div className=\"p-4 space-y-4\">\r\n-      <div className=\"bg-white rounded-xl shadow-sm p-4 flex items-center justify-between w-full mb-4 min-h-[60px]\">\r\n-        <h2 className=\"text-xl font-semibold\">Grupos</h2>\r\n-        <div className=\"flex items-center gap-3\">\r\n-          <Input\r\n-            placeholder=\"Filtrar por nome...\"\r\n-            value={busca}\r\n-            onChange={(e) => setBusca(e.target.value)}\r\n-            className=\"max-w-xs\"\r\n-          />\r\n-          <Button\r\n-            className=\"flex gap-2 items-center\"\r\n-            onClick={() => {\r\n-              setGrupoEditando(null);\r\n-              setModalGrupoAberto(true);\r\n-            }}\r\n-          >\r\n-            <Plus className=\"w-4 h-4\" />\r\n-            Novo Grupo\r\n-          </Button>\r\n+      <h1 className=\"text-xl font-semibold\">Plataformas do grupo {id}</h1>\r\n+\r\n+      {plataformas.length === 0 ? (\r\n+        <p className=\"text-gray-500\">Nenhuma plataforma encontrada para esse grupo.</p>\r\n+      ) : (\r\n+        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n+          {plataformas.map((plataforma) => (\r\n+            <Card key={plataforma.id} className=\"hover:shadow-md transition\">\r\n+              <CardContent className=\"p-4 text-center space-y-2\">\r\n+                {plataforma.imagem ? (\r\n+                  <Image\r\n+                    src={plataforma.imagem}\r\n+                    alt={plataforma.nome}\r\n+                    width={300}\r\n+                    height={150}\r\n+                    unoptimized\r\n+                    className=\"mx-auto h-24 object-contain\"\r\n+                  />\r\n+                ) : (\r\n+                  <div className=\"w-full h-24 bg-gray-200 flex items-center justify-center text-gray-400\">\r\n+                    Sem imagem\r\n+                  </div>\r\n+                )}\r\n+                <p className=\"text-sm font-medium\">{plataforma.nome}</p>\r\n+              </CardContent>\r\n+            </Card>\r\n+          ))}\r\n         </div>\r\n-      </div>\r\n-  \r\n-      <Card>\r\n-        <CardContent className=\"p-6\">\r\n-          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n-            {gruposFiltrados.map((grupo) => (\r\n-              <div key={grupo.id} className=\"relative group\">\r\n-                <Link href={`/influenciadores/grupos/${grupo.id}`} className=\"block\">\r\n-                  <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n-                    <CardContent className=\"p-6 text-center space-y-2\">\r\n-                      {grupo.imagem ? (\r\n-                        <Image\r\n-                          src={grupo.imagem}\r\n-                          alt={grupo.nome}\r\n-                          width={120}\r\n-                          height={120}\r\n-                          unoptimized\r\n-                          className=\"mx-auto h-32 object-contain\"\r\n-                        />\r\n-                      ) : (\r\n-                        <div className=\"w-32 h-32 mx-auto bg-gray-200 flex items-center justify-center text-gray-500\">\r\n-                          Sem imagem\r\n-                        </div>\r\n-                      )}\r\n-                      <div className=\"text-sm font-medium\">{grupo.nome}</div>\r\n-                    </CardContent>\r\n-                  </Card>\r\n-                </Link>\r\n-                <Button\r\n-                  size=\"icon\"\r\n-                  variant=\"ghost\"\r\n-                  className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition bg-white/80 hover:bg-gray-600\"\r\n-                  onClick={() => {\r\n-                    setGrupoEditando(grupo);\r\n-                    setModalGrupoAberto(true);\r\n-                  }}\r\n-                >\r\n-                  <Pencil className=\"w-4 h-4\" />\r\n-                </Button>\r\n-              </div>\r\n-            ))}\r\n-          </div>\r\n-        </CardContent>\r\n-      </Card>\r\n-  \r\n-      {/* Modais abaixo continuam funcionando */}\r\n-      <PlataformaModal\r\n-        open={modalPlataformaAberto}\r\n-        onClose={() => {\r\n-          setModalPlataformaAberto(false);\r\n-          setPlataformaEditando(null);\r\n-        }}\r\n-        onSave={async (dados) => {\r\n-          await fetch('/api/plataformas', {\r\n-            method: 'POST',\r\n-            headers: { 'Content-Type': 'application/json' },\r\n-            body: JSON.stringify(dados),\r\n-          });\r\n-          setModalPlataformaAberto(false);\r\n-          setPlataformaEditando(null);\r\n-          buscarPlataformas();\r\n-        }}\r\n-        plataformaAtual={plataformaEditando}\r\n-      />\r\n-  \r\n-      <GrupoModal\r\n-        open={modalGrupoAberto}\r\n-        onClose={() => {\r\n-          setModalGrupoAberto(false);\r\n-          setGrupoEditando(null);\r\n-        }}\r\n-        onSave={async (dados) => {\r\n-          await fetch('/api/grupos', {\r\n-            method: 'POST',\r\n-            headers: { 'Content-Type': 'application/json' },\r\n-            body: JSON.stringify(dados),\r\n-          });\r\n-          await buscarGrupos();\r\n-          await buscarPlataformas();\r\n-          setModalGrupoAberto(false);\r\n-          setGrupoEditando(null);\r\n-        }}\r\n-        grupoAtual={grupoEditando}\r\n-        plataformasDisponiveis={plataformas.filter(p => !p.grupoId || p.grupoId === grupoEditando?.id)}\r\n-      />\r\n+      )}\r\n     </div>\r\n   );\r\n-  \r\n }\r\n"
                },
                {
                    "date": 1746135736932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,63 +1,182 @@\n 'use client';\r\n \r\n import { useEffect, useState } from 'react';\r\n-import { useParams } from 'next/navigation';\r\n-import { Card, CardContent } from '@/components/ui/card';\r\n-import Image from 'next/image';\r\n+import {\r\n+  Tabs,\r\n+  TabsContent,\r\n+  TabsList,\r\n+  TabsTrigger\r\n+} from \"@/components/ui/tabs\";\r\n+import {\r\n+  Card,\r\n+  CardContent\r\n+} from \"@/components/ui/card\";\r\n+import { Input } from \"@/components/ui/input\";\r\n+import { Button } from \"@/components/ui/button\";\r\n+import { Pencil, Plus } from \"lucide-react\";\r\n+import Image from \"next/image\";\r\n+import Link from \"next/link\";\r\n+import PlataformaModal from \"@/components/PlataformaModal\";\r\n+import GrupoModal from \"@/components/GrupoModal\";\r\n \r\n interface Plataforma {\r\n   id: string;\r\n   nome: string;\r\n   imagem?: string;\r\n+  cor: string;\r\n   grupoId: string | null;\r\n }\r\n+interface Grupo {\r\n+  id: string;\r\n+  nome: string;\r\n+  imagem?: string;\r\n+}\r\n \r\n-export default function PlataformasDoGrupoPage() {\r\n-  const { id } = useParams() as { id: string };\r\n+export default function InfluenciadoresPage() {\r\n   const [plataformas, setPlataformas] = useState<Plataforma[]>([]);\r\n+  const [grupos, setGrupos] = useState<Grupo[]>([]);\r\n+  const [busca, setBusca] = useState('');\r\n+  const [abaAtiva, setAbaAtiva] = useState('grupos');\r\n+  const [modalPlataformaAberto, setModalPlataformaAberto] = useState(false);\r\n+  const [modalGrupoAberto, setModalGrupoAberto] = useState(false);\r\n+  const [plataformaEditando, setPlataformaEditando] = useState<Plataforma | null>(null);\r\n+  const [grupoEditando, setGrupoEditando] = useState<Grupo | null>(null);\r\n \r\n+  const buscarPlataformas = async () => {\r\n+    const res = await fetch('/api/plataformas');\r\n+    const data = await res.json();\r\n+    setPlataformas(data);\r\n+  };\r\n+\r\n+  const buscarGrupos = async () => {\r\n+    const res = await fetch('/api/grupos');\r\n+    const data = await res.json();\r\n+    setGrupos(data);\r\n+  };\r\n+\r\n   useEffect(() => {\r\n-    const buscar = async () => {\r\n-      const res = await fetch('/api/plataformas');\r\n-      const todas = await res.json();\r\n-      const filtradas = todas.filter((p: Plataforma) => p.grupoId === id);\r\n-      setPlataformas(filtradas);\r\n-    };\r\n+    buscarPlataformas();\r\n+  }, []);\r\n \r\n-    if (id) buscar();\r\n-  }, [id]);\r\n+  useEffect(() => {\r\n+    if (abaAtiva === 'grupos') buscarGrupos();\r\n+  }, [abaAtiva]);\r\n \r\n+  const gruposFiltrados = grupos.filter((g) =>\r\n+    g.nome.toLowerCase().includes(busca.toLowerCase())\r\n+  );\r\n+  const plataformasFiltradas = plataformas.filter((p) =>\r\n+    p.nome.toLowerCase().includes(busca.toLowerCase())\r\n+  );\r\n+\r\n   return (\r\n     <div className=\"p-4 space-y-4\">\r\n-      <h1 className=\"text-xl font-semibold\">Plataformas do grupo {id}</h1>\r\n-\r\n-      {plataformas.length === 0 ? (\r\n-        <p className=\"text-gray-500\">Nenhuma plataforma encontrada para esse grupo.</p>\r\n-      ) : (\r\n-        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n-          {plataformas.map((plataforma) => (\r\n-            <Card key={plataforma.id} className=\"hover:shadow-md transition\">\r\n-              <CardContent className=\"p-4 text-center space-y-2\">\r\n-                {plataforma.imagem ? (\r\n-                  <Image\r\n-                    src={plataforma.imagem}\r\n-                    alt={plataforma.nome}\r\n-                    width={300}\r\n-                    height={150}\r\n-                    unoptimized\r\n-                    className=\"mx-auto h-24 object-contain\"\r\n-                  />\r\n-                ) : (\r\n-                  <div className=\"w-full h-24 bg-gray-200 flex items-center justify-center text-gray-400\">\r\n-                    Sem imagem\r\n-                  </div>\r\n-                )}\r\n-                <p className=\"text-sm font-medium\">{plataforma.nome}</p>\r\n-              </CardContent>\r\n-            </Card>\r\n-          ))}\r\n+      <div className=\"bg-white rounded-xl shadow-sm p-4 flex items-center justify-between w-full mb-4 min-h-[60px]\">\r\n+        <h2 className=\"text-xl font-semibold\">Grupos</h2>\r\n+        <div className=\"flex items-center gap-3\">\r\n+          <Input\r\n+            placeholder=\"Filtrar por nome...\"\r\n+            value={busca}\r\n+            onChange={(e) => setBusca(e.target.value)}\r\n+            className=\"max-w-xs\"\r\n+          />\r\n+          <Button\r\n+            className=\"flex gap-2 items-center\"\r\n+            onClick={() => {\r\n+              setGrupoEditando(null);\r\n+              setModalGrupoAberto(true);\r\n+            }}\r\n+          >\r\n+            <Plus className=\"w-4 h-4\" />\r\n+            Novo Grupo\r\n+          </Button>\r\n         </div>\r\n-      )}\r\n+      </div>\r\n+  \r\n+      <Card>\r\n+        <CardContent className=\"p-6\">\r\n+          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n+            {gruposFiltrados.map((grupo) => (\r\n+              <div key={grupo.id} className=\"relative group\">\r\n+                <Link href={`/influenciadores/grupos/${grupo.id}`} className=\"block\">\r\n+                  <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n+                    <CardContent className=\"p-6 text-center space-y-2\">\r\n+                      {grupo.imagem ? (\r\n+                        <Image\r\n+                          src={grupo.imagem}\r\n+                          alt={grupo.nome}\r\n+                          width={120}\r\n+                          height={120}\r\n+                          unoptimized\r\n+                          className=\"mx-auto h-32 object-contain\"\r\n+                        />\r\n+                      ) : (\r\n+                        <div className=\"w-32 h-32 mx-auto bg-gray-200 flex items-center justify-center text-gray-500\">\r\n+                          Sem imagem\r\n+                        </div>\r\n+                      )}\r\n+                      <div className=\"text-sm font-medium\">{grupo.nome}</div>\r\n+                    </CardContent>\r\n+                  </Card>\r\n+                </Link>\r\n+                <Button\r\n+                  size=\"icon\"\r\n+                  variant=\"ghost\"\r\n+                  className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition bg-white/80 hover:bg-gray-600\"\r\n+                  onClick={() => {\r\n+                    setGrupoEditando(grupo);\r\n+                    setModalGrupoAberto(true);\r\n+                  }}\r\n+                >\r\n+                  <Pencil className=\"w-4 h-4\" />\r\n+                </Button>\r\n+              </div>\r\n+            ))}\r\n+          </div>\r\n+        </CardContent>\r\n+      </Card>\r\n+  \r\n+      {/* Modais abaixo continuam funcionando */}\r\n+      <PlataformaModal\r\n+        open={modalPlataformaAberto}\r\n+        onClose={() => {\r\n+          setModalPlataformaAberto(false);\r\n+          setPlataformaEditando(null);\r\n+        }}\r\n+        onSave={async (dados) => {\r\n+          await fetch('/api/plataformas', {\r\n+            method: 'POST',\r\n+            headers: { 'Content-Type': 'application/json' },\r\n+            body: JSON.stringify(dados),\r\n+          });\r\n+          setModalPlataformaAberto(false);\r\n+          setPlataformaEditando(null);\r\n+          buscarPlataformas();\r\n+        }}\r\n+        plataformaAtual={plataformaEditando}\r\n+      />\r\n+  \r\n+      <GrupoModal\r\n+        open={modalGrupoAberto}\r\n+        onClose={() => {\r\n+          setModalGrupoAberto(false);\r\n+          setGrupoEditando(null);\r\n+        }}\r\n+        onSave={async (dados) => {\r\n+          await fetch('/api/grupos', {\r\n+            method: 'POST',\r\n+            headers: { 'Content-Type': 'application/json' },\r\n+            body: JSON.stringify(dados),\r\n+          });\r\n+          await buscarGrupos();\r\n+          await buscarPlataformas();\r\n+          setModalGrupoAberto(false);\r\n+          setGrupoEditando(null);\r\n+        }}\r\n+        grupoAtual={grupoEditando}\r\n+        plataformasDisponiveis={plataformas.filter(p => !p.grupoId || p.grupoId === grupoEditando?.id)}\r\n+      />\r\n     </div>\r\n   );\r\n+  \r\n }\r\n"
                },
                {
                    "date": 1746135847873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,182 +1,61 @@\n 'use client';\r\n \r\n import { useEffect, useState } from 'react';\r\n-import {\r\n-  Tabs,\r\n-  TabsContent,\r\n-  TabsList,\r\n-  TabsTrigger\r\n-} from \"@/components/ui/tabs\";\r\n-import {\r\n-  Card,\r\n-  CardContent\r\n-} from \"@/components/ui/card\";\r\n-import { Input } from \"@/components/ui/input\";\r\n-import { Button } from \"@/components/ui/button\";\r\n-import { Pencil, Plus } from \"lucide-react\";\r\n-import Image from \"next/image\";\r\n-import Link from \"next/link\";\r\n-import PlataformaModal from \"@/components/PlataformaModal\";\r\n-import GrupoModal from \"@/components/GrupoModal\";\r\n+import { useParams } from 'next/navigation';\r\n+import { Card, CardContent } from '@/components/ui/card';\r\n+import Image from 'next/image';\r\n \r\n interface Plataforma {\r\n   id: string;\r\n   nome: string;\r\n   imagem?: string;\r\n-  cor: string;\r\n   grupoId: string | null;\r\n }\r\n-interface Grupo {\r\n-  id: string;\r\n-  nome: string;\r\n-  imagem?: string;\r\n-}\r\n \r\n-export default function InfluenciadoresPage() {\r\n+export default function PlataformasDoGrupoPage() {\r\n+  const { id } = useParams() as { id: string };\r\n   const [plataformas, setPlataformas] = useState<Plataforma[]>([]);\r\n-  const [grupos, setGrupos] = useState<Grupo[]>([]);\r\n-  const [busca, setBusca] = useState('');\r\n-  const [abaAtiva, setAbaAtiva] = useState('grupos');\r\n-  const [modalPlataformaAberto, setModalPlataformaAberto] = useState(false);\r\n-  const [modalGrupoAberto, setModalGrupoAberto] = useState(false);\r\n-  const [plataformaEditando, setPlataformaEditando] = useState<Plataforma | null>(null);\r\n-  const [grupoEditando, setGrupoEditando] = useState<Grupo | null>(null);\r\n \r\n-  const buscarPlataformas = async () => {\r\n-    const res = await fetch('/api/plataformas');\r\n-    const data = await res.json();\r\n-    setPlataformas(data);\r\n-  };\r\n-\r\n-  const buscarGrupos = async () => {\r\n-    const res = await fetch('/api/grupos');\r\n-    const data = await res.json();\r\n-    setGrupos(data);\r\n-  };\r\n-\r\n   useEffect(() => {\r\n-    buscarPlataformas();\r\n-  }, []);\r\n+    const carregarPlataformas = async () => {\r\n+      const res = await fetch('/api/plataformas');\r\n+      const todas = await res.json();\r\n+      const doGrupo = todas.filter((p: Plataforma) => p.grupoId === id);\r\n+      setPlataformas(doGrupo);\r\n+    };\r\n \r\n-  useEffect(() => {\r\n-    if (abaAtiva === 'grupos') buscarGrupos();\r\n-  }, [abaAtiva]);\r\n+    if (id) carregarPlataformas();\r\n+  }, [id]);\r\n \r\n-  const gruposFiltrados = grupos.filter((g) =>\r\n-    g.nome.toLowerCase().includes(busca.toLowerCase())\r\n-  );\r\n-  const plataformasFiltradas = plataformas.filter((p) =>\r\n-    p.nome.toLowerCase().includes(busca.toLowerCase())\r\n-  );\r\n-\r\n   return (\r\n     <div className=\"p-4 space-y-4\">\r\n-      <div className=\"bg-white rounded-xl shadow-sm p-4 flex items-center justify-between w-full mb-4 min-h-[60px]\">\r\n-        <h2 className=\"text-xl font-semibold\">Grupos</h2>\r\n-        <div className=\"flex items-center gap-3\">\r\n-          <Input\r\n-            placeholder=\"Filtrar por nome...\"\r\n-            value={busca}\r\n-            onChange={(e) => setBusca(e.target.value)}\r\n-            className=\"max-w-xs\"\r\n-          />\r\n-          <Button\r\n-            className=\"flex gap-2 items-center\"\r\n-            onClick={() => {\r\n-              setGrupoEditando(null);\r\n-              setModalGrupoAberto(true);\r\n-            }}\r\n-          >\r\n-            <Plus className=\"w-4 h-4\" />\r\n-            Novo Grupo\r\n-          </Button>\r\n+      <h1 className=\"text-xl font-bold\">Plataformas do Grupo: {id}</h1>\r\n+\r\n+      {plataformas.length === 0 ? (\r\n+        <p className=\"text-gray-500\">Nenhuma plataforma encontrada para esse grupo.</p>\r\n+      ) : (\r\n+        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6\">\r\n+          {plataformas.map((p) => (\r\n+            <Card key={p.id} className=\"hover:shadow-lg\">\r\n+              <CardContent className=\"p-4 text-center space-y-2\">\r\n+                {p.imagem ? (\r\n+                  <Image\r\n+                    src={p.imagem}\r\n+                    alt={p.nome}\r\n+                    width={120}\r\n+                    height={80}\r\n+                    unoptimized\r\n+                    className=\"mx-auto object-contain h-20\"\r\n+                  />\r\n+                ) : (\r\n+                  <div className=\"h-20 flex items-center justify-center bg-gray-200 text-gray-500\">Sem imagem</div>\r\n+                )}\r\n+                <p className=\"font-medium\">{p.nome}</p>\r\n+              </CardContent>\r\n+            </Card>\r\n+          ))}\r\n         </div>\r\n-      </div>\r\n-  \r\n-      <Card>\r\n-        <CardContent className=\"p-6\">\r\n-          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n-            {gruposFiltrados.map((grupo) => (\r\n-              <div key={grupo.id} className=\"relative group\">\r\n-                <Link href={`/influenciadores/grupos/${grupo.id}`} className=\"block\">\r\n-                  <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n-                    <CardContent className=\"p-6 text-center space-y-2\">\r\n-                      {grupo.imagem ? (\r\n-                        <Image\r\n-                          src={grupo.imagem}\r\n-                          alt={grupo.nome}\r\n-                          width={120}\r\n-                          height={120}\r\n-                          unoptimized\r\n-                          className=\"mx-auto h-32 object-contain\"\r\n-                        />\r\n-                      ) : (\r\n-                        <div className=\"w-32 h-32 mx-auto bg-gray-200 flex items-center justify-center text-gray-500\">\r\n-                          Sem imagem\r\n-                        </div>\r\n-                      )}\r\n-                      <div className=\"text-sm font-medium\">{grupo.nome}</div>\r\n-                    </CardContent>\r\n-                  </Card>\r\n-                </Link>\r\n-                <Button\r\n-                  size=\"icon\"\r\n-                  variant=\"ghost\"\r\n-                  className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition bg-white/80 hover:bg-gray-600\"\r\n-                  onClick={() => {\r\n-                    setGrupoEditando(grupo);\r\n-                    setModalGrupoAberto(true);\r\n-                  }}\r\n-                >\r\n-                  <Pencil className=\"w-4 h-4\" />\r\n-                </Button>\r\n-              </div>\r\n-            ))}\r\n-          </div>\r\n-        </CardContent>\r\n-      </Card>\r\n-  \r\n-      {/* Modais abaixo continuam funcionando */}\r\n-      <PlataformaModal\r\n-        open={modalPlataformaAberto}\r\n-        onClose={() => {\r\n-          setModalPlataformaAberto(false);\r\n-          setPlataformaEditando(null);\r\n-        }}\r\n-        onSave={async (dados) => {\r\n-          await fetch('/api/plataformas', {\r\n-            method: 'POST',\r\n-            headers: { 'Content-Type': 'application/json' },\r\n-            body: JSON.stringify(dados),\r\n-          });\r\n-          setModalPlataformaAberto(false);\r\n-          setPlataformaEditando(null);\r\n-          buscarPlataformas();\r\n-        }}\r\n-        plataformaAtual={plataformaEditando}\r\n-      />\r\n-  \r\n-      <GrupoModal\r\n-        open={modalGrupoAberto}\r\n-        onClose={() => {\r\n-          setModalGrupoAberto(false);\r\n-          setGrupoEditando(null);\r\n-        }}\r\n-        onSave={async (dados) => {\r\n-          await fetch('/api/grupos', {\r\n-            method: 'POST',\r\n-            headers: { 'Content-Type': 'application/json' },\r\n-            body: JSON.stringify(dados),\r\n-          });\r\n-          await buscarGrupos();\r\n-          await buscarPlataformas();\r\n-          setModalGrupoAberto(false);\r\n-          setGrupoEditando(null);\r\n-        }}\r\n-        grupoAtual={grupoEditando}\r\n-        plataformasDisponiveis={plataformas.filter(p => !p.grupoId || p.grupoId === grupoEditando?.id)}\r\n-      />\r\n+      )}\r\n     </div>\r\n   );\r\n-  \r\n }\r\n"
                },
                {
                    "date": 1746135940251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,61 +1,42 @@\n 'use client';\r\n \r\n import { useEffect, useState } from 'react';\r\n-import { useParams } from 'next/navigation';\r\n-import { Card, CardContent } from '@/components/ui/card';\r\n-import Image from 'next/image';\r\n+import Link from 'next/link';\r\n \r\n-interface Plataforma {\r\n+interface Grupo {\r\n   id: string;\r\n   nome: string;\r\n-  imagem?: string;\r\n-  grupoId: string | null;\r\n }\r\n \r\n-export default function PlataformasDoGrupoPage() {\r\n-  const { id } = useParams() as { id: string };\r\n-  const [plataformas, setPlataformas] = useState<Plataforma[]>([]);\r\n+export default function InfluenciadoresPage() {\r\n+  const [grupos, setGrupos] = useState<Grupo[]>([]);\r\n \r\n   useEffect(() => {\r\n-    const carregarPlataformas = async () => {\r\n-      const res = await fetch('/api/plataformas');\r\n-      const todas = await res.json();\r\n-      const doGrupo = todas.filter((p: Plataforma) => p.grupoId === id);\r\n-      setPlataformas(doGrupo);\r\n+    const buscarGrupos = async () => {\r\n+      const res = await fetch('/api/grupos');\r\n+      const data = await res.json();\r\n+      setGrupos(data);\r\n     };\r\n \r\n-    if (id) carregarPlataformas();\r\n-  }, [id]);\r\n+    buscarGrupos();\r\n+  }, []);\r\n \r\n   return (\r\n-    <div className=\"p-4 space-y-4\">\r\n-      <h1 className=\"text-xl font-bold\">Plataformas do Grupo: {id}</h1>\r\n+    <div className=\"p-6 space-y-4\">\r\n+      <h1 className=\"text-2xl font-bold\">Grupos de Influenciadores</h1>\r\n \r\n-      {plataformas.length === 0 ? (\r\n-        <p className=\"text-gray-500\">Nenhuma plataforma encontrada para esse grupo.</p>\r\n-      ) : (\r\n-        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6\">\r\n-          {plataformas.map((p) => (\r\n-            <Card key={p.id} className=\"hover:shadow-lg\">\r\n-              <CardContent className=\"p-4 text-center space-y-2\">\r\n-                {p.imagem ? (\r\n-                  <Image\r\n-                    src={p.imagem}\r\n-                    alt={p.nome}\r\n-                    width={120}\r\n-                    height={80}\r\n-                    unoptimized\r\n-                    className=\"mx-auto object-contain h-20\"\r\n-                  />\r\n-                ) : (\r\n-                  <div className=\"h-20 flex items-center justify-center bg-gray-200 text-gray-500\">Sem imagem</div>\r\n-                )}\r\n-                <p className=\"font-medium\">{p.nome}</p>\r\n-              </CardContent>\r\n-            </Card>\r\n-          ))}\r\n-        </div>\r\n-      )}\r\n+      <ul className=\"space-y-2\">\r\n+        {grupos.map((grupo) => (\r\n+          <li key={grupo.id}>\r\n+            <Link\r\n+              href={`/influenciadores/grupos/${grupo.id}`}\r\n+              className=\"text-blue-600 hover:underline\"\r\n+            >\r\n+              {grupo.nome}\r\n+            </Link>\r\n+          </li>\r\n+        ))}\r\n+      </ul>\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1746136819741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,14 +9,32 @@\n }\r\n \r\n export default function InfluenciadoresPage() {\r\n   const [grupos, setGrupos] = useState<Grupo[]>([]);\r\n+  const [erro, setErro] = useState<string | null>(null);\r\n \r\n   useEffect(() => {\r\n     const buscarGrupos = async () => {\r\n-      const res = await fetch('/api/grupos');\r\n-      const data = await res.json();\r\n-      setGrupos(data);\r\n+      try {\r\n+        console.log('[CLIENT] Buscando grupos em /api/grupos');\r\n+\r\n+        const res = await fetch('/api/grupos');\r\n+        console.log('[CLIENT] Status da resposta:', res.status);\r\n+\r\n+        if (!res.ok) {\r\n+          const erroTexto = await res.text();\r\n+          console.error('[CLIENT] Erro ao buscar grupos:', erroTexto);\r\n+          setErro(`Erro ${res.status}: ${erroTexto}`);\r\n+          return;\r\n+        }\r\n+\r\n+        const data = await res.json();\r\n+        console.log('[CLIENT] Grupos recebidos:', data);\r\n+        setGrupos(data);\r\n+      } catch (err: any) {\r\n+        console.error('[CLIENT] Erro de rede ou JSON:', err.message);\r\n+        setErro(err.message || 'Erro desconhecido');\r\n+      }\r\n     };\r\n \r\n     buscarGrupos();\r\n   }, []);\r\n@@ -24,8 +42,12 @@\n   return (\r\n     <div className=\"p-6 space-y-4\">\r\n       <h1 className=\"text-2xl font-bold\">Grupos de Influenciadores</h1>\r\n \r\n+      {erro && (\r\n+        <p className=\"text-red-500 font-semibold\">Erro ao carregar: {erro}</p>\r\n+      )}\r\n+\r\n       <ul className=\"space-y-2\">\r\n         {grupos.map((grupo) => (\r\n           <li key={grupo.id}>\r\n             <Link\r\n"
                },
                {
                    "date": 1746137073520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,64 +1,221 @@\n 'use client';\r\n \r\n import { useEffect, useState } from 'react';\r\n-import Link from 'next/link';\r\n+import {\r\n+  Tabs,\r\n+  TabsContent,\r\n+  TabsList,\r\n+  TabsTrigger\r\n+} from \"@/components/ui/tabs\";\r\n+import {\r\n+  Card,\r\n+  CardContent\r\n+} from \"@/components/ui/card\";\r\n+import { Input } from \"@/components/ui/input\";\r\n+import { Button } from \"@/components/ui/button\";\r\n+import { Pencil, Plus } from \"lucide-react\";\r\n+import Image from \"next/image\";\r\n+import Link from \"next/link\";\r\n+import PlataformaModal from \"@/components/PlataformaModal\";\r\n+import GrupoModal from \"@/components/GrupoModal\";\r\n \r\n+interface Plataforma {\r\n+  id: string;\r\n+  nome: string;\r\n+  imagem?: string;\r\n+  cor: string;\r\n+  grupoId: string | null;\r\n+}\r\n interface Grupo {\r\n   id: string;\r\n   nome: string;\r\n+  imagem?: string;\r\n }\r\n \r\n export default function InfluenciadoresPage() {\r\n+  const [plataformas, setPlataformas] = useState<Plataforma[]>([]);\r\n   const [grupos, setGrupos] = useState<Grupo[]>([]);\r\n-  const [erro, setErro] = useState<string | null>(null);\r\n+  const [busca, setBusca] = useState('');\r\n+  const [abaAtiva, setAbaAtiva] = useState('grupos');\r\n+  const [modalPlataformaAberto, setModalPlataformaAberto] = useState(false);\r\n+  const [modalGrupoAberto, setModalGrupoAberto] = useState(false);\r\n+  const [plataformaEditando, setPlataformaEditando] = useState<Plataforma | null>(null);\r\n+  const [grupoEditando, setGrupoEditando] = useState<Grupo | null>(null);\r\n \r\n-  useEffect(() => {\r\n-    const buscarGrupos = async () => {\r\n-      try {\r\n-        console.log('[CLIENT] Buscando grupos em /api/grupos');\r\n+  const buscarPlataformas = async () => {\r\n+    const res = await fetch('/api/plataformas');\r\n+    const data = await res.json();\r\n+    setPlataformas(data);\r\n+  };\r\n \r\n-        const res = await fetch('/api/grupos');\r\n-        console.log('[CLIENT] Status da resposta:', res.status);\r\n+  const buscarGrupos = async () => {\r\n+    const res = await fetch('/api/grupos');\r\n+    const data = await res.json();\r\n+    setGrupos(data);\r\n+  };\r\n \r\n-        if (!res.ok) {\r\n-          const erroTexto = await res.text();\r\n-          console.error('[CLIENT] Erro ao buscar grupos:', erroTexto);\r\n-          setErro(`Erro ${res.status}: ${erroTexto}`);\r\n-          return;\r\n-        }\r\n+  useEffect(() => {\r\n+    buscarPlataformas();\r\n+  }, []);\r\n \r\n-        const data = await res.json();\r\n-        console.log('[CLIENT] Grupos recebidos:', data);\r\n-        setGrupos(data);\r\n-      } catch (err: any) {\r\n-        console.error('[CLIENT] Erro de rede ou JSON:', err.message);\r\n-        setErro(err.message || 'Erro desconhecido');\r\n-      }\r\n-    };\r\n+  useEffect(() => {\r\n+    if (abaAtiva === 'grupos') buscarGrupos();\r\n+  }, [abaAtiva]);\r\n \r\n-    buscarGrupos();\r\n-  }, []);\r\n+  const gruposFiltrados = grupos.filter((g) =>\r\n+    g.nome.toLowerCase().includes(busca.toLowerCase())\r\n+  );\r\n+  const plataformasFiltradas = plataformas.filter((p) =>\r\n+    p.nome.toLowerCase().includes(busca.toLowerCase())\r\n+  );\r\n \r\n   return (\r\n-    <div className=\"p-6 space-y-4\">\r\n-      <h1 className=\"text-2xl font-bold\">Grupos de Influenciadores</h1>\r\n+    <div className=\"p-4 space-y-4\">\r\n+      <Tabs defaultValue=\"grupos\" className=\"w-full\" onValueChange={setAbaAtiva}>\r\n+        <div className=\"relative bg-white rounded-xl shadow-sm p-4 flex items-center justify-between w-full mb-4 min-h-[60px]\">\r\n+          <TabsList className=\"flex space-x-2\">\r\n+            <TabsTrigger value=\"grupos\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-md px-6\">Grupos</TabsTrigger>\r\n+            <TabsTrigger value=\"plataformas\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-md px-6\">Plataformas</TabsTrigger>\r\n+          </TabsList>\r\n \r\n-      {erro && (\r\n-        <p className=\"text-red-500 font-semibold\">Erro ao carregar: {erro}</p>\r\n-      )}\r\n+          <div className=\"flex items-center gap-3\">\r\n+            <Input placeholder=\"Filtrar por nome...\" value={busca} onChange={(e) => setBusca(e.target.value)} className=\"max-w-xs\" />\r\n+            <Button className=\"flex gap-2 items-center\" onClick={() => {\r\n+              if (abaAtiva === 'grupos') {\r\n+                setGrupoEditando(null);\r\n+                setModalGrupoAberto(true);\r\n+              } else {\r\n+                setPlataformaEditando(null);\r\n+                setModalPlataformaAberto(true);\r\n+              }\r\n+            }}>\r\n+              <Plus className=\"w-4 h-4\" />\r\n+              {abaAtiva === 'grupos' ? 'Novo Grupo' : 'Nova Plataforma'}\r\n+            </Button>\r\n+          </div>\r\n+        </div>\r\n \r\n-      <ul className=\"space-y-2\">\r\n-        {grupos.map((grupo) => (\r\n-          <li key={grupo.id}>\r\n-            <Link\r\n-              href={`/influenciadores/grupos/${grupo.id}`}\r\n-              className=\"text-blue-600 hover:underline\"\r\n-            >\r\n-              {grupo.nome}\r\n-            </Link>\r\n-          </li>\r\n-        ))}\r\n-      </ul>\r\n+        <TabsContent value=\"grupos\" forceMount>\r\n+          <Card>\r\n+            <CardContent className=\"p-6\">\r\n+              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n+                {gruposFiltrados.map((grupo) => (\r\n+                  <div key={grupo.id} className=\"relative group\">\r\n+                    <Link href={`/influenciadores/grupos/${grupo.id}`} className=\"block\">\r\n+                      <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n+                        <CardContent className=\"p-6 text-center space-y-2\">\r\n+                          {grupo.imagem ? (\r\n+                            <Image\r\n+                              src={grupo.imagem}\r\n+                              alt={grupo.nome}\r\n+                              width={120}\r\n+                              height={120}\r\n+                              unoptimized\r\n+                              className=\"mx-auto h-32 object-contain\"\r\n+                            />\r\n+                          ) : (\r\n+                            <div className=\"w-32 h-32 mx-auto bg-gray-200 flex items-center justify-center text-gray-500\">\r\n+                              Sem imagem\r\n+                            </div>\r\n+                          )}\r\n+                          <div className=\"text-sm font-medium\">{grupo.nome}</div>\r\n+                        </CardContent>\r\n+                      </Card>\r\n+                    </Link>\r\n+                    <Button\r\n+                      size=\"icon\"\r\n+                      variant=\"ghost\"\r\n+                      className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition bg-white/80 hover:bg-gray-600\"\r\n+                      onClick={() => {\r\n+                        setGrupoEditando(grupo);\r\n+                        setModalGrupoAberto(true);\r\n+                      }}\r\n+                    >\r\n+                      <Pencil className=\"w-4 h-4\" />\r\n+                    </Button>\r\n+                  </div>\r\n+                ))}\r\n+              </div>\r\n+            </CardContent>\r\n+          </Card>\r\n+        </TabsContent>\r\n+\r\n+        <TabsContent value=\"plataformas\">\r\n+          <Card>\r\n+            <CardContent className=\"p-6\">\r\n+              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n+                {plataformasFiltradas.map((plataforma) => (\r\n+                  <div key={plataforma.id} className=\"relative group\">\r\n+                    <Link href={`/influenciadores/plataformas/${plataforma.id}`} className=\"block\">\r\n+                      <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n+                        <CardContent className=\"p-6 text-center space-y-2\">\r\n+                          {plataforma.imagem ? (\r\n+                            <Image src={plataforma.imagem}\r\n+                             alt={plataforma.nome} \r\n+                             width={300} \r\n+                             height={300}\r\n+                             unoptimized\r\n+                             className=\"mx-auto mb-2 w-64 h-32 object-contain\" />\r\n+                          ) : (\r\n+                            <div className=\"w-64 h-32 mx-auto mb-2 bg-muted flex items-center justify-center text-gray-400\">Sem imagem</div>\r\n+                          )}\r\n+                          <div className=\"text-sm font-medium\">{plataforma.nome}</div>\r\n+                        </CardContent>\r\n+                      </Card>\r\n+                    </Link>\r\n+                    <Button size=\"icon\" variant=\"ghost\" className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition bg-white/80 hover:bg-gray-600\" onClick={() => {\r\n+                      setPlataformaEditando(plataforma);\r\n+                      setModalPlataformaAberto(true);\r\n+                    }}>\r\n+                      <Pencil className=\"w-4 h-4\" />\r\n+                    </Button>\r\n+                  </div>\r\n+                ))}\r\n+              </div>\r\n+            </CardContent>\r\n+          </Card>\r\n+        </TabsContent>\r\n+      </Tabs>\r\n+\r\n+      <PlataformaModal\r\n+        open={modalPlataformaAberto}\r\n+        onClose={() => {\r\n+          setModalPlataformaAberto(false);\r\n+          setPlataformaEditando(null);\r\n+        }}\r\n+        onSave={async (dados) => {\r\n+          await fetch('/api/plataformas', {\r\n+            method: 'POST',\r\n+            headers: { 'Content-Type': 'application/json' },\r\n+            body: JSON.stringify(dados),\r\n+          });\r\n+          setModalPlataformaAberto(false);\r\n+          setPlataformaEditando(null);\r\n+          buscarPlataformas();\r\n+        }}\r\n+        plataformaAtual={plataformaEditando}\r\n+      />\r\n+\r\n+      <GrupoModal\r\n+        open={modalGrupoAberto}\r\n+        onClose={() => {\r\n+          setModalGrupoAberto(false);\r\n+          setGrupoEditando(null);\r\n+        }}\r\n+        onSave={async (dados) => {\r\n+          await fetch('/api/grupos', {\r\n+            method: 'POST',\r\n+            headers: { 'Content-Type': 'application/json' },\r\n+            body: JSON.stringify(dados),\r\n+          });\r\n+          await buscarGrupos();\r\n+          await buscarPlataformas();\r\n+          setModalGrupoAberto(false);\r\n+          setGrupoEditando(null);\r\n+        }}\r\n+        grupoAtual={grupoEditando}\r\n+        plataformasDisponiveis={plataformas.filter(p => !p.grupoId || p.grupoId === grupoEditando?.id)}\r\n+      />\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1746137879825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,11 @@\n import Image from \"next/image\";\r\n import Link from \"next/link\";\r\n import PlataformaModal from \"@/components/PlataformaModal\";\r\n import GrupoModal from \"@/components/GrupoModal\";\r\n+import { useLocale } from 'next-intl';\r\n \r\n+\r\n interface Plataforma {\r\n   id: string;\r\n   nome: string;\r\n   imagem?: string;\r\n@@ -100,9 +102,9 @@\n             <CardContent className=\"p-6\">\r\n               <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n                 {gruposFiltrados.map((grupo) => (\r\n                   <div key={grupo.id} className=\"relative group\">\r\n-                    <Link href={`/influenciadores/grupos/${grupo.id}`} className=\"block\">\r\n+                    <Link href={`/${locale}/influenciadores/grupos/${grupo.id}`} className=\"block\">\r\n                       <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n                         <CardContent className=\"p-6 text-center space-y-2\">\r\n                           {grupo.imagem ? (\r\n                             <Image\r\n"
                },
                {
                    "date": 1746137905343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,8 +42,9 @@\n   const [modalPlataformaAberto, setModalPlataformaAberto] = useState(false);\r\n   const [modalGrupoAberto, setModalGrupoAberto] = useState(false);\r\n   const [plataformaEditando, setPlataformaEditando] = useState<Plataforma | null>(null);\r\n   const [grupoEditando, setGrupoEditando] = useState<Grupo | null>(null);\r\n+  const locale = useLocale(); // ⬅️ Pegue o locale atual\r\n \r\n   const buscarPlataformas = async () => {\r\n     const res = await fetch('/api/plataformas');\r\n     const data = await res.json();\r\n@@ -147,9 +148,9 @@\n             <CardContent className=\"p-6\">\r\n               <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n                 {plataformasFiltradas.map((plataforma) => (\r\n                   <div key={plataforma.id} className=\"relative group\">\r\n-                    <Link href={`/influenciadores/plataformas/${plataforma.id}`} className=\"block\">\r\n+                    <Link href={`/${locale}/influenciadores/plataformas/${plataforma.id}`} className=\"block\">\r\n                       <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n                         <CardContent className=\"p-6 text-center space-y-2\">\r\n                           {plataforma.imagem ? (\r\n                             <Image src={plataforma.imagem}\r\n"
                },
                {
                    "date": 1746137987919,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,11 +17,9 @@\n import Image from \"next/image\";\r\n import Link from \"next/link\";\r\n import PlataformaModal from \"@/components/PlataformaModal\";\r\n import GrupoModal from \"@/components/GrupoModal\";\r\n-import { useLocale } from 'next-intl';\r\n \r\n-\r\n interface Plataforma {\r\n   id: string;\r\n   nome: string;\r\n   imagem?: string;\r\n@@ -42,9 +40,8 @@\n   const [modalPlataformaAberto, setModalPlataformaAberto] = useState(false);\r\n   const [modalGrupoAberto, setModalGrupoAberto] = useState(false);\r\n   const [plataformaEditando, setPlataformaEditando] = useState<Plataforma | null>(null);\r\n   const [grupoEditando, setGrupoEditando] = useState<Grupo | null>(null);\r\n-  const locale = useLocale(); // ⬅️ Pegue o locale atual\r\n \r\n   const buscarPlataformas = async () => {\r\n     const res = await fetch('/api/plataformas');\r\n     const data = await res.json();\r\n@@ -97,24 +94,23 @@\n             </Button>\r\n           </div>\r\n         </div>\r\n \r\n-        <TabsContent value=\"grupos\" forceMount>\r\n+        <TabsContent value=\"grupos\">\r\n           <Card>\r\n             <CardContent className=\"p-6\">\r\n               <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n                 {gruposFiltrados.map((grupo) => (\r\n                   <div key={grupo.id} className=\"relative group\">\r\n-                    <Link href={`/${locale}/influenciadores/grupos/${grupo.id}`} className=\"block\">\r\n+                    <Link href={`/influenciadores/grupos/${grupo.id}`} className=\"block\">\r\n                       <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n                         <CardContent className=\"p-6 text-center space-y-2\">\r\n                           {grupo.imagem ? (\r\n                             <Image\r\n                               src={grupo.imagem}\r\n                               alt={grupo.nome}\r\n                               width={120}\r\n                               height={120}\r\n-                              unoptimized\r\n                               className=\"mx-auto h-32 object-contain\"\r\n                             />\r\n                           ) : (\r\n                             <div className=\"w-32 h-32 mx-auto bg-gray-200 flex items-center justify-center text-gray-500\">\r\n@@ -148,18 +144,13 @@\n             <CardContent className=\"p-6\">\r\n               <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n                 {plataformasFiltradas.map((plataforma) => (\r\n                   <div key={plataforma.id} className=\"relative group\">\r\n-                    <Link href={`/${locale}/influenciadores/plataformas/${plataforma.id}`} className=\"block\">\r\n+                    <Link href={`/influenciadores/plataformas/${plataforma.id}`} className=\"block\">\r\n                       <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n                         <CardContent className=\"p-6 text-center space-y-2\">\r\n                           {plataforma.imagem ? (\r\n-                            <Image src={plataforma.imagem}\r\n-                             alt={plataforma.nome} \r\n-                             width={300} \r\n-                             height={300}\r\n-                             unoptimized\r\n-                             className=\"mx-auto mb-2 w-64 h-32 object-contain\" />\r\n+                            <Image src={plataforma.imagem} alt={plataforma.nome} width={300} height={300} className=\"mx-auto mb-2 w-64 h-32 object-contain\" />\r\n                           ) : (\r\n                             <div className=\"w-64 h-32 mx-auto mb-2 bg-muted flex items-center justify-center text-gray-400\">Sem imagem</div>\r\n                           )}\r\n                           <div className=\"text-sm font-medium\">{plataforma.nome}</div>\r\n"
                },
                {
                    "date": 1746138055250,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n import Image from \"next/image\";\r\n import Link from \"next/link\";\r\n import PlataformaModal from \"@/components/PlataformaModal\";\r\n import GrupoModal from \"@/components/GrupoModal\";\r\n+import { useLocale } from 'next-intl'; \r\n \r\n interface Plataforma {\r\n   id: string;\r\n   nome: string;\r\n@@ -40,8 +41,9 @@\n   const [modalPlataformaAberto, setModalPlataformaAberto] = useState(false);\r\n   const [modalGrupoAberto, setModalGrupoAberto] = useState(false);\r\n   const [plataformaEditando, setPlataformaEditando] = useState<Plataforma | null>(null);\r\n   const [grupoEditando, setGrupoEditando] = useState<Grupo | null>(null);\r\n+  const locale = useLocale(); // ⬅️ Pegue o locale atual\r\n \r\n   const buscarPlataformas = async () => {\r\n     const res = await fetch('/api/plataformas');\r\n     const data = await res.json();\r\n@@ -144,9 +146,9 @@\n             <CardContent className=\"p-6\">\r\n               <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n                 {plataformasFiltradas.map((plataforma) => (\r\n                   <div key={plataforma.id} className=\"relative group\">\r\n-                    <Link href={`/influenciadores/plataformas/${plataforma.id}`} className=\"block\">\r\n+                    <Link href={`/${locale}/influenciadores/plataformas/${plataforma.id}`} className=\"block\">\r\n                       <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n                         <CardContent className=\"p-6 text-center space-y-2\">\r\n                           {plataforma.imagem ? (\r\n                             <Image src={plataforma.imagem} alt={plataforma.nome} width={300} height={300} className=\"mx-auto mb-2 w-64 h-32 object-contain\" />\r\n"
                },
                {
                    "date": 1746138067760,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,9 @@\n             <CardContent className=\"p-6\">\r\n               <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n                 {gruposFiltrados.map((grupo) => (\r\n                   <div key={grupo.id} className=\"relative group\">\r\n-                    <Link href={`/influenciadores/grupos/${grupo.id}`} className=\"block\">\r\n+                    <Link href={`/${locale}/influenciadores/grupos/${grupo.id}`} className=\"block\">\r\n                       <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n                         <CardContent className=\"p-6 text-center space-y-2\">\r\n                           {grupo.imagem ? (\r\n                             <Image\r\n"
                },
                {
                    "date": 1746139020655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n       <Tabs defaultValue=\"grupos\" className=\"w-full\" onValueChange={setAbaAtiva}>\r\n         <div className=\"relative bg-white rounded-xl shadow-sm p-4 flex items-center justify-between w-full mb-4 min-h-[60px]\">\r\n           <TabsList className=\"flex space-x-2\">\r\n             <TabsTrigger value=\"grupos\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-md px-6\">Grupos</TabsTrigger>\r\n-            <TabsTrigger value=\"plataformas\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-md px-6\">Plataformas</TabsTrigger>\r\n+            <TabsTrigger value=\"todas as plataformas\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-md px-6\">Plataformas</TabsTrigger>\r\n           </TabsList>\r\n \r\n           <div className=\"flex items-center gap-3\">\r\n             <Input placeholder=\"Filtrar por nome...\" value={busca} onChange={(e) => setBusca(e.target.value)} className=\"max-w-xs\" />\r\n"
                },
                {
                    "date": 1746139032988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n       <Tabs defaultValue=\"grupos\" className=\"w-full\" onValueChange={setAbaAtiva}>\r\n         <div className=\"relative bg-white rounded-xl shadow-sm p-4 flex items-center justify-between w-full mb-4 min-h-[60px]\">\r\n           <TabsList className=\"flex space-x-2\">\r\n             <TabsTrigger value=\"grupos\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-md px-6\">Grupos</TabsTrigger>\r\n-            <TabsTrigger value=\"todas as plataformas\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-md px-6\">Plataformas</TabsTrigger>\r\n+            <TabsTrigger value=\"plataformas\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-md px-6\">Plataformas</TabsTrigger>\r\n           </TabsList>\r\n \r\n           <div className=\"flex items-center gap-3\">\r\n             <Input placeholder=\"Filtrar por nome...\" value={busca} onChange={(e) => setBusca(e.target.value)} className=\"max-w-xs\" />\r\n"
                },
                {
                    "date": 1746139059373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n       <Tabs defaultValue=\"grupos\" className=\"w-full\" onValueChange={setAbaAtiva}>\r\n         <div className=\"relative bg-white rounded-xl shadow-sm p-4 flex items-center justify-between w-full mb-4 min-h-[60px]\">\r\n           <TabsList className=\"flex space-x-2\">\r\n             <TabsTrigger value=\"grupos\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-md px-6\">Grupos</TabsTrigger>\r\n-            <TabsTrigger value=\"plataformas\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-md px-6\">Plataformas</TabsTrigger>\r\n+            <TabsTrigger value=\"plataformas\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-md px-6\">Todas as Plataformas</TabsTrigger>\r\n           </TabsList>\r\n \r\n           <div className=\"flex items-center gap-3\">\r\n             <Input placeholder=\"Filtrar por nome...\" value={busca} onChange={(e) => setBusca(e.target.value)} className=\"max-w-xs\" />\r\n"
                }
            ],
            "date": 1746132870957,
            "name": "Commit-0",
            "content": "'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n  Tabs,\r\n  TabsContent,\r\n  TabsList,\r\n  TabsTrigger\r\n} from \"@/components/ui/tabs\";\r\nimport {\r\n  Card,\r\n  CardContent\r\n} from \"@/components/ui/card\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Pencil, Plus } from \"lucide-react\";\r\nimport Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport PlataformaModal from \"@/components/PlataformaModal\";\r\nimport GrupoModal from \"@/components/GrupoModal\";\r\n\r\ninterface Plataforma {\r\n  id: string;\r\n  nome: string;\r\n  imagem?: string;\r\n  cor: string;\r\n  grupoId: string | null;\r\n}\r\ninterface Grupo {\r\n  id: string;\r\n  nome: string;\r\n  imagem?: string;\r\n}\r\n\r\nexport default function InfluenciadoresPage() {\r\n  const [plataformas, setPlataformas] = useState<Plataforma[]>([]);\r\n  const [grupos, setGrupos] = useState<Grupo[]>([]);\r\n  const [busca, setBusca] = useState('');\r\n  const [abaAtiva, setAbaAtiva] = useState('grupos');\r\n  const [modalPlataformaAberto, setModalPlataformaAberto] = useState(false);\r\n  const [modalGrupoAberto, setModalGrupoAberto] = useState(false);\r\n  const [plataformaEditando, setPlataformaEditando] = useState<Plataforma | null>(null);\r\n  const [grupoEditando, setGrupoEditando] = useState<Grupo | null>(null);\r\n\r\n  const buscarPlataformas = async () => {\r\n    const res = await fetch('/api/plataformas');\r\n    const data = await res.json();\r\n    setPlataformas(data);\r\n  };\r\n\r\n  const buscarGrupos = async () => {\r\n    const res = await fetch('/api/grupos');\r\n    const data = await res.json();\r\n    setGrupos(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    buscarPlataformas();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (abaAtiva === 'grupos') buscarGrupos();\r\n  }, [abaAtiva]);\r\n\r\n  const gruposFiltrados = grupos.filter((g) =>\r\n    g.nome.toLowerCase().includes(busca.toLowerCase())\r\n  );\r\n  const plataformasFiltradas = plataformas.filter((p) =>\r\n    p.nome.toLowerCase().includes(busca.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"p-4 space-y-4\">\r\n      <Tabs defaultValue=\"grupos\" className=\"w-full\" onValueChange={setAbaAtiva}>\r\n        <div className=\"relative bg-white rounded-xl shadow-sm p-4 flex items-center justify-between w-full mb-4 min-h-[60px]\">\r\n          <TabsList className=\"flex space-x-2\">\r\n            <TabsTrigger value=\"grupos\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-md px-6\">Grupos</TabsTrigger>\r\n            <TabsTrigger value=\"plataformas\" className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-md px-6\">Plataformas</TabsTrigger>\r\n          </TabsList>\r\n\r\n          <div className=\"flex items-center gap-3\">\r\n            <Input placeholder=\"Filtrar por nome...\" value={busca} onChange={(e) => setBusca(e.target.value)} className=\"max-w-xs\" />\r\n            <Button className=\"flex gap-2 items-center\" onClick={() => {\r\n              if (abaAtiva === 'grupos') {\r\n                setGrupoEditando(null);\r\n                setModalGrupoAberto(true);\r\n              } else {\r\n                setPlataformaEditando(null);\r\n                setModalPlataformaAberto(true);\r\n              }\r\n            }}>\r\n              <Plus className=\"w-4 h-4\" />\r\n              {abaAtiva === 'grupos' ? 'Novo Grupo' : 'Nova Plataforma'}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <TabsContent value=\"grupos\" forceMount>\r\n          <Card>\r\n            <CardContent className=\"p-6\">\r\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n                {gruposFiltrados.map((grupo) => (\r\n                  <div key={grupo.id} className=\"relative group\">\r\n                    <Link href={`/influenciadores/grupos/${grupo.id}`} className=\"block\">\r\n                      <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n                        <CardContent className=\"p-6 text-center space-y-2\">\r\n                          {grupo.imagem ? (\r\n                            <Image\r\n                              src={grupo.imagem}\r\n                              alt={grupo.nome}\r\n                              width={120}\r\n                              height={120}\r\n                              className=\"mx-auto h-32 object-contain\"\r\n                            />\r\n                          ) : (\r\n                            <div className=\"w-32 h-32 mx-auto bg-gray-200 flex items-center justify-center text-gray-500\">\r\n                              Sem imagem\r\n                            </div>\r\n                          )}\r\n                          <div className=\"text-sm font-medium\">{grupo.nome}</div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Link>\r\n                    <Button\r\n                      size=\"icon\"\r\n                      variant=\"ghost\"\r\n                      className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition bg-white/80 hover:bg-gray-600\"\r\n                      onClick={() => {\r\n                        setGrupoEditando(grupo);\r\n                        setModalGrupoAberto(true);\r\n                      }}\r\n                    >\r\n                      <Pencil className=\"w-4 h-4\" />\r\n                    </Button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"plataformas\">\r\n          <Card>\r\n            <CardContent className=\"p-6\">\r\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n                {plataformasFiltradas.map((plataforma) => (\r\n                  <div key={plataforma.id} className=\"relative group\">\r\n                    <Link href={`/influenciadores/plataformas/${plataforma.id}`} className=\"block\">\r\n                      <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n                        <CardContent className=\"p-6 text-center space-y-2\">\r\n                          {plataforma.imagem ? (\r\n                            <Image src={plataforma.imagem} alt={plataforma.nome} width={300} height={300} className=\"mx-auto mb-2 w-64 h-32 object-contain\" />\r\n                          ) : (\r\n                            <div className=\"w-64 h-32 mx-auto mb-2 bg-muted flex items-center justify-center text-gray-400\">Sem imagem</div>\r\n                          )}\r\n                          <div className=\"text-sm font-medium\">{plataforma.nome}</div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Link>\r\n                    <Button size=\"icon\" variant=\"ghost\" className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition bg-white/80 hover:bg-gray-600\" onClick={() => {\r\n                      setPlataformaEditando(plataforma);\r\n                      setModalPlataformaAberto(true);\r\n                    }}>\r\n                      <Pencil className=\"w-4 h-4\" />\r\n                    </Button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n\r\n      {/* <PlataformaModal\r\n        open={modalPlataformaAberto}\r\n        onClose={() => {\r\n          setModalPlataformaAberto(false);\r\n          setPlataformaEditando(null);\r\n        }}\r\n        onSave={async (dados) => {\r\n          await fetch('/api/plataformas', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(dados),\r\n          });\r\n          setModalPlataformaAberto(false);\r\n          setPlataformaEditando(null);\r\n          buscarPlataformas();\r\n        }}\r\n        plataformaAtual={plataformaEditando}\r\n      /> */}\r\n\r\n      {/* <GrupoModal\r\n        open={modalGrupoAberto}\r\n        onClose={() => {\r\n          setModalGrupoAberto(false);\r\n          setGrupoEditando(null);\r\n        }}\r\n        onSave={async (dados) => {\r\n          await fetch('/api/grupos', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(dados),\r\n          });\r\n          await buscarGrupos();\r\n          await buscarPlataformas();\r\n          setModalGrupoAberto(false);\r\n          setGrupoEditando(null);\r\n        }}\r\n        grupoAtual={grupoEditando}\r\n        plataformasDisponiveis={plataformas.filter(p => !p.grupoId || p.grupoId === grupoEditando?.id)}\r\n      /> */}\r\n    </div>\r\n  );\r\n}\r\n"
        }
    ]
}