{
    "sourceFile": "app/[locale]/(protected)/influenciadores/plataformas/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1746137553619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746137563661,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,45 +99,44 @@\n \r\n \r\n         <CardContent>\r\n           <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n-            {plataformasFiltradas.map((plataforma) => (\r\n-              <div key={plataforma.id} className=\"relative group\">\r\n-                <Link\r\n-                  href={`/influenciadores/plataformas/${plataforma.id}`}\r\n-                  className=\"block\"\r\n-                >\r\n-                  <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n-                    <CardContent className=\"p-6 text-center space-y-2\">\r\n-                      {plataforma.imagem ? (\r\n-                        <Image\r\n-                          src={plataforma.imagem}\r\n-                          alt={plataforma.nome}\r\n-                          width={300}\r\n-                          height={300}\r\n-                          className=\"mx-auto mb-2 w-64 h-32 object-contain\"\r\n-                        />\r\n-                      ) : (\r\n-                        <div className=\"w-64 h-32 mx-auto mb-2 bg-muted flex items-center justify-center text-gray-400\">\r\n-                          Sem imagem\r\n-                        </div>\r\n-                      )}\r\n-                      <div className=\"text-sm font-medium\">{plataforma.nome}</div>\r\n-                    </CardContent>\r\n-                  </Card>\r\n-                </Link>\r\n+          {plataformasFiltradas.map((plataforma) => (\r\n+  <div key={plataforma.id} className=\"relative group\">\r\n+    <Link\r\n+      href={`/influenciadores/plataformas/${plataforma.id}`} // <- aqui corrigido\r\n+      className=\"block\"\r\n+    >\r\n+      <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n+        <CardContent className=\"p-6 text-center space-y-2\">\r\n+          {plataforma.imagem ? (\r\n+            <Image\r\n+              src={plataforma.imagem}\r\n+              alt={plataforma.nome}\r\n+              width={300}\r\n+              height={300}\r\n+              className=\"mx-auto mb-2 w-64 h-32 object-contain\"\r\n+            />\r\n+          ) : (\r\n+            <div className=\"w-64 h-32 mx-auto mb-2 bg-muted flex items-center justify-center text-gray-400\">\r\n+              Sem imagem\r\n+            </div>\r\n+          )}\r\n+          <div className=\"text-sm font-medium\">{plataforma.nome}</div>\r\n+        </CardContent>\r\n+      </Card>\r\n+    </Link>\r\n+    <Button\r\n+      size=\"icon\"\r\n+      variant=\"ghost\"\r\n+      className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition bg-white/80 hover:bg-gray-600\"\r\n+      onClick={() => abrirEditar(plataforma)}\r\n+    >\r\n+      <Pencil className=\"w-4 h-4\" />\r\n+    </Button>\r\n+  </div>\r\n+))}\r\n \r\n-                {/* Botão de editar, só aparece no hover */}\r\n-                <Button\r\n-                  size=\"icon\"\r\n-                  variant=\"ghost\"\r\n-                  className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition bg-white/80 hover:bg-gray-600\"\r\n-                  onClick={() => abrirEditar(plataforma)}\r\n-                >\r\n-                  <Pencil className=\"w-4 h-4\" />\r\n-                </Button>\r\n-              </div>\r\n-            ))}\r\n           </div>\r\n         </CardContent>\r\n       </Card>\r\n \r\n"
                },
                {
                    "date": 1746138075108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,9 @@\n           <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n           {plataformasFiltradas.map((plataforma) => (\r\n   <div key={plataforma.id} className=\"relative group\">\r\n     <Link\r\n-      href={`/influenciadores/plataformas/${plataforma.id}`} // <- aqui corrigido\r\n+      href={`/${locale}/influenciadores/plataformas/${plataforma.id}`} // <- aqui corrigido\r\n       className=\"block\"\r\n     >\r\n       <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n         <CardContent className=\"p-6 text-center space-y-2\">\r\n"
                },
                {
                    "date": 1746138111507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,11 @@\n import { Input } from \"@/components/ui/input\"; // 👈 Importar Input\r\n import { Pencil, Plus } from \"lucide-react\";\r\n import Image from \"next/image\";\r\n import PlataformaModal from \"@/components/PlataformaModal\";\r\n+import { useLocale } from 'next-intl'; \r\n \r\n+\r\n interface Plataforma {\r\n   id: string;\r\n   nome: string;\r\n   imagem?: string;\r\n@@ -20,9 +22,9 @@\n   const [plataformas, setPlataformas] = useState<Plataforma[]>([]);\r\n   const [modalAberto, setModalAberto] = useState(false);\r\n   const [plataformaEditando, setPlataformaEditando] = useState<Plataforma | null>(null);\r\n   const [busca, setBusca] = useState(''); // 👈 Novo estado para o filtro de busca\r\n-\r\n+  const locale = useLocale(); // ⬅️ Pegue o locale atual\r\n   const buscarPlataformas = async () => {\r\n     try {\r\n       const res = await fetch('/api/plataformas');\r\n       const data = await res.json();\r\n"
                }
            ],
            "date": 1746137553619,
            "name": "Commit-0",
            "content": "'use client';\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Link } from \"@/components/navigation\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\"; // 👈 Importar Input\r\nimport { Pencil, Plus } from \"lucide-react\";\r\nimport Image from \"next/image\";\r\nimport PlataformaModal from \"@/components/PlataformaModal\";\r\n\r\ninterface Plataforma {\r\n  id: string;\r\n  nome: string;\r\n  imagem?: string;\r\n  cor: string;\r\n}\r\n\r\nexport default function ListaDePlataformas() {\r\n  const [plataformas, setPlataformas] = useState<Plataforma[]>([]);\r\n  const [modalAberto, setModalAberto] = useState(false);\r\n  const [plataformaEditando, setPlataformaEditando] = useState<Plataforma | null>(null);\r\n  const [busca, setBusca] = useState(''); // 👈 Novo estado para o filtro de busca\r\n\r\n  const buscarPlataformas = async () => {\r\n    try {\r\n      const res = await fetch('/api/plataformas');\r\n      const data = await res.json();\r\n      setPlataformas(data);\r\n    } catch (error) {\r\n      console.error('Erro ao buscar plataformas:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    buscarPlataformas();\r\n  }, []);\r\n\r\n  const handleSalvar = async (data: { id?: string; nome: string; imagem?: string; cor: string }) => {\r\n    try {\r\n      const response = await fetch('/api/plataformas', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          nome: data.nome,\r\n          cor: data.cor,\r\n          imagem: data.imagem,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Erro ao criar plataforma');\r\n      }\r\n\r\n      console.log('Plataforma cadastrada com sucesso!');\r\n      await buscarPlataformas();\r\n    } catch (error) {\r\n      console.error('Erro ao salvar plataforma:', error);\r\n    }\r\n  };\r\n\r\n  const abrirNovo = () => {\r\n    setPlataformaEditando(null);\r\n    setModalAberto(true);\r\n  };\r\n\r\n  const abrirEditar = (plataforma: Plataforma) => {\r\n    setPlataformaEditando(plataforma);\r\n    setModalAberto(true);\r\n  };\r\n\r\n  // 👇 Filtro de plataformas baseado no nome digitado\r\n  const plataformasFiltradas = plataformas.filter((plataforma) =>\r\n    plataforma.nome.toLowerCase().includes(busca.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"p-6 space-y-6\">\r\n      <Card>\r\n      <CardHeader className=\"flex flex-row items-center justify-between gap-4\">\r\n  <CardTitle>Plataformas</CardTitle>\r\n\r\n  {/* Div que agrupa o Input e o Botão */}\r\n  <div className=\"flex items-center gap-3\">\r\n    <Input\r\n      placeholder=\"Filtrar por nome...\"\r\n      value={busca}\r\n      onChange={(e) => setBusca(e.target.value)}\r\n      className=\"max-w-xs\"\r\n    />\r\n    <Button size=\"md\" onClick={abrirNovo} className=\"flex gap-2 items-center\">\r\n      <Plus className=\"w-4 h-4\" />\r\n      Nova Plataforma\r\n    </Button>\r\n  </div>\r\n</CardHeader>\r\n\r\n\r\n        <CardContent>\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n            {plataformasFiltradas.map((plataforma) => (\r\n              <div key={plataforma.id} className=\"relative group\">\r\n                <Link\r\n                  href={`/influenciadores/plataformas/${plataforma.id}`}\r\n                  className=\"block\"\r\n                >\r\n                  <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n                    <CardContent className=\"p-6 text-center space-y-2\">\r\n                      {plataforma.imagem ? (\r\n                        <Image\r\n                          src={plataforma.imagem}\r\n                          alt={plataforma.nome}\r\n                          width={300}\r\n                          height={300}\r\n                          className=\"mx-auto mb-2 w-64 h-32 object-contain\"\r\n                        />\r\n                      ) : (\r\n                        <div className=\"w-64 h-32 mx-auto mb-2 bg-muted flex items-center justify-center text-gray-400\">\r\n                          Sem imagem\r\n                        </div>\r\n                      )}\r\n                      <div className=\"text-sm font-medium\">{plataforma.nome}</div>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Link>\r\n\r\n                {/* Botão de editar, só aparece no hover */}\r\n                <Button\r\n                  size=\"icon\"\r\n                  variant=\"ghost\"\r\n                  className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition bg-white/80 hover:bg-gray-600\"\r\n                  onClick={() => abrirEditar(plataforma)}\r\n                >\r\n                  <Pencil className=\"w-4 h-4\" />\r\n                </Button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <PlataformaModal\r\n        open={modalAberto}\r\n        onClose={() => setModalAberto(false)}\r\n        onSave={handleSalvar}\r\n        plataformaAtual={plataformaEditando}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"
        }
    ]
}