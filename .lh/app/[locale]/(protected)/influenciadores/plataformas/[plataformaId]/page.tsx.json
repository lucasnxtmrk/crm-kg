{
    "sourceFile": "app/[locale]/(protected)/influenciadores/plataformas/[plataformaId]/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746137678331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746137678331,
            "name": "Commit-0",
            "content": "'use client';\r\n\r\nimport { useParams } from 'next/navigation';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ListaInfluenciadores from './components/lista/table';\r\nimport KanbanWrapper from './components/kanban';\r\nimport {\r\n  Tabs,\r\n  TabsContent,\r\n  TabsList,\r\n  TabsTrigger,\r\n} from \"@/components/ui/tabs\";\r\nimport { Card } from '@/components/ui/card';\r\nimport Image from \"next/image\";\r\n\r\ninterface Plataforma {\r\n  id: string;\r\n  nome: string;\r\n  imagem?: string;\r\n  cor: string;\r\n}\r\n\r\nexport default function PaginaPlataforma() {\r\n  const params = useParams();\r\n  const { plataformaId } = useParams() as { plataformaId: string };\r\n  const [plataformaAtual, setPlataformaAtual] = useState<Plataforma | null>(null);\r\n\r\nuseEffect(() => {\r\n  const fetchPlataforma = async () => {\r\n    try {\r\n      const res = await fetch('/api/plataformas');\r\n      const plataformas: Plataforma[] = await res.json();\r\n      const plataforma = plataformas.find(p => p.id === plataformaId);\r\n      setPlataformaAtual(plataforma || null);\r\n    } catch (error) {\r\n      console.error('Erro ao buscar plataformas:', error);\r\n    }\r\n  };\r\n\r\n  if (plataformaId) fetchPlataforma();\r\n}, [plataformaId]);\r\n\r\n  return (\r\n    <div className=\"p-4 space-y-4\">\r\n      \r\n      {/* ⬇️ Agora TUDO dentro de 1 único Tabs */}\r\n      <Tabs defaultValue=\"kanban\" className=\"w-full\">\r\n\r\n        {/* Caixa branca: Tabs + Logo */}\r\n        <div className=\"relative bg-white rounded-xl shadow-sm p-4 flex items-center justify-between w-full mb-4 min-h-[60px]\">\r\n          \r\n          {/* Botões Kanban/Lista */}\r\n          <TabsList className=\"flex\">\r\n            <TabsTrigger\r\n              value=\"kanban\"\r\n              className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-md px-6\"\r\n            >\r\n              Kanban\r\n            </TabsTrigger>\r\n            <TabsTrigger\r\n              value=\"lista\"\r\n              className=\"data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-md px-6\"\r\n            >\r\n              Lista\r\n            </TabsTrigger>\r\n          </TabsList>\r\n\r\n          {/* Logo da plataforma centralizada */}\r\n          {plataformaAtual && (\r\n            <div className=\"absolute left-1/2 top-1/2 transform -translate-x-1/2 -translate-y-1/2\">\r\n              <Image\r\n                src={plataformaAtual.imagem || '/placeholder.png'}\r\n                alt={plataformaAtual.nome}\r\n                width={120}\r\n                height={50}\r\n                className=\"object-contain\"\r\n              />\r\n            </div>\r\n          )}\r\n\r\n        </div>\r\n\r\n        {/* Conteúdo */}\r\n        <TabsContent value=\"kanban\">\r\n          <Card>\r\n            <KanbanWrapper />\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"lista\">\r\n          <Card>\r\n            <ListaInfluenciadores plataformaSlug={plataformaId} />\r\n          </Card>\r\n        </TabsContent>\r\n\r\n      </Tabs>\r\n\r\n    </div>\r\n  );\r\n}\r\n"
        }
    ]
}