{
    "sourceFile": "app/[locale]/(protected)/influenciadores/grupos/[grupoId]/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1746137475330,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746138200571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +1,97 @@\n 'use client';\r\n \r\n+import { useEffect, useState } from 'react';\r\n import { useParams } from 'next/navigation';\r\n-import { useEffect } from 'react';\r\n+import Image from 'next/image';\r\n+import { Card, CardContent } from '@/components/ui/card';\r\n+import Link from 'next/link';\r\n \r\n-export default function TesteGrupo() {\r\n-  const { grupoId } = useParams() as { grupoId: string }; // <- ajustado aqui\r\n+interface Grupo {\r\n+  id: string;\r\n+  nome: string;\r\n+  imagem?: string;\r\n+}\r\n \r\n+interface Plataforma {\r\n+  id: string;\r\n+  nome: string;\r\n+  imagem?: string;\r\n+  grupoId: string | null;\r\n+}\r\n+\r\n+export default function GrupoPage() {\r\n+    const { id } = useParams() as { id: string };\r\n+    const [grupo, setGrupo] = useState<Grupo | null>(null);\r\n+  const [plataformas, setPlataformas] = useState<Plataforma[]>([]);\r\n+\r\n   useEffect(() => {\r\n-    console.log('[CLIENT] Página de grupo aberta com ID:', grupoId);\r\n-  }, [grupoId]);\r\n+    const fetchGrupo = async () => {\r\n+      const res = await fetch('/api/grupos');\r\n+      const data: Grupo[] = await res.json();\r\n+      const encontrado = data.find((g) => g.id === id);\r\n+      setGrupo(encontrado || null);\r\n+    };\r\n \r\n+    const fetchPlataformas = async () => {\r\n+      const res = await fetch('/api/plataformas');\r\n+      const data: Plataforma[] = await res.json();\r\n+      const doGrupo = data.filter((p) => p.grupoId === id);\r\n+      setPlataformas(doGrupo);\r\n+    };\r\n+\r\n+    if (id) {\r\n+      fetchGrupo();\r\n+      fetchPlataformas();\r\n+    }\r\n+  }, [id]);\r\n+\r\n+  if (!grupo) return <div className=\"p-4\">Grupo não encontrado.</div>;\r\n+\r\n   return (\r\n-    <div className=\"p-6 space-y-2\">\r\n-      <h1 className=\"text-2xl font-bold text-red-500\">Página do grupo: {grupoId}</h1>\r\n-      <p className=\"text-sm text-gray-600\">Teste simples sem nenhum layout extra.</p>\r\n+    <div className=\"p-6 space-y-6\">\r\n+      {/* Título e imagem do grupo */}\r\n+      <div className=\"text-center space-y-2\">\r\n+        {grupo.imagem && (\r\n+          <Image\r\n+            src={grupo.imagem}\r\n+            alt={grupo.nome}\r\n+            width={120}\r\n+            height={120}\r\n+            className=\"mx-auto h-32 object-contain\"\r\n+          />\r\n+        )}\r\n+        <h1 className=\"text-2xl font-bold\">{grupo.nome}</h1>\r\n+      </div>\r\n+\r\n+      {/* Lista de plataformas */}\r\n+      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n+        {plataformas.map((plataforma) => (\r\n+          <Link\r\n+            key={plataforma.id}\r\n+            href={/influenciadores/plataformas/${plataforma.id}}\r\n+            className=\"block\"\r\n+          >\r\n+            <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n+              <CardContent className=\"p-6 text-center space-y-2\">\r\n+                {plataforma.imagem ? (\r\n+                  <Image\r\n+                    src={plataforma.imagem}\r\n+                    alt={plataforma.nome}\r\n+                    width={300}\r\n+                    height={300}\r\n+                    className=\"mx-auto mb-2 w-64 h-32 object-contain\"\r\n+                  />\r\n+                ) : (\r\n+                  <div className=\"w-64 h-32 mx-auto mb-2 bg-muted flex items-center justify-center text-gray-400\">\r\n+                    Sem imagem\r\n+                  </div>\r\n+                )}\r\n+                <div className=\"text-sm font-medium\">{plataforma.nome}</div>\r\n+              </CardContent>\r\n+            </Card>\r\n+          </Link>\r\n+        ))}\r\n+      </div>\r\n     </div>\r\n   );\r\n-}\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1746138262352,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,97 +1,19 @@\n 'use client';\r\n \r\n-import { useEffect, useState } from 'react';\r\n import { useParams } from 'next/navigation';\r\n-import Image from 'next/image';\r\n-import { Card, CardContent } from '@/components/ui/card';\r\n-import Link from 'next/link';\r\n+import { useEffect } from 'react';\r\n \r\n-interface Grupo {\r\n-  id: string;\r\n-  nome: string;\r\n-  imagem?: string;\r\n-}\r\n+export default function TesteGrupo() {\r\n+  const { id } = useParams() as { id: string };\r\n \r\n-interface Plataforma {\r\n-  id: string;\r\n-  nome: string;\r\n-  imagem?: string;\r\n-  grupoId: string | null;\r\n-}\r\n-\r\n-export default function GrupoPage() {\r\n-    const { id } = useParams() as { id: string };\r\n-    const [grupo, setGrupo] = useState<Grupo | null>(null);\r\n-  const [plataformas, setPlataformas] = useState<Plataforma[]>([]);\r\n-\r\n   useEffect(() => {\r\n-    const fetchGrupo = async () => {\r\n-      const res = await fetch('/api/grupos');\r\n-      const data: Grupo[] = await res.json();\r\n-      const encontrado = data.find((g) => g.id === id);\r\n-      setGrupo(encontrado || null);\r\n-    };\r\n-\r\n-    const fetchPlataformas = async () => {\r\n-      const res = await fetch('/api/plataformas');\r\n-      const data: Plataforma[] = await res.json();\r\n-      const doGrupo = data.filter((p) => p.grupoId === id);\r\n-      setPlataformas(doGrupo);\r\n-    };\r\n-\r\n-    if (id) {\r\n-      fetchGrupo();\r\n-      fetchPlataformas();\r\n-    }\r\n+    console.log('[CLIENT] Página de grupo aberta com ID:', id);\r\n   }, [id]);\r\n \r\n-  if (!grupo) return <div className=\"p-4\">Grupo não encontrado.</div>;\r\n-\r\n   return (\r\n-    <div className=\"p-6 space-y-6\">\r\n-      {/* Título e imagem do grupo */}\r\n-      <div className=\"text-center space-y-2\">\r\n-        {grupo.imagem && (\r\n-          <Image\r\n-            src={grupo.imagem}\r\n-            alt={grupo.nome}\r\n-            width={120}\r\n-            height={120}\r\n-            className=\"mx-auto h-32 object-contain\"\r\n-          />\r\n-        )}\r\n-        <h1 className=\"text-2xl font-bold\">{grupo.nome}</h1>\r\n-      </div>\r\n-\r\n-      {/* Lista de plataformas */}\r\n-      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n-        {plataformas.map((plataforma) => (\r\n-          <Link\r\n-            key={plataforma.id}\r\n-            href={/influenciadores/plataformas/${plataforma.id}}\r\n-            className=\"block\"\r\n-          >\r\n-            <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n-              <CardContent className=\"p-6 text-center space-y-2\">\r\n-                {plataforma.imagem ? (\r\n-                  <Image\r\n-                    src={plataforma.imagem}\r\n-                    alt={plataforma.nome}\r\n-                    width={300}\r\n-                    height={300}\r\n-                    className=\"mx-auto mb-2 w-64 h-32 object-contain\"\r\n-                  />\r\n-                ) : (\r\n-                  <div className=\"w-64 h-32 mx-auto mb-2 bg-muted flex items-center justify-center text-gray-400\">\r\n-                    Sem imagem\r\n-                  </div>\r\n-                )}\r\n-                <div className=\"text-sm font-medium\">{plataforma.nome}</div>\r\n-              </CardContent>\r\n-            </Card>\r\n-          </Link>\r\n-        ))}\r\n\\ No newline at end of file\n-      </div>\r\n+    <div className=\"p-6 space-y-2\">\r\n+      <h1 className=\"text-2xl font-bold text-red-500\">Página do grupo: {id}</h1>\r\n+      <p className=\"text-sm text-gray-600\">Teste simples sem nenhum layout extra.</p>\r\n     </div>\r\n   );\r\n-}\n+}\r\n"
                },
                {
                    "date": 1746138289206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +1,76 @@\n 'use client';\r\n \r\n+import { useEffect, useState } from 'react';\r\n import { useParams } from 'next/navigation';\r\n-import { useEffect } from 'react';\r\n+import { useLocale } from 'next-intl';\r\n+import { Card, CardContent } from '@/components/ui/card';\r\n+import Image from 'next/image';\r\n+import Link from 'next/link';\r\n \r\n-export default function TesteGrupo() {\r\n-  const { id } = useParams() as { id: string };\r\n+interface Plataforma {\r\n+  id: string;\r\n+  nome: string;\r\n+  imagem?: string;\r\n+  grupoId: string | null;\r\n+}\r\n \r\n+export default function PaginaGrupo() {\r\n+  const { grupoId } = useParams() as { grupoId: string };\r\n+  const locale = useLocale();\r\n+\r\n+  const [plataformas, setPlataformas] = useState<Plataforma[]>([]);\r\n+\r\n   useEffect(() => {\r\n-    console.log('[CLIENT] Página de grupo aberta com ID:', id);\r\n-  }, [id]);\r\n+    const fetchPlataformas = async () => {\r\n+      try {\r\n+        const res = await fetch('/api/plataformas');\r\n+        const todas = await res.json();\r\n+        const filtradas = todas.filter((p: Plataforma) => p.grupoId === grupoId);\r\n+        setPlataformas(filtradas);\r\n+      } catch (error) {\r\n+        console.error('Erro ao buscar plataformas do grupo:', error);\r\n+      }\r\n+    };\r\n \r\n+    if (grupoId) fetchPlataformas();\r\n+  }, [grupoId]);\r\n+\r\n   return (\r\n-    <div className=\"p-6 space-y-2\">\r\n-      <h1 className=\"text-2xl font-bold text-red-500\">Página do grupo: {id}</h1>\r\n-      <p className=\"text-sm text-gray-600\">Teste simples sem nenhum layout extra.</p>\r\n+    <div className=\"p-6 space-y-6\">\r\n+      <h1 className=\"text-2xl font-bold\">Plataformas do grupo: {grupoId}</h1>\r\n+\r\n+      {plataformas.length === 0 ? (\r\n+        <p className=\"text-gray-500\">Nenhuma plataforma encontrada.</p>\r\n+      ) : (\r\n+        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n+          {plataformas.map((plataforma) => (\r\n+            <Card key={plataforma.id} className=\"hover:shadow-md transition\">\r\n+              <Link\r\n+                href={`/${locale}/influenciadores/plataformas/${plataforma.id}`}\r\n+                className=\"block\"\r\n+              >\r\n+                <CardContent className=\"p-4 text-center space-y-2\">\r\n+                  {plataforma.imagem ? (\r\n+                    <Image\r\n+                      src={plataforma.imagem}\r\n+                      alt={plataforma.nome}\r\n+                      width={300}\r\n+                      height={150}\r\n+                      unoptimized\r\n+                      className=\"mx-auto h-24 object-contain\"\r\n+                    />\r\n+                  ) : (\r\n+                    <div className=\"w-full h-24 bg-gray-200 flex items-center justify-center text-gray-400\">\r\n+                      Sem imagem\r\n+                    </div>\r\n+                  )}\r\n+                  <p className=\"text-sm font-medium\">{plataforma.nome}</p>\r\n+                </CardContent>\r\n+              </Link>\r\n+            </Card>\r\n+          ))}\r\n+        </div>\r\n+      )}\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1746138804267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,73 +1,74 @@\n 'use client';\r\n \r\n import { useEffect, useState } from 'react';\r\n import { useParams } from 'next/navigation';\r\n-import { useLocale } from 'next-intl';\r\n import { Card, CardContent } from '@/components/ui/card';\r\n import Image from 'next/image';\r\n-import Link from 'next/link';\r\n \r\n interface Plataforma {\r\n   id: string;\r\n   nome: string;\r\n   imagem?: string;\r\n   grupoId: string | null;\r\n }\r\n \r\n-export default function PaginaGrupo() {\r\n+interface Grupo {\r\n+  id: string;\r\n+  nome: string;\r\n+}\r\n+\r\n+export default function GrupoPage() {\r\n   const { grupoId } = useParams() as { grupoId: string };\r\n-  const locale = useLocale();\r\n-\r\n   const [plataformas, setPlataformas] = useState<Plataforma[]>([]);\r\n+  const [grupo, setGrupo] = useState<Grupo | null>(null);\r\n \r\n   useEffect(() => {\r\n-    const fetchPlataformas = async () => {\r\n-      try {\r\n-        const res = await fetch('/api/plataformas');\r\n-        const todas = await res.json();\r\n-        const filtradas = todas.filter((p: Plataforma) => p.grupoId === grupoId);\r\n-        setPlataformas(filtradas);\r\n-      } catch (error) {\r\n-        console.error('Erro ao buscar plataformas do grupo:', error);\r\n-      }\r\n+    const buscarPlataformasEGrupo = async () => {\r\n+      const [resPlataformas, resGrupos] = await Promise.all([\r\n+        fetch('/api/plataformas'),\r\n+        fetch('/api/grupos'),\r\n+      ]);\r\n+      const plataformas: Plataforma[] = await resPlataformas.json();\r\n+      const grupos: Grupo[] = await resGrupos.json();\r\n+\r\n+      setPlataformas(plataformas.filter(p => p.grupoId === grupoId));\r\n+      const encontrado = grupos.find(g => g.id === grupoId) || null;\r\n+      setGrupo(encontrado);\r\n     };\r\n \r\n-    if (grupoId) fetchPlataformas();\r\n+    if (grupoId) buscarPlataformasEGrupo();\r\n   }, [grupoId]);\r\n \r\n   return (\r\n-    <div className=\"p-6 space-y-6\">\r\n-      <h1 className=\"text-2xl font-bold\">Plataformas do grupo: {grupoId}</h1>\r\n+    <div className=\"p-4 space-y-4\">\r\n+      <h1 className=\"text-xl font-semibold\">\r\n+        Plataformas do grupo: {grupo?.nome || grupoId}\r\n+      </h1>\r\n \r\n       {plataformas.length === 0 ? (\r\n         <p className=\"text-gray-500\">Nenhuma plataforma encontrada.</p>\r\n       ) : (\r\n         <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n           {plataformas.map((plataforma) => (\r\n             <Card key={plataforma.id} className=\"hover:shadow-md transition\">\r\n-              <Link\r\n-                href={`/${locale}/influenciadores/plataformas/${plataforma.id}`}\r\n-                className=\"block\"\r\n-              >\r\n-                <CardContent className=\"p-4 text-center space-y-2\">\r\n-                  {plataforma.imagem ? (\r\n-                    <Image\r\n-                      src={plataforma.imagem}\r\n-                      alt={plataforma.nome}\r\n-                      width={300}\r\n-                      height={150}\r\n-                      unoptimized\r\n-                      className=\"mx-auto h-24 object-contain\"\r\n-                    />\r\n-                  ) : (\r\n-                    <div className=\"w-full h-24 bg-gray-200 flex items-center justify-center text-gray-400\">\r\n-                      Sem imagem\r\n-                    </div>\r\n-                  )}\r\n-                  <p className=\"text-sm font-medium\">{plataforma.nome}</p>\r\n-                </CardContent>\r\n-              </Link>\r\n+              <CardContent className=\"p-4 text-center space-y-2\">\r\n+                {plataforma.imagem ? (\r\n+                  <Image\r\n+                    src={plataforma.imagem}\r\n+                    alt={plataforma.nome}\r\n+                    width={300}\r\n+                    height={150}\r\n+                    unoptimized\r\n+                    className=\"mx-auto h-24 object-contain\"\r\n+                  />\r\n+                ) : (\r\n+                  <div className=\"w-full h-24 bg-gray-200 flex items-center justify-center text-gray-400\">\r\n+                    Sem imagem\r\n+                  </div>\r\n+                )}\r\n+                <p className=\"text-sm font-medium\">{plataforma.nome}</p>\r\n+              </CardContent>\r\n             </Card>\r\n           ))}\r\n         </div>\r\n       )}\r\n"
                },
                {
                    "date": 1746142224747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import { useEffect, useState } from 'react';\r\n import { useParams } from 'next/navigation';\r\n import { Card, CardContent } from '@/components/ui/card';\r\n import Image from 'next/image';\r\n+import Link from 'next/link'; // 👈 importar Link\r\n \r\n interface Plataforma {\r\n   id: string;\r\n   nome: string;\r\n@@ -49,27 +50,33 @@\n         <p className=\"text-gray-500\">Nenhuma plataforma encontrada.</p>\r\n       ) : (\r\n         <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n           {plataformas.map((plataforma) => (\r\n-            <Card key={plataforma.id} className=\"hover:shadow-md transition\">\r\n-              <CardContent className=\"p-4 text-center space-y-2\">\r\n-                {plataforma.imagem ? (\r\n-                  <Image\r\n-                    src={plataforma.imagem}\r\n-                    alt={plataforma.nome}\r\n-                    width={300}\r\n-                    height={150}\r\n-                    unoptimized\r\n-                    className=\"mx-auto h-24 object-contain\"\r\n-                  />\r\n-                ) : (\r\n-                  <div className=\"w-full h-24 bg-gray-200 flex items-center justify-center text-gray-400\">\r\n-                    Sem imagem\r\n-                  </div>\r\n-                )}\r\n-                <p className=\"text-sm font-medium\">{plataforma.nome}</p>\r\n-              </CardContent>\r\n-            </Card>\r\n+            <Link\r\n+              key={plataforma.id}\r\n+              href={`/influenciadores/plataformas/${plataforma.id}`}\r\n+              className=\"block\"\r\n+            >\r\n+              <Card className=\"hover:shadow-md transition cursor-pointer\">\r\n+                <CardContent className=\"p-4 text-center space-y-2\">\r\n+                  {plataforma.imagem ? (\r\n+                    <Image\r\n+                      src={plataforma.imagem}\r\n+                      alt={plataforma.nome}\r\n+                      width={300}\r\n+                      height={150}\r\n+                      unoptimized\r\n+                      className=\"mx-auto h-24 object-contain\"\r\n+                    />\r\n+                  ) : (\r\n+                    <div className=\"w-full h-24 bg-gray-200 flex items-center justify-center text-gray-400\">\r\n+                      Sem imagem\r\n+                    </div>\r\n+                  )}\r\n+                  <p className=\"text-sm font-medium\">{plataforma.nome}</p>\r\n+                </CardContent>\r\n+              </Card>\r\n+            </Link>\r\n           ))}\r\n         </div>\r\n       )}\r\n     </div>\r\n"
                },
                {
                    "date": 1746142283406,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n import { useParams } from 'next/navigation';\r\n import { Card, CardContent } from '@/components/ui/card';\r\n import Image from 'next/image';\r\n import Link from 'next/link'; // 👈 importar Link\r\n+import { useLocale } from 'next-intl'; \r\n \r\n interface Plataforma {\r\n   id: string;\r\n   nome: string;\r\n@@ -21,8 +22,9 @@\n export default function GrupoPage() {\r\n   const { grupoId } = useParams() as { grupoId: string };\r\n   const [plataformas, setPlataformas] = useState<Plataforma[]>([]);\r\n   const [grupo, setGrupo] = useState<Grupo | null>(null);\r\n+  const locale = useLocale(); // ⬅️ Pegue o locale atual\r\n \r\n   useEffect(() => {\r\n     const buscarPlataformasEGrupo = async () => {\r\n       const [resPlataformas, resGrupos] = await Promise.all([\r\n@@ -52,9 +54,9 @@\n         <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n           {plataformas.map((plataforma) => (\r\n             <Link\r\n               key={plataforma.id}\r\n-              href={`/influenciadores/plataformas/${plataforma.id}`}\r\n+              href={`${locale}/influenciadores/plataformas/${plataforma.id}`}\r\n               className=\"block\"\r\n             >\r\n               <Card className=\"hover:shadow-md transition cursor-pointer\">\r\n                 <CardContent className=\"p-4 text-center space-y-2\">\r\n"
                },
                {
                    "date": 1746142469420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n         <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n           {plataformas.map((plataforma) => (\r\n             <Link\r\n               key={plataforma.id}\r\n-              href={`${locale}/influenciadores/plataformas/${plataforma.id}`}\r\n+              href={`/${locale}/influenciadores/plataformas/${plataforma.id}`}\r\n               className=\"block\"\r\n             >\r\n               <Card className=\"hover:shadow-md transition cursor-pointer\">\r\n                 <CardContent className=\"p-4 text-center space-y-2\">\r\n"
                }
            ],
            "date": 1746137475330,
            "name": "Commit-0",
            "content": "'use client';\r\n\r\nimport { useParams } from 'next/navigation';\r\nimport { useEffect } from 'react';\r\n\r\nexport default function TesteGrupo() {\r\n  const { grupoId } = useParams() as { grupoId: string }; // <- ajustado aqui\r\n\r\n  useEffect(() => {\r\n    console.log('[CLIENT] Página de grupo aberta com ID:', grupoId);\r\n  }, [grupoId]);\r\n\r\n  return (\r\n    <div className=\"p-6 space-y-2\">\r\n      <h1 className=\"text-2xl font-bold text-red-500\">Página do grupo: {grupoId}</h1>\r\n      <p className=\"text-sm text-gray-600\">Teste simples sem nenhum layout extra.</p>\r\n    </div>\r\n  );\r\n}\r\n"
        }
    ]
}