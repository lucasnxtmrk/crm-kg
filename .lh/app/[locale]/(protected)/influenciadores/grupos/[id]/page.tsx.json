{
    "sourceFile": "app/[locale]/(protected)/influenciadores/grupos/[id]/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1746132208255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746132803988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,45 +1,95 @@\n-// /app/teste-plataformas/page.tsx\r\n-\r\n 'use client';\r\n \r\n+import { useEffect, useState } from 'react';\r\n+import { useParams } from 'next/navigation';\r\n import Image from 'next/image';\r\n import { Card, CardContent } from '@/components/ui/card';\r\n+import Link from 'next/link';\r\n \r\n-const plataformas = [\r\n-  {\r\n-    id: 'genio777',\r\n-    nome: 'Gênio777',\r\n-    imagem: '/images/plataformas/genio777.png',\r\n-  },\r\n-  {\r\n-    id: 'pgcoelho',\r\n-    nome: 'PG Coelho',\r\n-    imagem: '/images/plataformas/pgcoelho.png',\r\n-  },\r\n-];\r\n+interface Grupo {\r\n+  id: string;\r\n+  nome: string;\r\n+  imagem?: string;\r\n+}\r\n \r\n-export default function TestePlataformasPage() {\r\n+interface Plataforma {\r\n+  id: string;\r\n+  nome: string;\r\n+  imagem?: string;\r\n+  grupoId: string | null;\r\n+}\r\n+\r\n+export default function GrupoPage() {\r\n+  const { id } = useParams() as { id: string };\r\n+  const [grupo, setGrupo] = useState<Grupo | null>(null);\r\n+  const [plataformas, setPlataformas] = useState<Plataforma[]>([]);\r\n+\r\n+  useEffect(() => {\r\n+    const fetchGrupo = async () => {\r\n+      const res = await fetch('/api/grupos');\r\n+      const data: Grupo[] = await res.json();\r\n+      const encontrado = data.find((g) => g.id === id);\r\n+      setGrupo(encontrado || null);\r\n+    };\r\n+\r\n+    const fetchPlataformas = async () => {\r\n+      const res = await fetch('/api/plataformas');\r\n+      const data: Plataforma[] = await res.json();\r\n+      const doGrupo = data.filter((p) => p.grupoId === id);\r\n+      setPlataformas(doGrupo);\r\n+    };\r\n+\r\n+    if (id) {\r\n+      fetchGrupo();\r\n+      fetchPlataformas();\r\n+    }\r\n+  }, [id]);\r\n+\r\n+  if (!grupo) return <div className=\"p-4\">Grupo não encontrado.</div>;\r\n+\r\n   return (\r\n-    <div className=\"p-6 grid grid-cols-2 gap-4\">\r\n-      {plataformas.map((p) => (\r\n-        <Card key={p.id}>\r\n-          <CardContent className=\"p-4 text-center space-y-2\">\r\n-            {p.imagem ? (\r\n-              <Image\r\n-                src={p.imagem}\r\n-                alt={p.nome}\r\n-                width={300}\r\n-                height={150}\r\n-                className=\"mx-auto object-contain\"\r\n-                unoptimized\r\n-              />\r\n-            ) : (\r\n-              <div className=\"h-32 bg-gray-200 flex items-center justify-center\">Sem imagem</div>\r\n-            )}\r\n-            <div className=\"font-semibold\">{p.nome}</div>\r\n-          </CardContent>\r\n-        </Card>\r\n-      ))}\r\n+    <div className=\"p-6 space-y-6\">\r\n+      {/* Título e imagem do grupo */}\r\n+      <div className=\"text-center space-y-2\">\r\n+        {typeof grupo.imagem === 'string' && grupo.imagem.length > 5 && (\r\n+          <Image\r\n+            src={grupo.imagem}\r\n+            alt={`Logo do grupo ${grupo.nome}`}\r\n+            width={120}\r\n+            height={120}\r\n+            className=\"mx-auto h-32 object-contain\"\r\n+            unoptimized\r\n+          />\r\n+        )}\r\n+        <h1 className=\"text-2xl font-bold\">{grupo.nome}</h1>\r\n+      </div>\r\n+\r\n+      {/* Lista de plataformas */}\r\n+      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n+        {plataformas.map((plataforma) => (\r\n+          <Link key={plataforma.id} href={`/influenciadores/plataformas/${plataforma.id}`}>\r\n+            <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n+              <CardContent className=\"p-6 text-center space-y-2\">\r\n+                {typeof plataforma.imagem === 'string' && plataforma.imagem.length > 5 ? (\r\n+                  <Image\r\n+                    src={plataforma.imagem}\r\n+                    alt={`Logo da plataforma ${plataforma.nome}`}\r\n+                    width={300}\r\n+                    height={300}\r\n+                    className=\"mx-auto mb-2 w-64 h-32 object-contain\"\r\n+                    unoptimized\r\n+                  />\r\n+                ) : (\r\n+                  <div className=\"w-64 h-32 mx-auto mb-2 bg-muted flex items-center justify-center text-gray-400\">\r\n+                    Sem imagem\r\n+                  </div>\r\n+                )}\r\n+                <div className=\"text-sm font-medium\">{plataforma.nome}</div>\r\n+              </CardContent>\r\n+            </Card>\r\n+          </Link>\r\n+        ))}\r\n+      </div>\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1746135702535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,95 +1,182 @@\n 'use client';\r\n \r\n import { useEffect, useState } from 'react';\r\n-import { useParams } from 'next/navigation';\r\n-import Image from 'next/image';\r\n-import { Card, CardContent } from '@/components/ui/card';\r\n-import Link from 'next/link';\r\n+import {\r\n+  Tabs,\r\n+  TabsContent,\r\n+  TabsList,\r\n+  TabsTrigger\r\n+} from \"@/components/ui/tabs\";\r\n+import {\r\n+  Card,\r\n+  CardContent\r\n+} from \"@/components/ui/card\";\r\n+import { Input } from \"@/components/ui/input\";\r\n+import { Button } from \"@/components/ui/button\";\r\n+import { Pencil, Plus } from \"lucide-react\";\r\n+import Image from \"next/image\";\r\n+import Link from \"next/link\";\r\n+import PlataformaModal from \"@/components/PlataformaModal\";\r\n+import GrupoModal from \"@/components/GrupoModal\";\r\n \r\n-interface Grupo {\r\n+interface Plataforma {\r\n   id: string;\r\n   nome: string;\r\n   imagem?: string;\r\n+  cor: string;\r\n+  grupoId: string | null;\r\n }\r\n-\r\n-interface Plataforma {\r\n+interface Grupo {\r\n   id: string;\r\n   nome: string;\r\n   imagem?: string;\r\n-  grupoId: string | null;\r\n }\r\n \r\n-export default function GrupoPage() {\r\n-  const { id } = useParams() as { id: string };\r\n-  const [grupo, setGrupo] = useState<Grupo | null>(null);\r\n+export default function InfluenciadoresPage() {\r\n   const [plataformas, setPlataformas] = useState<Plataforma[]>([]);\r\n+  const [grupos, setGrupos] = useState<Grupo[]>([]);\r\n+  const [busca, setBusca] = useState('');\r\n+  const [abaAtiva, setAbaAtiva] = useState('grupos');\r\n+  const [modalPlataformaAberto, setModalPlataformaAberto] = useState(false);\r\n+  const [modalGrupoAberto, setModalGrupoAberto] = useState(false);\r\n+  const [plataformaEditando, setPlataformaEditando] = useState<Plataforma | null>(null);\r\n+  const [grupoEditando, setGrupoEditando] = useState<Grupo | null>(null);\r\n \r\n+  const buscarPlataformas = async () => {\r\n+    const res = await fetch('/api/plataformas');\r\n+    const data = await res.json();\r\n+    setPlataformas(data);\r\n+  };\r\n+\r\n+  const buscarGrupos = async () => {\r\n+    const res = await fetch('/api/grupos');\r\n+    const data = await res.json();\r\n+    setGrupos(data);\r\n+  };\r\n+\r\n   useEffect(() => {\r\n-    const fetchGrupo = async () => {\r\n-      const res = await fetch('/api/grupos');\r\n-      const data: Grupo[] = await res.json();\r\n-      const encontrado = data.find((g) => g.id === id);\r\n-      setGrupo(encontrado || null);\r\n-    };\r\n+    buscarPlataformas();\r\n+  }, []);\r\n \r\n-    const fetchPlataformas = async () => {\r\n-      const res = await fetch('/api/plataformas');\r\n-      const data: Plataforma[] = await res.json();\r\n-      const doGrupo = data.filter((p) => p.grupoId === id);\r\n-      setPlataformas(doGrupo);\r\n-    };\r\n+  useEffect(() => {\r\n+    if (abaAtiva === 'grupos') buscarGrupos();\r\n+  }, [abaAtiva]);\r\n \r\n-    if (id) {\r\n-      fetchGrupo();\r\n-      fetchPlataformas();\r\n-    }\r\n-  }, [id]);\r\n+  const gruposFiltrados = grupos.filter((g) =>\r\n+    g.nome.toLowerCase().includes(busca.toLowerCase())\r\n+  );\r\n+  const plataformasFiltradas = plataformas.filter((p) =>\r\n+    p.nome.toLowerCase().includes(busca.toLowerCase())\r\n+  );\r\n \r\n-  if (!grupo) return <div className=\"p-4\">Grupo não encontrado.</div>;\r\n-\r\n   return (\r\n-    <div className=\"p-6 space-y-6\">\r\n-      {/* Título e imagem do grupo */}\r\n-      <div className=\"text-center space-y-2\">\r\n-        {typeof grupo.imagem === 'string' && grupo.imagem.length > 5 && (\r\n-          <Image\r\n-            src={grupo.imagem}\r\n-            alt={`Logo do grupo ${grupo.nome}`}\r\n-            width={120}\r\n-            height={120}\r\n-            className=\"mx-auto h-32 object-contain\"\r\n-            unoptimized\r\n+    <div className=\"p-4 space-y-4\">\r\n+      <div className=\"bg-white rounded-xl shadow-sm p-4 flex items-center justify-between w-full mb-4 min-h-[60px]\">\r\n+        <h2 className=\"text-xl font-semibold\">Grupos</h2>\r\n+        <div className=\"flex items-center gap-3\">\r\n+          <Input\r\n+            placeholder=\"Filtrar por nome...\"\r\n+            value={busca}\r\n+            onChange={(e) => setBusca(e.target.value)}\r\n+            className=\"max-w-xs\"\r\n           />\r\n-        )}\r\n-        <h1 className=\"text-2xl font-bold\">{grupo.nome}</h1>\r\n+          <Button\r\n+            className=\"flex gap-2 items-center\"\r\n+            onClick={() => {\r\n+              setGrupoEditando(null);\r\n+              setModalGrupoAberto(true);\r\n+            }}\r\n+          >\r\n+            <Plus className=\"w-4 h-4\" />\r\n+            Novo Grupo\r\n+          </Button>\r\n+        </div>\r\n       </div>\r\n-\r\n-      {/* Lista de plataformas */}\r\n-      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n-        {plataformas.map((plataforma) => (\r\n-          <Link key={plataforma.id} href={`/influenciadores/plataformas/${plataforma.id}`}>\r\n-            <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n-              <CardContent className=\"p-6 text-center space-y-2\">\r\n-                {typeof plataforma.imagem === 'string' && plataforma.imagem.length > 5 ? (\r\n-                  <Image\r\n-                    src={plataforma.imagem}\r\n-                    alt={`Logo da plataforma ${plataforma.nome}`}\r\n-                    width={300}\r\n-                    height={300}\r\n-                    className=\"mx-auto mb-2 w-64 h-32 object-contain\"\r\n-                    unoptimized\r\n-                  />\r\n-                ) : (\r\n-                  <div className=\"w-64 h-32 mx-auto mb-2 bg-muted flex items-center justify-center text-gray-400\">\r\n-                    Sem imagem\r\n-                  </div>\r\n-                )}\r\n-                <div className=\"text-sm font-medium\">{plataforma.nome}</div>\r\n-              </CardContent>\r\n-            </Card>\r\n-          </Link>\r\n-        ))}\r\n-      </div>\r\n+  \r\n+      <Card>\r\n+        <CardContent className=\"p-6\">\r\n+          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n+            {gruposFiltrados.map((grupo) => (\r\n+              <div key={grupo.id} className=\"relative group\">\r\n+                <Link href={`/influenciadores/grupos/${grupo.id}`} className=\"block\">\r\n+                  <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n+                    <CardContent className=\"p-6 text-center space-y-2\">\r\n+                      {grupo.imagem ? (\r\n+                        <Image\r\n+                          src={grupo.imagem}\r\n+                          alt={grupo.nome}\r\n+                          width={120}\r\n+                          height={120}\r\n+                          unoptimized\r\n+                          className=\"mx-auto h-32 object-contain\"\r\n+                        />\r\n+                      ) : (\r\n+                        <div className=\"w-32 h-32 mx-auto bg-gray-200 flex items-center justify-center text-gray-500\">\r\n+                          Sem imagem\r\n+                        </div>\r\n+                      )}\r\n+                      <div className=\"text-sm font-medium\">{grupo.nome}</div>\r\n+                    </CardContent>\r\n+                  </Card>\r\n+                </Link>\r\n+                <Button\r\n+                  size=\"icon\"\r\n+                  variant=\"ghost\"\r\n+                  className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition bg-white/80 hover:bg-gray-600\"\r\n+                  onClick={() => {\r\n+                    setGrupoEditando(grupo);\r\n+                    setModalGrupoAberto(true);\r\n+                  }}\r\n+                >\r\n+                  <Pencil className=\"w-4 h-4\" />\r\n+                </Button>\r\n+              </div>\r\n+            ))}\r\n+          </div>\r\n+        </CardContent>\r\n+      </Card>\r\n+  \r\n+      {/* Modais abaixo continuam funcionando */}\r\n+      <PlataformaModal\r\n+        open={modalPlataformaAberto}\r\n+        onClose={() => {\r\n+          setModalPlataformaAberto(false);\r\n+          setPlataformaEditando(null);\r\n+        }}\r\n+        onSave={async (dados) => {\r\n+          await fetch('/api/plataformas', {\r\n+            method: 'POST',\r\n+            headers: { 'Content-Type': 'application/json' },\r\n+            body: JSON.stringify(dados),\r\n+          });\r\n+          setModalPlataformaAberto(false);\r\n+          setPlataformaEditando(null);\r\n+          buscarPlataformas();\r\n+        }}\r\n+        plataformaAtual={plataformaEditando}\r\n+      />\r\n+  \r\n+      <GrupoModal\r\n+        open={modalGrupoAberto}\r\n+        onClose={() => {\r\n+          setModalGrupoAberto(false);\r\n+          setGrupoEditando(null);\r\n+        }}\r\n+        onSave={async (dados) => {\r\n+          await fetch('/api/grupos', {\r\n+            method: 'POST',\r\n+            headers: { 'Content-Type': 'application/json' },\r\n+            body: JSON.stringify(dados),\r\n+          });\r\n+          await buscarGrupos();\r\n+          await buscarPlataformas();\r\n+          setModalGrupoAberto(false);\r\n+          setGrupoEditando(null);\r\n+        }}\r\n+        grupoAtual={grupoEditando}\r\n+        plataformasDisponiveis={plataformas.filter(p => !p.grupoId || p.grupoId === grupoEditando?.id)}\r\n+      />\r\n     </div>\r\n   );\r\n+  \r\n }\r\n"
                },
                {
                    "date": 1746135739485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,182 +1,63 @@\n 'use client';\r\n \r\n import { useEffect, useState } from 'react';\r\n-import {\r\n-  Tabs,\r\n-  TabsContent,\r\n-  TabsList,\r\n-  TabsTrigger\r\n-} from \"@/components/ui/tabs\";\r\n-import {\r\n-  Card,\r\n-  CardContent\r\n-} from \"@/components/ui/card\";\r\n-import { Input } from \"@/components/ui/input\";\r\n-import { Button } from \"@/components/ui/button\";\r\n-import { Pencil, Plus } from \"lucide-react\";\r\n-import Image from \"next/image\";\r\n-import Link from \"next/link\";\r\n-import PlataformaModal from \"@/components/PlataformaModal\";\r\n-import GrupoModal from \"@/components/GrupoModal\";\r\n+import { useParams } from 'next/navigation';\r\n+import { Card, CardContent } from '@/components/ui/card';\r\n+import Image from 'next/image';\r\n \r\n interface Plataforma {\r\n   id: string;\r\n   nome: string;\r\n   imagem?: string;\r\n-  cor: string;\r\n   grupoId: string | null;\r\n }\r\n-interface Grupo {\r\n-  id: string;\r\n-  nome: string;\r\n-  imagem?: string;\r\n-}\r\n \r\n-export default function InfluenciadoresPage() {\r\n+export default function PlataformasDoGrupoPage() {\r\n+  const { id } = useParams() as { id: string };\r\n   const [plataformas, setPlataformas] = useState<Plataforma[]>([]);\r\n-  const [grupos, setGrupos] = useState<Grupo[]>([]);\r\n-  const [busca, setBusca] = useState('');\r\n-  const [abaAtiva, setAbaAtiva] = useState('grupos');\r\n-  const [modalPlataformaAberto, setModalPlataformaAberto] = useState(false);\r\n-  const [modalGrupoAberto, setModalGrupoAberto] = useState(false);\r\n-  const [plataformaEditando, setPlataformaEditando] = useState<Plataforma | null>(null);\r\n-  const [grupoEditando, setGrupoEditando] = useState<Grupo | null>(null);\r\n \r\n-  const buscarPlataformas = async () => {\r\n-    const res = await fetch('/api/plataformas');\r\n-    const data = await res.json();\r\n-    setPlataformas(data);\r\n-  };\r\n-\r\n-  const buscarGrupos = async () => {\r\n-    const res = await fetch('/api/grupos');\r\n-    const data = await res.json();\r\n-    setGrupos(data);\r\n-  };\r\n-\r\n   useEffect(() => {\r\n-    buscarPlataformas();\r\n-  }, []);\r\n+    const buscar = async () => {\r\n+      const res = await fetch('/api/plataformas');\r\n+      const todas = await res.json();\r\n+      const filtradas = todas.filter((p: Plataforma) => p.grupoId === id);\r\n+      setPlataformas(filtradas);\r\n+    };\r\n \r\n-  useEffect(() => {\r\n-    if (abaAtiva === 'grupos') buscarGrupos();\r\n-  }, [abaAtiva]);\r\n+    if (id) buscar();\r\n+  }, [id]);\r\n \r\n-  const gruposFiltrados = grupos.filter((g) =>\r\n-    g.nome.toLowerCase().includes(busca.toLowerCase())\r\n-  );\r\n-  const plataformasFiltradas = plataformas.filter((p) =>\r\n-    p.nome.toLowerCase().includes(busca.toLowerCase())\r\n-  );\r\n-\r\n   return (\r\n     <div className=\"p-4 space-y-4\">\r\n-      <div className=\"bg-white rounded-xl shadow-sm p-4 flex items-center justify-between w-full mb-4 min-h-[60px]\">\r\n-        <h2 className=\"text-xl font-semibold\">Grupos</h2>\r\n-        <div className=\"flex items-center gap-3\">\r\n-          <Input\r\n-            placeholder=\"Filtrar por nome...\"\r\n-            value={busca}\r\n-            onChange={(e) => setBusca(e.target.value)}\r\n-            className=\"max-w-xs\"\r\n-          />\r\n-          <Button\r\n-            className=\"flex gap-2 items-center\"\r\n-            onClick={() => {\r\n-              setGrupoEditando(null);\r\n-              setModalGrupoAberto(true);\r\n-            }}\r\n-          >\r\n-            <Plus className=\"w-4 h-4\" />\r\n-            Novo Grupo\r\n-          </Button>\r\n+      <h1 className=\"text-xl font-semibold\">Plataformas do grupo {id}</h1>\r\n+\r\n+      {plataformas.length === 0 ? (\r\n+        <p className=\"text-gray-500\">Nenhuma plataforma encontrada para esse grupo.</p>\r\n+      ) : (\r\n+        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n+          {plataformas.map((plataforma) => (\r\n+            <Card key={plataforma.id} className=\"hover:shadow-md transition\">\r\n+              <CardContent className=\"p-4 text-center space-y-2\">\r\n+                {plataforma.imagem ? (\r\n+                  <Image\r\n+                    src={plataforma.imagem}\r\n+                    alt={plataforma.nome}\r\n+                    width={300}\r\n+                    height={150}\r\n+                    unoptimized\r\n+                    className=\"mx-auto h-24 object-contain\"\r\n+                  />\r\n+                ) : (\r\n+                  <div className=\"w-full h-24 bg-gray-200 flex items-center justify-center text-gray-400\">\r\n+                    Sem imagem\r\n+                  </div>\r\n+                )}\r\n+                <p className=\"text-sm font-medium\">{plataforma.nome}</p>\r\n+              </CardContent>\r\n+            </Card>\r\n+          ))}\r\n         </div>\r\n-      </div>\r\n-  \r\n-      <Card>\r\n-        <CardContent className=\"p-6\">\r\n-          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n-            {gruposFiltrados.map((grupo) => (\r\n-              <div key={grupo.id} className=\"relative group\">\r\n-                <Link href={`/influenciadores/grupos/${grupo.id}`} className=\"block\">\r\n-                  <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n-                    <CardContent className=\"p-6 text-center space-y-2\">\r\n-                      {grupo.imagem ? (\r\n-                        <Image\r\n-                          src={grupo.imagem}\r\n-                          alt={grupo.nome}\r\n-                          width={120}\r\n-                          height={120}\r\n-                          unoptimized\r\n-                          className=\"mx-auto h-32 object-contain\"\r\n-                        />\r\n-                      ) : (\r\n-                        <div className=\"w-32 h-32 mx-auto bg-gray-200 flex items-center justify-center text-gray-500\">\r\n-                          Sem imagem\r\n-                        </div>\r\n-                      )}\r\n-                      <div className=\"text-sm font-medium\">{grupo.nome}</div>\r\n-                    </CardContent>\r\n-                  </Card>\r\n-                </Link>\r\n-                <Button\r\n-                  size=\"icon\"\r\n-                  variant=\"ghost\"\r\n-                  className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition bg-white/80 hover:bg-gray-600\"\r\n-                  onClick={() => {\r\n-                    setGrupoEditando(grupo);\r\n-                    setModalGrupoAberto(true);\r\n-                  }}\r\n-                >\r\n-                  <Pencil className=\"w-4 h-4\" />\r\n-                </Button>\r\n-              </div>\r\n-            ))}\r\n-          </div>\r\n-        </CardContent>\r\n-      </Card>\r\n-  \r\n-      {/* Modais abaixo continuam funcionando */}\r\n-      <PlataformaModal\r\n-        open={modalPlataformaAberto}\r\n-        onClose={() => {\r\n-          setModalPlataformaAberto(false);\r\n-          setPlataformaEditando(null);\r\n-        }}\r\n-        onSave={async (dados) => {\r\n-          await fetch('/api/plataformas', {\r\n-            method: 'POST',\r\n-            headers: { 'Content-Type': 'application/json' },\r\n-            body: JSON.stringify(dados),\r\n-          });\r\n-          setModalPlataformaAberto(false);\r\n-          setPlataformaEditando(null);\r\n-          buscarPlataformas();\r\n-        }}\r\n-        plataformaAtual={plataformaEditando}\r\n-      />\r\n-  \r\n-      <GrupoModal\r\n-        open={modalGrupoAberto}\r\n-        onClose={() => {\r\n-          setModalGrupoAberto(false);\r\n-          setGrupoEditando(null);\r\n-        }}\r\n-        onSave={async (dados) => {\r\n-          await fetch('/api/grupos', {\r\n-            method: 'POST',\r\n-            headers: { 'Content-Type': 'application/json' },\r\n-            body: JSON.stringify(dados),\r\n-          });\r\n-          await buscarGrupos();\r\n-          await buscarPlataformas();\r\n-          setModalGrupoAberto(false);\r\n-          setGrupoEditando(null);\r\n-        }}\r\n-        grupoAtual={grupoEditando}\r\n-        plataformasDisponiveis={plataformas.filter(p => !p.grupoId || p.grupoId === grupoEditando?.id)}\r\n-      />\r\n+      )}\r\n     </div>\r\n   );\r\n-  \r\n }\r\n"
                },
                {
                    "date": 1746136915398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,63 +1,19 @@\n 'use client';\r\n \r\n-import { useEffect, useState } from 'react';\r\n import { useParams } from 'next/navigation';\r\n-import { Card, CardContent } from '@/components/ui/card';\r\n-import Image from 'next/image';\r\n+import { useEffect } from 'react';\r\n \r\n-interface Plataforma {\r\n-  id: string;\r\n-  nome: string;\r\n-  imagem?: string;\r\n-  grupoId: string | null;\r\n-}\r\n-\r\n-export default function PlataformasDoGrupoPage() {\r\n+export default function TesteGrupo() {\r\n   const { id } = useParams() as { id: string };\r\n-  const [plataformas, setPlataformas] = useState<Plataforma[]>([]);\r\n \r\n   useEffect(() => {\r\n-    const buscar = async () => {\r\n-      const res = await fetch('/api/plataformas');\r\n-      const todas = await res.json();\r\n-      const filtradas = todas.filter((p: Plataforma) => p.grupoId === id);\r\n-      setPlataformas(filtradas);\r\n-    };\r\n-\r\n-    if (id) buscar();\r\n+    console.log('[CLIENT] Página de grupo aberta com ID:', id);\r\n   }, [id]);\r\n \r\n   return (\r\n-    <div className=\"p-4 space-y-4\">\r\n-      <h1 className=\"text-xl font-semibold\">Plataformas do grupo {id}</h1>\r\n-\r\n-      {plataformas.length === 0 ? (\r\n-        <p className=\"text-gray-500\">Nenhuma plataforma encontrada para esse grupo.</p>\r\n-      ) : (\r\n-        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n-          {plataformas.map((plataforma) => (\r\n-            <Card key={plataforma.id} className=\"hover:shadow-md transition\">\r\n-              <CardContent className=\"p-4 text-center space-y-2\">\r\n-                {plataforma.imagem ? (\r\n-                  <Image\r\n-                    src={plataforma.imagem}\r\n-                    alt={plataforma.nome}\r\n-                    width={300}\r\n-                    height={150}\r\n-                    unoptimized\r\n-                    className=\"mx-auto h-24 object-contain\"\r\n-                  />\r\n-                ) : (\r\n-                  <div className=\"w-full h-24 bg-gray-200 flex items-center justify-center text-gray-400\">\r\n-                    Sem imagem\r\n-                  </div>\r\n-                )}\r\n-                <p className=\"text-sm font-medium\">{plataforma.nome}</p>\r\n-              </CardContent>\r\n-            </Card>\r\n-          ))}\r\n-        </div>\r\n-      )}\r\n+    <div className=\"p-6 space-y-2\">\r\n+      <h1 className=\"text-2xl font-bold text-red-500\">Página do grupo: {id}</h1>\r\n+      <p className=\"text-sm text-gray-600\">Teste simples sem nenhum layout extra.</p>\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1746136948464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +1,182 @@\n 'use client';\r\n \r\n-import { useParams } from 'next/navigation';\r\n-import { useEffect } from 'react';\r\n+import { useEffect, useState } from 'react';\r\n+import {\r\n+  Tabs,\r\n+  TabsContent,\r\n+  TabsList,\r\n+  TabsTrigger\r\n+} from \"@/components/ui/tabs\";\r\n+import {\r\n+  Card,\r\n+  CardContent\r\n+} from \"@/components/ui/card\";\r\n+import { Input } from \"@/components/ui/input\";\r\n+import { Button } from \"@/components/ui/button\";\r\n+import { Pencil, Plus } from \"lucide-react\";\r\n+import Image from \"next/image\";\r\n+import Link from \"next/link\";\r\n+import PlataformaModal from \"@/components/PlataformaModal\";\r\n+import GrupoModal from \"@/components/GrupoModal\";\r\n \r\n-export default function TesteGrupo() {\r\n-  const { id } = useParams() as { id: string };\r\n+interface Plataforma {\r\n+  id: string;\r\n+  nome: string;\r\n+  imagem?: string;\r\n+  cor: string;\r\n+  grupoId: string | null;\r\n+}\r\n+interface Grupo {\r\n+  id: string;\r\n+  nome: string;\r\n+  imagem?: string;\r\n+}\r\n \r\n+export default function InfluenciadoresPage() {\r\n+  const [plataformas, setPlataformas] = useState<Plataforma[]>([]);\r\n+  const [grupos, setGrupos] = useState<Grupo[]>([]);\r\n+  const [busca, setBusca] = useState('');\r\n+  const [abaAtiva, setAbaAtiva] = useState('grupos');\r\n+  const [modalPlataformaAberto, setModalPlataformaAberto] = useState(false);\r\n+  const [modalGrupoAberto, setModalGrupoAberto] = useState(false);\r\n+  const [plataformaEditando, setPlataformaEditando] = useState<Plataforma | null>(null);\r\n+  const [grupoEditando, setGrupoEditando] = useState<Grupo | null>(null);\r\n+\r\n+  const buscarPlataformas = async () => {\r\n+    const res = await fetch('/api/plataformas');\r\n+    const data = await res.json();\r\n+    setPlataformas(data);\r\n+  };\r\n+\r\n+  const buscarGrupos = async () => {\r\n+    const res = await fetch('/api/grupos');\r\n+    const data = await res.json();\r\n+    setGrupos(data);\r\n+  };\r\n+\r\n   useEffect(() => {\r\n-    console.log('[CLIENT] Página de grupo aberta com ID:', id);\r\n-  }, [id]);\r\n+    buscarPlataformas();\r\n+  }, []);\r\n \r\n+  useEffect(() => {\r\n+    if (abaAtiva === 'grupos') buscarGrupos();\r\n+  }, [abaAtiva]);\r\n+\r\n+  const gruposFiltrados = grupos.filter((g) =>\r\n+    g.nome.toLowerCase().includes(busca.toLowerCase())\r\n+  );\r\n+  const plataformasFiltradas = plataformas.filter((p) =>\r\n+    p.nome.toLowerCase().includes(busca.toLowerCase())\r\n+  );\r\n+\r\n   return (\r\n-    <div className=\"p-6 space-y-2\">\r\n-      <h1 className=\"text-2xl font-bold text-red-500\">Página do grupo: {id}</h1>\r\n-      <p className=\"text-sm text-gray-600\">Teste simples sem nenhum layout extra.</p>\r\n+    <div className=\"p-4 space-y-4\">\r\n+      <div className=\"bg-white rounded-xl shadow-sm p-4 flex items-center justify-between w-full mb-4 min-h-[60px]\">\r\n+        <h2 className=\"text-xl font-semibold\">Grupos</h2>\r\n+        <div className=\"flex items-center gap-3\">\r\n+          <Input\r\n+            placeholder=\"Filtrar por nome...\"\r\n+            value={busca}\r\n+            onChange={(e) => setBusca(e.target.value)}\r\n+            className=\"max-w-xs\"\r\n+          />\r\n+          <Button\r\n+            className=\"flex gap-2 items-center\"\r\n+            onClick={() => {\r\n+              setGrupoEditando(null);\r\n+              setModalGrupoAberto(true);\r\n+            }}\r\n+          >\r\n+            <Plus className=\"w-4 h-4\" />\r\n+            Novo Grupo\r\n+          </Button>\r\n+        </div>\r\n+      </div>\r\n+  \r\n+      <Card>\r\n+        <CardContent className=\"p-6\">\r\n+          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n+            {gruposFiltrados.map((grupo) => (\r\n+              <div key={grupo.id} className=\"relative group\">\r\n+                <Link href={`/influenciadores/grupos/${grupo.id}`} className=\"block\">\r\n+                  <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n+                    <CardContent className=\"p-6 text-center space-y-2\">\r\n+                      {grupo.imagem ? (\r\n+                        <Image\r\n+                          src={grupo.imagem}\r\n+                          alt={grupo.nome}\r\n+                          width={120}\r\n+                          height={120}\r\n+                          unoptimized\r\n+                          className=\"mx-auto h-32 object-contain\"\r\n+                        />\r\n+                      ) : (\r\n+                        <div className=\"w-32 h-32 mx-auto bg-gray-200 flex items-center justify-center text-gray-500\">\r\n+                          Sem imagem\r\n+                        </div>\r\n+                      )}\r\n+                      <div className=\"text-sm font-medium\">{grupo.nome}</div>\r\n+                    </CardContent>\r\n+                  </Card>\r\n+                </Link>\r\n+                <Button\r\n+                  size=\"icon\"\r\n+                  variant=\"ghost\"\r\n+                  className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition bg-white/80 hover:bg-gray-600\"\r\n+                  onClick={() => {\r\n+                    setGrupoEditando(grupo);\r\n+                    setModalGrupoAberto(true);\r\n+                  }}\r\n+                >\r\n+                  <Pencil className=\"w-4 h-4\" />\r\n+                </Button>\r\n+              </div>\r\n+            ))}\r\n+          </div>\r\n+        </CardContent>\r\n+      </Card>\r\n+  \r\n+      {/* Modais abaixo continuam funcionando */}\r\n+      <PlataformaModal\r\n+        open={modalPlataformaAberto}\r\n+        onClose={() => {\r\n+          setModalPlataformaAberto(false);\r\n+          setPlataformaEditando(null);\r\n+        }}\r\n+        onSave={async (dados) => {\r\n+          await fetch('/api/plataformas', {\r\n+            method: 'POST',\r\n+            headers: { 'Content-Type': 'application/json' },\r\n+            body: JSON.stringify(dados),\r\n+          });\r\n+          setModalPlataformaAberto(false);\r\n+          setPlataformaEditando(null);\r\n+          buscarPlataformas();\r\n+        }}\r\n+        plataformaAtual={plataformaEditando}\r\n+      />\r\n+  \r\n+      <GrupoModal\r\n+        open={modalGrupoAberto}\r\n+        onClose={() => {\r\n+          setModalGrupoAberto(false);\r\n+          setGrupoEditando(null);\r\n+        }}\r\n+        onSave={async (dados) => {\r\n+          await fetch('/api/grupos', {\r\n+            method: 'POST',\r\n+            headers: { 'Content-Type': 'application/json' },\r\n+            body: JSON.stringify(dados),\r\n+          });\r\n+          await buscarGrupos();\r\n+          await buscarPlataformas();\r\n+          setModalGrupoAberto(false);\r\n+          setGrupoEditando(null);\r\n+        }}\r\n+        grupoAtual={grupoEditando}\r\n+        plataformasDisponiveis={plataformas.filter(p => !p.grupoId || p.grupoId === grupoEditando?.id)}\r\n+      />\r\n     </div>\r\n   );\r\n+  \r\n }\r\n"
                },
                {
                    "date": 1746137059314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,182 +1,19 @@\n 'use client';\r\n \r\n-import { useEffect, useState } from 'react';\r\n-import {\r\n-  Tabs,\r\n-  TabsContent,\r\n-  TabsList,\r\n-  TabsTrigger\r\n-} from \"@/components/ui/tabs\";\r\n-import {\r\n-  Card,\r\n-  CardContent\r\n-} from \"@/components/ui/card\";\r\n-import { Input } from \"@/components/ui/input\";\r\n-import { Button } from \"@/components/ui/button\";\r\n-import { Pencil, Plus } from \"lucide-react\";\r\n-import Image from \"next/image\";\r\n-import Link from \"next/link\";\r\n-import PlataformaModal from \"@/components/PlataformaModal\";\r\n-import GrupoModal from \"@/components/GrupoModal\";\r\n+import { useParams } from 'next/navigation';\r\n+import { useEffect } from 'react';\r\n \r\n-interface Plataforma {\r\n-  id: string;\r\n-  nome: string;\r\n-  imagem?: string;\r\n-  cor: string;\r\n-  grupoId: string | null;\r\n-}\r\n-interface Grupo {\r\n-  id: string;\r\n-  nome: string;\r\n-  imagem?: string;\r\n-}\r\n+export default function TesteGrupo() {\r\n+  const { id } = useParams() as { id: string };\r\n \r\n-export default function InfluenciadoresPage() {\r\n-  const [plataformas, setPlataformas] = useState<Plataforma[]>([]);\r\n-  const [grupos, setGrupos] = useState<Grupo[]>([]);\r\n-  const [busca, setBusca] = useState('');\r\n-  const [abaAtiva, setAbaAtiva] = useState('grupos');\r\n-  const [modalPlataformaAberto, setModalPlataformaAberto] = useState(false);\r\n-  const [modalGrupoAberto, setModalGrupoAberto] = useState(false);\r\n-  const [plataformaEditando, setPlataformaEditando] = useState<Plataforma | null>(null);\r\n-  const [grupoEditando, setGrupoEditando] = useState<Grupo | null>(null);\r\n-\r\n-  const buscarPlataformas = async () => {\r\n-    const res = await fetch('/api/plataformas');\r\n-    const data = await res.json();\r\n-    setPlataformas(data);\r\n-  };\r\n-\r\n-  const buscarGrupos = async () => {\r\n-    const res = await fetch('/api/grupos');\r\n-    const data = await res.json();\r\n-    setGrupos(data);\r\n-  };\r\n-\r\n   useEffect(() => {\r\n-    buscarPlataformas();\r\n-  }, []);\r\n+    console.log('[CLIENT] Página de grupo aberta com ID:', id);\r\n+  }, [id]);\r\n \r\n-  useEffect(() => {\r\n-    if (abaAtiva === 'grupos') buscarGrupos();\r\n-  }, [abaAtiva]);\r\n-\r\n-  const gruposFiltrados = grupos.filter((g) =>\r\n-    g.nome.toLowerCase().includes(busca.toLowerCase())\r\n-  );\r\n-  const plataformasFiltradas = plataformas.filter((p) =>\r\n-    p.nome.toLowerCase().includes(busca.toLowerCase())\r\n-  );\r\n-\r\n   return (\r\n-    <div className=\"p-4 space-y-4\">\r\n-      <div className=\"bg-white rounded-xl shadow-sm p-4 flex items-center justify-between w-full mb-4 min-h-[60px]\">\r\n-        <h2 className=\"text-xl font-semibold\">Grupos</h2>\r\n-        <div className=\"flex items-center gap-3\">\r\n-          <Input\r\n-            placeholder=\"Filtrar por nome...\"\r\n-            value={busca}\r\n-            onChange={(e) => setBusca(e.target.value)}\r\n-            className=\"max-w-xs\"\r\n-          />\r\n-          <Button\r\n-            className=\"flex gap-2 items-center\"\r\n-            onClick={() => {\r\n-              setGrupoEditando(null);\r\n-              setModalGrupoAberto(true);\r\n-            }}\r\n-          >\r\n-            <Plus className=\"w-4 h-4\" />\r\n-            Novo Grupo\r\n-          </Button>\r\n-        </div>\r\n-      </div>\r\n-  \r\n-      <Card>\r\n-        <CardContent className=\"p-6\">\r\n-          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n-            {gruposFiltrados.map((grupo) => (\r\n-              <div key={grupo.id} className=\"relative group\">\r\n-                <Link href={`/influenciadores/grupos/${grupo.id}`} className=\"block\">\r\n-                  <Card className=\"hover:shadow-lg transition cursor-pointer\">\r\n-                    <CardContent className=\"p-6 text-center space-y-2\">\r\n-                      {grupo.imagem ? (\r\n-                        <Image\r\n-                          src={grupo.imagem}\r\n-                          alt={grupo.nome}\r\n-                          width={120}\r\n-                          height={120}\r\n-                          unoptimized\r\n-                          className=\"mx-auto h-32 object-contain\"\r\n-                        />\r\n-                      ) : (\r\n-                        <div className=\"w-32 h-32 mx-auto bg-gray-200 flex items-center justify-center text-gray-500\">\r\n-                          Sem imagem\r\n-                        </div>\r\n-                      )}\r\n-                      <div className=\"text-sm font-medium\">{grupo.nome}</div>\r\n-                    </CardContent>\r\n-                  </Card>\r\n-                </Link>\r\n-                <Button\r\n-                  size=\"icon\"\r\n-                  variant=\"ghost\"\r\n-                  className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition bg-white/80 hover:bg-gray-600\"\r\n-                  onClick={() => {\r\n-                    setGrupoEditando(grupo);\r\n-                    setModalGrupoAberto(true);\r\n-                  }}\r\n-                >\r\n-                  <Pencil className=\"w-4 h-4\" />\r\n-                </Button>\r\n-              </div>\r\n-            ))}\r\n-          </div>\r\n-        </CardContent>\r\n-      </Card>\r\n-  \r\n-      {/* Modais abaixo continuam funcionando */}\r\n-      <PlataformaModal\r\n-        open={modalPlataformaAberto}\r\n-        onClose={() => {\r\n-          setModalPlataformaAberto(false);\r\n-          setPlataformaEditando(null);\r\n-        }}\r\n-        onSave={async (dados) => {\r\n-          await fetch('/api/plataformas', {\r\n-            method: 'POST',\r\n-            headers: { 'Content-Type': 'application/json' },\r\n-            body: JSON.stringify(dados),\r\n-          });\r\n-          setModalPlataformaAberto(false);\r\n-          setPlataformaEditando(null);\r\n-          buscarPlataformas();\r\n-        }}\r\n-        plataformaAtual={plataformaEditando}\r\n-      />\r\n-  \r\n-      <GrupoModal\r\n-        open={modalGrupoAberto}\r\n-        onClose={() => {\r\n-          setModalGrupoAberto(false);\r\n-          setGrupoEditando(null);\r\n-        }}\r\n-        onSave={async (dados) => {\r\n-          await fetch('/api/grupos', {\r\n-            method: 'POST',\r\n-            headers: { 'Content-Type': 'application/json' },\r\n-            body: JSON.stringify(dados),\r\n-          });\r\n-          await buscarGrupos();\r\n-          await buscarPlataformas();\r\n-          setModalGrupoAberto(false);\r\n-          setGrupoEditando(null);\r\n-        }}\r\n-        grupoAtual={grupoEditando}\r\n-        plataformasDisponiveis={plataformas.filter(p => !p.grupoId || p.grupoId === grupoEditando?.id)}\r\n-      />\r\n+    <div className=\"p-6 space-y-2\">\r\n+      <h1 className=\"text-2xl font-bold text-red-500\">Página do grupo: {id}</h1>\r\n+      <p className=\"text-sm text-gray-600\">Teste simples sem nenhum layout extra.</p>\r\n     </div>\r\n   );\r\n-  \r\n }\r\n"
                }
            ],
            "date": 1746132208255,
            "name": "Commit-0",
            "content": "// /app/teste-plataformas/page.tsx\r\n\r\n'use client';\r\n\r\nimport Image from 'next/image';\r\nimport { Card, CardContent } from '@/components/ui/card';\r\n\r\nconst plataformas = [\r\n  {\r\n    id: 'genio777',\r\n    nome: 'Gênio777',\r\n    imagem: '/images/plataformas/genio777.png',\r\n  },\r\n  {\r\n    id: 'pgcoelho',\r\n    nome: 'PG Coelho',\r\n    imagem: '/images/plataformas/pgcoelho.png',\r\n  },\r\n];\r\n\r\nexport default function TestePlataformasPage() {\r\n  return (\r\n    <div className=\"p-6 grid grid-cols-2 gap-4\">\r\n      {plataformas.map((p) => (\r\n        <Card key={p.id}>\r\n          <CardContent className=\"p-4 text-center space-y-2\">\r\n            {p.imagem ? (\r\n              <Image\r\n                src={p.imagem}\r\n                alt={p.nome}\r\n                width={300}\r\n                height={150}\r\n                className=\"mx-auto object-contain\"\r\n                unoptimized\r\n              />\r\n            ) : (\r\n              <div className=\"h-32 bg-gray-200 flex items-center justify-center\">Sem imagem</div>\r\n            )}\r\n            <div className=\"font-semibold\">{p.nome}</div>\r\n          </CardContent>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"
        }
    ]
}