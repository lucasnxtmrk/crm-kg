{
    "sourceFile": "app/[locale]/(protected)/recargas/components/recarga-form.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1745345748558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1745345930475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,11 +80,11 @@\n       </div>\r\n \r\n       <div className=\"col-span-full flex gap-2\">\r\n         <Button type=\"submit\">Salvar</Button>\r\n-        <Button type=\"button\" variant=\"secondary\" onClick={onCancel}>\r\n+        <Button type=\"button\" variant=\"outline\" onClick={onCancel}>\r\n           Cancelar\r\n         </Button>\r\n       </div>\r\n     </form>\r\n   );\r\n-}\r\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1745345748558,
            "name": "Commit-0",
            "content": "'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { plataformas } from '@/lib/data';\r\nimport { Influenciador } from '@/lib/influenciadores';\r\n\r\ntype Props = {\r\n  onCancel: () => void;\r\n};\r\n\r\nexport function RecargaForm({ onCancel }: Props) {\r\n  const [form, setForm] = useState({\r\n    influenciadorId: '',\r\n    plataformaId: '',\r\n    inicio: '',\r\n    termino: '',\r\n    valor: '',\r\n    meta: '',\r\n    atingido: '',\r\n  });\r\n\r\n  return (\r\n    <form className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n      <div>\r\n        <Label>Influenciador</Label>\r\n        <Input\r\n          placeholder=\"ID ou nome do influenciador\"\r\n          value={form.influenciadorId}\r\n          onChange={(e) => setForm({ ...form, influenciadorId: e.target.value })}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <Label>Plataforma</Label>\r\n        <Input\r\n          placeholder=\"ID da plataforma\"\r\n          value={form.plataformaId}\r\n          onChange={(e) => setForm({ ...form, plataformaId: e.target.value })}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <Label>Início</Label>\r\n        <Input type=\"date\" value={form.inicio} onChange={(e) => setForm({ ...form, inicio: e.target.value })} />\r\n      </div>\r\n\r\n      <div>\r\n        <Label>Término</Label>\r\n        <Input type=\"date\" value={form.termino} onChange={(e) => setForm({ ...form, termino: e.target.value })} />\r\n      </div>\r\n\r\n      <div>\r\n        <Label>Valor Recarregado</Label>\r\n        <Input\r\n          type=\"number\"\r\n          value={form.valor}\r\n          onChange={(e) => setForm({ ...form, valor: e.target.value })}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <Label>Meta</Label>\r\n        <Input\r\n          type=\"number\"\r\n          value={form.meta}\r\n          onChange={(e) => setForm({ ...form, meta: e.target.value })}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <Label>Valor Atingido</Label>\r\n        <Input\r\n          type=\"number\"\r\n          value={form.atingido}\r\n          onChange={(e) => setForm({ ...form, atingido: e.target.value })}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"col-span-full flex gap-2\">\r\n        <Button type=\"submit\">Salvar</Button>\r\n        <Button type=\"button\" variant=\"secondary\" onClick={onCancel}>\r\n          Cancelar\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n"
        }
    ]
}