{
    "sourceFile": "app/[locale]/(protected)/recargas/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1745345742274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1745463514296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,30 +3,37 @@\n import { useState } from 'react';\r\n import { Button } from '@/components/ui/button';\r\n import { Card } from '@/components/ui/card';\r\n import { RecargaTable } from './components/table';\r\n-import { RecargaForm } from './components/recarga-form';\r\n+import RecargasModal from '@/components/RecargasModal';\r\n+import { influenciadores } from '@/lib/influenciadores'; // assumindo local por enquanto\r\n \r\n export default function RecargasPage() {\r\n-  const [formVisible, setFormVisible] = useState(false);\r\n+  const [modalOpen, setModalOpen] = useState(false);\r\n \r\n+  const handleSaveRecarga = (recarga: any) => {\r\n+    console.log('Recarga adicionada:', recarga);\r\n+    setModalOpen(false);\r\n+    // Aqui você pode adicionar lógica para salvar no backend ou atualizar estado\r\n+  };\r\n+\r\n   return (\r\n     <div className=\"p-4 space-y-4\">\r\n       <div className=\"flex justify-between items-center\">\r\n         <h2 className=\"text-xl font-semibold\">Histórico de Recargas</h2>\r\n-        <Button onClick={() => setFormVisible(!formVisible)}>\r\n-          {formVisible ? 'Fechar formulário' : 'Nova Recarga'}\r\n-        </Button>\r\n+        <Button onClick={() => setModalOpen(true)}>Nova Recarga</Button>\r\n       </div>\r\n \r\n-      {formVisible && (\r\n-        <Card className=\"p-4\">\r\n-          <RecargaForm onCancel={() => setFormVisible(false)} />\r\n-        </Card>\r\n-      )}\r\n-\r\n       <Card>\r\n         <RecargaTable />\r\n       </Card>\r\n+\r\n+      {/* Modal de Recarga */}\r\n+      <RecargasModal\r\n+        open={modalOpen}\r\n+        setOpen={setModalOpen}\r\n+        onSave={handleSaveRecarga}\r\n+        influenciadores={influenciadores}\r\n+      />\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1745466079161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,26 @@\n-'use client';\r\n+\"use client\";\r\n \r\n-import { useState } from 'react';\r\n-import { Button } from '@/components/ui/button';\r\n-import { Card } from '@/components/ui/card';\r\n-import { RecargaTable } from './components/table';\r\n-import RecargasModal from '@/components/RecargasModal';\r\n-import { influenciadores } from '@/lib/influenciadores'; // assumindo local por enquanto\r\n+import { useState } from \"react\";\r\n+import { Button } from \"@/components/ui/button\";\r\n+import { Card } from \"@/components/ui/card\";\r\n+import { RecargaTable } from \"./components/table\";\r\n+import RecargasModal from \"@/components/RecargasModal\";\r\n+import { influenciadores } from \"@/lib/influenciadores\";\r\n \r\n export default function RecargasPage() {\r\n   const [modalOpen, setModalOpen] = useState(false);\r\n \r\n-  const handleSaveRecarga = (recarga: any) => {\r\n-    console.log('Recarga adicionada:', recarga);\r\n+  const handleSaveRecarga = (recarga: {\r\n+    influenciadorId: string;\r\n+    plataformaId: string;\r\n+    valor: number;\r\n+    inicio: Date;\r\n+    termino: Date;\r\n+  }) => {\r\n+    console.log(\"Recarga adicionada:\", recarga);\r\n+    // Aqui você pode chamar sua API ou atualizar o estado global\r\n     setModalOpen(false);\r\n-    // Aqui você pode adicionar lógica para salvar no backend ou atualizar estado\r\n   };\r\n \r\n   return (\r\n     <div className=\"p-4 space-y-4\">\r\n@@ -26,9 +32,8 @@\n       <Card>\r\n         <RecargaTable />\r\n       </Card>\r\n \r\n-      {/* Modal de Recarga */}\r\n       <RecargasModal\r\n         open={modalOpen}\r\n         setOpen={setModalOpen}\r\n         onSave={handleSaveRecarga}\r\n"
                },
                {
                    "date": 1745466398364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,13 +32,13 @@\n       <Card>\r\n         <RecargaTable />\r\n       </Card>\r\n \r\n-      <RecargasModal\r\n+      {/* <RecargasModal\r\n         open={modalOpen}\r\n         setOpen={setModalOpen}\r\n         onSave={handleSaveRecarga}\r\n         influenciadores={influenciadores}\r\n       />\r\n-    </div>\r\n+    </div> */}\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1745466404151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,8 +37,8 @@\n         open={modalOpen}\r\n         setOpen={setModalOpen}\r\n         onSave={handleSaveRecarga}\r\n         influenciadores={influenciadores}\r\n-      />\r\n-    </div> */}\r\n+      /> */}\r\n+    </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1745466495407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,23 +3,38 @@\n import { useState } from \"react\";\r\n import { Button } from \"@/components/ui/button\";\r\n import { Card } from \"@/components/ui/card\";\r\n import { RecargaTable } from \"./components/table\";\r\n-import RecargasModal from \"@/components/RecargasModal\";\r\n+import { Input } from \"@/components/ui/input\";\r\n+import { Label } from \"@/components/ui/label\";\r\n+import { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\r\n+import { CalendarIcon } from \"lucide-react\";\r\n+import { Popover, PopoverTrigger, PopoverContent } from \"@/components/ui/popover\";\r\n+import { Calendar } from \"@/components/ui/calendar\";\r\n+import { InputGroup, InputGroupText } from \"@/components/ui/input-group\";\r\n+import { format } from \"date-fns\";\r\n+import Select from \"react-select\";\r\n import { influenciadores } from \"@/lib/influenciadores\";\r\n+import { plataformas } from \"@/lib/data\";\r\n \r\n export default function RecargasPage() {\r\n   const [modalOpen, setModalOpen] = useState(false);\r\n \r\n-  const handleSaveRecarga = (recarga: {\r\n-    influenciadorId: string;\r\n-    plataformaId: string;\r\n-    valor: number;\r\n-    inicio: Date;\r\n-    termino: Date;\r\n-  }) => {\r\n-    console.log(\"Recarga adicionada:\", recarga);\r\n-    // Aqui você pode chamar sua API ou atualizar o estado global\r\n+  const [influenciadorId, setInfluenciadorId] = useState<string | null>(null);\r\n+  const [plataformaId, setPlataformaId] = useState<string | null>(null);\r\n+  const [valor, setValor] = useState<number>(0);\r\n+  const [inicio, setInicio] = useState<Date>(new Date());\r\n+  const [termino, setTermino] = useState<Date>(new Date());\r\n+\r\n+  const handleSaveRecarga = () => {\r\n+    if (!influenciadorId || !plataformaId || !valor || !inicio || !termino) return;\r\n+    console.log(\"Recarga adicionada:\", {\r\n+      influenciadorId,\r\n+      plataformaId,\r\n+      valor,\r\n+      inicio,\r\n+      termino,\r\n+    });\r\n     setModalOpen(false);\r\n   };\r\n \r\n   return (\r\n@@ -32,13 +47,93 @@\n       <Card>\r\n         <RecargaTable />\r\n       </Card>\r\n \r\n-      {/* <RecargasModal\r\n-        open={modalOpen}\r\n-        setOpen={setModalOpen}\r\n-        onSave={handleSaveRecarga}\r\n-        influenciadores={influenciadores}\r\n-      /> */}\r\n+      <Dialog open={modalOpen} onOpenChange={setModalOpen}>\r\n+        <DialogContent>\r\n+          <DialogHeader>\r\n+            <DialogTitle>Adicionar Recarga</DialogTitle>\r\n+          </DialogHeader>\r\n+\r\n+          <div className=\"space-y-4\">\r\n+            <div className=\"space-y-1.5\">\r\n+              <Label>Influenciador</Label>\r\n+              <Select\r\n+                options={influenciadores.map((inf) => ({ value: inf.id, label: inf.nome }))}\r\n+                onChange={(e) => setInfluenciadorId(e?.value || null)}\r\n+                placeholder=\"Selecione um influenciador\"\r\n+              />\r\n+            </div>\r\n+\r\n+            <div className=\"space-y-1.5\">\r\n+              <Label>Plataforma</Label>\r\n+              <Select\r\n+                options={plataformas.map((p) => ({ value: p.id, label: p.nome }))}\r\n+                onChange={(e) => setPlataformaId(e?.value || null)}\r\n+                placeholder=\"Selecione a plataforma\"\r\n+              />\r\n+            </div>\r\n+\r\n+            <div className=\"space-y-1.5\">\r\n+              <Label>Valor da Recarga</Label>\r\n+              <InputGroup>\r\n+                <InputGroupText>R$</InputGroupText>\r\n+                <Input\r\n+                  type=\"number\"\r\n+                  value={valor}\r\n+                  onChange={(e) => setValor(Number(e.target.value))}\r\n+                />\r\n+              </InputGroup>\r\n+            </div>\r\n+\r\n+            <div className=\"grid grid-cols-2 gap-4\">\r\n+              <div className=\"space-y-1.5\">\r\n+                <Label>Data de Início</Label>\r\n+                <Popover>\r\n+                  <PopoverTrigger asChild>\r\n+                    <Button variant=\"outline\" className=\"w-full justify-start text-left\">\r\n+                      <CalendarIcon className=\"mr-2 h-4 w-4\" />\r\n+                      {format(inicio, \"dd/MM/yyyy\")}\r\n+                    </Button>\r\n+                  </PopoverTrigger>\r\n+                  <PopoverContent className=\"w-auto p-0\">\r\n+                    <Calendar\r\n+                      mode=\"single\"\r\n+                      selected={inicio}\r\n+                      onSelect={(date) => date && setInicio(date)}\r\n+                    />\r\n+                  </PopoverContent>\r\n+                </Popover>\r\n+              </div>\r\n+\r\n+              <div className=\"space-y-1.5\">\r\n+                <Label>Data de Término</Label>\r\n+                <Popover>\r\n+                  <PopoverTrigger asChild>\r\n+                    <Button variant=\"outline\" className=\"w-full justify-start text-left\">\r\n+                      <CalendarIcon className=\"mr-2 h-4 w-4\" />\r\n+                      {format(termino, \"dd/MM/yyyy\")}\r\n+                    </Button>\r\n+                  </PopoverTrigger>\r\n+                  <PopoverContent className=\"w-auto p-0\">\r\n+                    <Calendar\r\n+                      mode=\"single\"\r\n+                      selected={termino}\r\n+                      onSelect={(date) => date && setTermino(date)}\r\n+                    />\r\n+                  </PopoverContent>\r\n+                </Popover>\r\n+              </div>\r\n+            </div>\r\n+\r\n+            <div className=\"flex justify-end gap-2\">\r\n+              <Button variant=\"ghost\" onClick={() => setModalOpen(false)}>\r\n+                Cancelar\r\n+              </Button>\r\n+              <Button onClick={handleSaveRecarga}>Adicionar Recarga</Button>\r\n+            </div>\r\n+          </div>\r\n+        </DialogContent>\r\n+      </Dialog>\r\n     </div>\r\n   );\r\n-}\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1745466691276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,8 +37,9 @@\n     setModalOpen(false);\r\n   };\r\n \r\n   return (\r\n+    \r\n     <div className=\"p-4 space-y-4\">\r\n       <div className=\"flex justify-between items-center\">\r\n         <h2 className=\"text-xl font-semibold\">Histórico de Recargas</h2>\r\n         <Button onClick={() => setModalOpen(true)}>Nova Recarga</Button>\r\n@@ -47,93 +48,19 @@\n       <Card>\r\n         <RecargaTable />\r\n       </Card>\r\n \r\n-      <Dialog open={modalOpen} onOpenChange={setModalOpen}>\r\n-        <DialogContent>\r\n-          <DialogHeader>\r\n-            <DialogTitle>Adicionar Recarga</DialogTitle>\r\n-          </DialogHeader>\r\n-\r\n-          <div className=\"space-y-4\">\r\n-            <div className=\"space-y-1.5\">\r\n-              <Label>Influenciador</Label>\r\n-              <Select\r\n-                options={influenciadores.map((inf) => ({ value: inf.id, label: inf.nome }))}\r\n-                onChange={(e) => setInfluenciadorId(e?.value || null)}\r\n-                placeholder=\"Selecione um influenciador\"\r\n-              />\r\n-            </div>\r\n-\r\n-            <div className=\"space-y-1.5\">\r\n-              <Label>Plataforma</Label>\r\n-              <Select\r\n-                options={plataformas.map((p) => ({ value: p.id, label: p.nome }))}\r\n-                onChange={(e) => setPlataformaId(e?.value || null)}\r\n-                placeholder=\"Selecione a plataforma\"\r\n-              />\r\n-            </div>\r\n-\r\n-            <div className=\"space-y-1.5\">\r\n-              <Label>Valor da Recarga</Label>\r\n-              <InputGroup>\r\n-                <InputGroupText>R$</InputGroupText>\r\n-                <Input\r\n-                  type=\"number\"\r\n-                  value={valor}\r\n-                  onChange={(e) => setValor(Number(e.target.value))}\r\n-                />\r\n-              </InputGroup>\r\n-            </div>\r\n-\r\n-            <div className=\"grid grid-cols-2 gap-4\">\r\n-              <div className=\"space-y-1.5\">\r\n-                <Label>Data de Início</Label>\r\n-                <Popover>\r\n-                  <PopoverTrigger asChild>\r\n-                    <Button variant=\"outline\" className=\"w-full justify-start text-left\">\r\n-                      <CalendarIcon className=\"mr-2 h-4 w-4\" />\r\n-                      {format(inicio, \"dd/MM/yyyy\")}\r\n-                    </Button>\r\n-                  </PopoverTrigger>\r\n-                  <PopoverContent className=\"w-auto p-0\">\r\n-                    <Calendar\r\n-                      mode=\"single\"\r\n-                      selected={inicio}\r\n-                      onSelect={(date) => date && setInicio(date)}\r\n-                    />\r\n-                  </PopoverContent>\r\n-                </Popover>\r\n-              </div>\r\n-\r\n-              <div className=\"space-y-1.5\">\r\n-                <Label>Data de Término</Label>\r\n-                <Popover>\r\n-                  <PopoverTrigger asChild>\r\n-                    <Button variant=\"outline\" className=\"w-full justify-start text-left\">\r\n-                      <CalendarIcon className=\"mr-2 h-4 w-4\" />\r\n-                      {format(termino, \"dd/MM/yyyy\")}\r\n-                    </Button>\r\n-                  </PopoverTrigger>\r\n-                  <PopoverContent className=\"w-auto p-0\">\r\n-                    <Calendar\r\n-                      mode=\"single\"\r\n-                      selected={termino}\r\n-                      onSelect={(date) => date && setTermino(date)}\r\n-                    />\r\n-                  </PopoverContent>\r\n-                </Popover>\r\n-              </div>\r\n-            </div>\r\n-\r\n-            <div className=\"flex justify-end gap-2\">\r\n-              <Button variant=\"ghost\" onClick={() => setModalOpen(false)}>\r\n-                Cancelar\r\n-              </Button>\r\n-              <Button onClick={handleSaveRecarga}>Adicionar Recarga</Button>\r\n-            </div>\r\n+      {modalOpen && (\r\n+      <div className=\"fixed inset-0 z-50 bg-black/50 flex items-center justify-center\">\r\n+        <div className=\"bg-white p-6 rounded shadow max-w-md w-full\">\r\n+          <h2 className=\"text-lg font-semibold mb-4\">Teste Modal</h2>\r\n+          <p>Esse é um teste de modal simples.</p>\r\n+          <div className=\"mt-4 flex justify-end gap-2\">\r\n+            <Button variant=\"ghost\" onClick={() => setModalOpen(false)}>Cancelar</Button>\r\n+            <Button onClick={() => setModalOpen(false)}>Salvar</Button>\r\n           </div>\r\n-        </DialogContent>\r\n-      </Dialog>\r\n+        </div>\r\n+      </div>\r\n+    )}\r\n     </div>\r\n   );\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1745467188659,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,18 +49,14 @@\n         <RecargaTable />\r\n       </Card>\r\n \r\n       {modalOpen && (\r\n-      <div className=\"fixed inset-0 z-50 bg-black/50 flex items-center justify-center\">\r\n-        <div className=\"bg-white p-6 rounded shadow max-w-md w-full\">\r\n-          <h2 className=\"text-lg font-semibold mb-4\">Teste Modal</h2>\r\n-          <p>Esse é um teste de modal simples.</p>\r\n-          <div className=\"mt-4 flex justify-end gap-2\">\r\n-            <Button variant=\"ghost\" onClick={() => setModalOpen(false)}>Cancelar</Button>\r\n-            <Button onClick={() => setModalOpen(false)}>Salvar</Button>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    )}\r\n+  <RecargasModal\r\n+    open={modalOpen}\r\n+    setOpen={setModalOpen}\r\n+    onSave={handleSaveRecarga}\r\n+    influenciadores={influenciadores}\r\n+  />\r\n+)}\r\n     </div>\r\n   );\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1745467196100,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,9 @@\n import { format } from \"date-fns\";\r\n import Select from \"react-select\";\r\n import { influenciadores } from \"@/lib/influenciadores\";\r\n import { plataformas } from \"@/lib/data\";\r\n+import RecargasModal from \"@/components/RecargasModal\";\r\n \r\n export default function RecargasPage() {\r\n   const [modalOpen, setModalOpen] = useState(false);\r\n \r\n"
                },
                {
                    "date": 1745467472878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,44 +3,27 @@\n import { useState } from \"react\";\r\n import { Button } from \"@/components/ui/button\";\r\n import { Card } from \"@/components/ui/card\";\r\n import { RecargaTable } from \"./components/table\";\r\n-import { Input } from \"@/components/ui/input\";\r\n-import { Label } from \"@/components/ui/label\";\r\n-import { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\r\n-import { CalendarIcon } from \"lucide-react\";\r\n-import { Popover, PopoverTrigger, PopoverContent } from \"@/components/ui/popover\";\r\n-import { Calendar } from \"@/components/ui/calendar\";\r\n-import { InputGroup, InputGroupText } from \"@/components/ui/input-group\";\r\n-import { format } from \"date-fns\";\r\n-import Select from \"react-select\";\r\n+import RecargasModal from \"@/components/RecargasModal\";\r\n import { influenciadores } from \"@/lib/influenciadores\";\r\n-import { plataformas } from \"@/lib/data\";\r\n-import RecargasModal from \"@/components/RecargasModal\";\r\n \r\n export default function RecargasPage() {\r\n   const [modalOpen, setModalOpen] = useState(false);\r\n \r\n-  const [influenciadorId, setInfluenciadorId] = useState<string | null>(null);\r\n-  const [plataformaId, setPlataformaId] = useState<string | null>(null);\r\n-  const [valor, setValor] = useState<number>(0);\r\n-  const [inicio, setInicio] = useState<Date>(new Date());\r\n-  const [termino, setTermino] = useState<Date>(new Date());\r\n-\r\n-  const handleSaveRecarga = () => {\r\n-    if (!influenciadorId || !plataformaId || !valor || !inicio || !termino) return;\r\n-    console.log(\"Recarga adicionada:\", {\r\n-      influenciadorId,\r\n-      plataformaId,\r\n-      valor,\r\n-      inicio,\r\n-      termino,\r\n-    });\r\n+  const handleSaveRecarga = (recarga: {\r\n+    influenciadorId: string;\r\n+    plataformaId: string;\r\n+    valor: number;\r\n+    inicio: Date;\r\n+    termino: Date;\r\n+  }) => {\r\n+    console.log(\"Recarga adicionada:\", recarga);\r\n     setModalOpen(false);\r\n+    // Aqui você pode salvar no backend ou atualizar o estado global\r\n   };\r\n \r\n   return (\r\n-    \r\n     <div className=\"p-4 space-y-4\">\r\n       <div className=\"flex justify-between items-center\">\r\n         <h2 className=\"text-xl font-semibold\">Histórico de Recargas</h2>\r\n         <Button onClick={() => setModalOpen(true)}>Nova Recarga</Button>\r\n@@ -49,15 +32,13 @@\n       <Card>\r\n         <RecargaTable />\r\n       </Card>\r\n \r\n-      {modalOpen && (\r\n-  <RecargasModal\r\n-    open={modalOpen}\r\n-    setOpen={setModalOpen}\r\n-    onSave={handleSaveRecarga}\r\n-    influenciadores={influenciadores}\r\n-  />\r\n-)}\r\n+      <RecargasModal\r\n+        open={modalOpen}\r\n+        onClose={() => setModalOpen(false)}\r\n\\ No newline at end of file\n+        onSave={handleSaveRecarga}\r\n+        influenciadores={influenciadores}\r\n+      />\r\n     </div>\r\n   );\r\n-}\n+}\r\n"
                },
                {
                    "date": 1745468027972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,5 +40,5 @@\n         influenciadores={influenciadores}\r\n       />\r\n     </div>\r\n   );\r\n-}\n\\ No newline at end of file\n+}\r\n"
                },
                {
                    "date": 1745510680962,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,12 +23,8 @@\n   };\r\n \r\n   return (\r\n     <div className=\"p-4 space-y-4\">\r\n-      <div className=\"flex justify-between items-center\">\r\n-        <h2 className=\"text-xl font-semibold\">Histórico de Recargas</h2>\r\n-        <Button onClick={() => setModalOpen(true)}>Nova Recarga</Button>\r\n-      </div>\r\n \r\n       <Card>\r\n         <RecargaTable />\r\n       </Card>\r\n"
                },
                {
                    "date": 1745511165312,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,34 +7,14 @@\n import RecargasModal from \"@/components/RecargasModal\";\r\n import { influenciadores } from \"@/lib/influenciadores\";\r\n \r\n export default function RecargasPage() {\r\n-  const [modalOpen, setModalOpen] = useState(false);\r\n \r\n-  const handleSaveRecarga = (recarga: {\r\n-    influenciadorId: string;\r\n-    plataformaId: string;\r\n-    valor: number;\r\n-    inicio: Date;\r\n-    termino: Date;\r\n-  }) => {\r\n-    console.log(\"Recarga adicionada:\", recarga);\r\n-    setModalOpen(false);\r\n-    // Aqui você pode salvar no backend ou atualizar o estado global\r\n-  };\r\n-\r\n   return (\r\n     <div className=\"p-4 space-y-4\">\r\n \r\n       <Card>\r\n         <RecargaTable />\r\n       </Card>\r\n-\r\n-      <RecargasModal\r\n-        open={modalOpen}\r\n-        onClose={() => setModalOpen(false)}\r\n-        onSave={handleSaveRecarga}\r\n-        influenciadores={influenciadores}\r\n-      />\r\n     </div>\r\n   );\r\n }\r\n"
                }
            ],
            "date": 1745345742274,
            "name": "Commit-0",
            "content": "'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card } from '@/components/ui/card';\r\nimport { RecargaTable } from './components/table';\r\nimport { RecargaForm } from './components/recarga-form';\r\n\r\nexport default function RecargasPage() {\r\n  const [formVisible, setFormVisible] = useState(false);\r\n\r\n  return (\r\n    <div className=\"p-4 space-y-4\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <h2 className=\"text-xl font-semibold\">Histórico de Recargas</h2>\r\n        <Button onClick={() => setFormVisible(!formVisible)}>\r\n          {formVisible ? 'Fechar formulário' : 'Nova Recarga'}\r\n        </Button>\r\n      </div>\r\n\r\n      {formVisible && (\r\n        <Card className=\"p-4\">\r\n          <RecargaForm onCancel={() => setFormVisible(false)} />\r\n        </Card>\r\n      )}\r\n\r\n      <Card>\r\n        <RecargaTable />\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n"
        }
    ]
}